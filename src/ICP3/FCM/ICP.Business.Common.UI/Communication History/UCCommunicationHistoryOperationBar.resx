<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="barManager.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>130, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACg
        DgAAAk1TRnQBSQFMAgEBBgEAAcwBAAHMAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAv8D9gX/AvYB9Af/
        AvYB9AL/AfQBGQGuBP8gAAH0Af8F9gH/A/YBwwH2AfQD/wH0Af8B9AL2A/8B9AFmAWwC9AL/IAAB9gEa
        AW4ISgFLAUoBbgH0Af8B9AL/AvYBGwH/AfQBGQFmAc8DZgG7ARkgAAEaAXQBUQZLAVEDSwFKAewE/wP2
        AfIB8wFsAq4CtAGuAWwBtSAAAXQBUQKgAXoB5QOaA3oBUQFLAUoBwwH/AQcCbQHqAW0B7AETAQkBtALP
        Aa4BtAGuAWYgAAJSAXoBoAF5AnoCmgGgAnoBeQF0AUoBwwH/AesB9AEbAfAB9AH/AfABZgO1AdwCtAGL
        IAACUgFYAaAB5QKgAcMCmgKgAXkBUQEpAUsB/wHsAfMB8QEHAe8B8wIZAYsBCQFmAosBtAGLIAABMAFY
        AVEEoAPDAqACeQFRAUoB9AHtA/QB8wH3AfQBGQHdAWwBZgEZAbUBrgFsIAABUgHlAVEB5QKgBMMCoAF5
        AZoBUQFKAf8B7AH/AfEB9AHzAfcC7wL3AW0BGQH0AZEBriAAAVIBeQFSAXkCoAXDAqABwwFzAUoB/wFt
        Av8BvAEHBP8B9AGSAvMB8QFtIAABUgF6AXkBUgFRAXQBUQN0AVECUgJzAcMB/wHsAf8B8gEHAf8B8gL/
        AfEC/wHvAbwB8wFtIAABdAKgAZoBegKgAsMBmgGgAcMBUQGTAcMB9gH/AfcB8AH3BP8B9AH2ARsB8wH2
        Ae8B8wGSIAABcwHDA6ACwwF0AVEEdAHDAfYC9AHtAQcD/wHzAf8B9gH/AfQB8wH2Af8B9wHsIAABwwF0
        BMMBcwbDAfYD/wHsB/8B8wP/AfMB/wGSIAACwwGZAnMBHAL2ARsC9gHDAfYB9AHzAf8B9gHwAZIB7QLs
        Ae0D7AHrAm0B7AFtAe8gAATDAfYBGwT/BPYB/wH0AfYBGwH/AfQM/yAAAfYC9AP/A64E/wH2AsMDAAHw
        Ae8B6gNtAfcB7wHrAm0B6gHvEQABkgESChQBEgGSAQAC9gH0ARkB/wGuAYsBrgGGAa4C/wHzAf8B9gH0
        AwABBwFtAe0C7wHtAesB7AHtAu8B7QFtEAAC7AEHCvABBwHsAe0B8wH/Aq4BhgOtAbQBiwKuAZEDrgIA
        AbQBrgFtAbwBbQIUAhICFAHqAQcBbRAAAeoB8AHvAm0BEgFtARICbQTvAfAB6gH/ARIBZgG0Aa0B1QOz
        AdsEiwFmAc8CAAG0Aa4B7AG8AbUBFAEHAbwBBwHvARQBtAEHAewBAAO1ApEIrgIAAW0B8AHvAewB/wFt
        Af8BbQH/AewE7wHwAW0B/wESAf8DGQHhAbMBgQG5AtsBtAEZAbUBrgIAAbQBkQHrAbwB6wETAW0B7QHs
        AW0BEwFtAQcB7AEAAbUBCQMZAdwBCQHcAdsCtAHPAa4CAAFtAfABBwLsAesB7AHrAuwEBwHwAW0B9AFt
        A/8B9AHiAeECswLbAa0BGQGvAa4CAAG0AQkBrgHtAfMB8QEHAuwB8AHxAQcB7QHsAQACtQHzAvQDGQLc
        AdsCrgIAAesB8AEHAZIB/wHtAf8B7QH/AZIEBwHwAesB/wHsAfQC9gG8AfABCQHcAbMBrQGzAbQB9AG1
        AY0CAAG0AQkBuwHtAewBkgHsArUB7AGSAewB9wG8AQABtQEZAbUB8wP0AhkBCQHPAdsBrgIAAewC8wLv
        AfcB7wH3Au8F8wHsAf8BrgL/AfQD/wKLAq0BiwH0Ae0B6wIAAbQGCQS1AbQDAAG1AfQBCQG1BPMBCQHP
        AgkBrgIAAe0B/wz0Af8B7AH0AbQB/wH0AeIBCQEZAQkD3QH0AfIB/wHsAesCAAG1CAkCtQG0AwABtQEZ
        AbUBoAW1AXoBtQEJAa4CAAGSAv8K6gH0Af8B7QH/AbUB9AGLAa0BiwK0Af8B9AH/AeoB7wHzAZEBbQIA
        AbUKCQG0AwACtQPDAqABmgN6AbUBrgIAAe8BvAH/AW0B/wbzAf8BbQEHAbwB7wH/AZEB4gG0AbMBiwGm
        AeIC/wH2ARwB7QH2AewBbQIAAbUKCQG0AwABtQOgApoGegGuAwABBwH3AesB/wbzAf8B6wH3AQcBAAH0
        AbUB4gGLAdsBtAGzAYsC9AH/AfYC/wHtAewCAAsJAbQEAAG1AcME9gKgAZoBegGRBgAB7AH/BvQB/wHs
        AwAB9AG1BLQB3AG0AYsBtAG7A7UBrgH/AgALCQG0BQABtQT2AcMBoAGaAZEHAAHsAfQG8wH0AewDAAL0
        Af8BiwEZAeIBtAEZAdwDiwGuA/8CAAUJBbUCtAYAAbUD9gLDAZEIAAHtAfQG8wH0Ae0DAAH0Af8B9AP/
        AeIBtAEZAQkBtAGLAv8B9AH/FQAFtQkAAZII9AGSAwAG/wH0Af8BtAG1Aa4BGQL/AvYjAAr3AwABQgFN
        AT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4MAAeABAAL/AYABAQIAAeABAAL/BAABwAEA
        Av8EAAHAAQABgAEDBAABwAEAAYABAwQAAcABAAGAAQMEAAHAAQABgAEDBAABwAEDAYABAwQAAcABAwGA
        AQMEAAHAAQMBgAEDBAABwAEDAYABAwGAAQECAAHAAQMBwAEHAeABBwIAAcABAwHgAQ8B4AEHAgABwAED
        AfABHwHgAQcCAAL/AfgBPwHgAQcCAAT/AeABBws=
</value>
  </data>
</root>