<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTipController.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="attachmentPanel.DataSource" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFNJQ1AuTWVzc2FnZS5TZXJ2aWNlSW50ZXJmYWNlLCBWZXJzaW9u
        PTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbAUBAAAAJElDUC5NZXNz
        YWdlLlNlcnZpY2VJbnRlcmZhY2UuTWVzc2FnZRgAAAATPElkPmtfX0JhY2tpbmdGaWVsZBU8VHlwZT5r
        X19CYWNraW5nRmllbGQePEhhc0F0dGFjaG1lbnQ+a19fQmFja2luZ0ZpZWxkFjxTdGF0ZT5rX19CYWNr
        aW5nRmllbGQYPFN1YmplY3Q+a19fQmFja2luZ0ZpZWxkFzxTZW5kVG8+a19fQmFja2luZ0ZpZWxkGTxT
        ZW5kRnJvbT5rX19CYWNraW5nRmllbGQVPEJvZHk+a19fQmFja2luZ0ZpZWxkGzxDcmVhdGVEYXRlPmtf
        X0JhY2tpbmdGaWVsZBs8VXBkYXRlRGF0ZT5rX19CYWNraW5nRmllbGQZPEZvbGRlcklkPmtfX0JhY2tp
        bmdGaWVsZBs8Rm9sZGVyTmFtZT5rX19CYWNraW5nRmllbGQTPENDPmtfX0JhY2tpbmdGaWVsZBs8Qm9k
        eUZvcm1hdD5rX19CYWNraW5nRmllbGQcPEF0dGFjaG1lbnRzPmtfX0JhY2tpbmdGaWVsZBw8Q3JlYXRv
        ck5hbWU+a19fQmFja2luZ0ZpZWxkGTxDcmVhdGVCeT5rX19CYWNraW5nRmllbGQaPE1lc3NhZ2VJZD5r
        X19CYWNraW5nRmllbGQhPFN0YXRlRGVzY3JpcHRpb24+a19fQmFja2luZ0ZpZWxkFTxTaXplPmtfX0Jh
        Y2tpbmdGaWVsZBk8UHJpb3JpdHk+a19fQmFja2luZ0ZpZWxkFTxGbGFnPmtfX0JhY2tpbmdGaWVsZBQ8
        V2F5PmtfX0JhY2tpbmdGaWVsZB88VXNlclByb3BlcnRpZXM+a19fQmFja2luZ0ZpZWxkAwQABAEBAQEA
        AwMBAQQDAQMBAQAEBAQEC1N5c3RlbS5HdWlkKElDUC5NZXNzYWdlLlNlcnZpY2VJbnRlcmZhY2UuTWVz
        c2FnZVR5cGUCAAAAASlJQ1AuTWVzc2FnZS5TZXJ2aWNlSW50ZXJmYWNlLk1lc3NhZ2VTdGF0ZQIAAAAN
        cVN5c3RlbS5OdWxsYWJsZWAxW1tTeXN0ZW0uRGF0ZVRpbWUsIG1zY29ybGliLCBWZXJzaW9uPTIuMC4w
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OV1dC1N5c3Rl
        bS5HdWlkJ0lDUC5NZXNzYWdlLlNlcnZpY2VJbnRlcmZhY2UuQm9keUZvcm1hdAIAAACoAVN5c3RlbS5D
        b2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbSUNQLk1lc3NhZ2UuU2VydmljZUludGVyZmFjZS5BdHRh
        Y2htZW50Q29udGVudCwgSUNQLk1lc3NhZ2UuU2VydmljZUludGVyZmFjZSwgVmVyc2lvbj0xLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGxdXQtTeXN0ZW0uR3VpZAksSUNQLk1l
        c3NhZ2UuU2VydmljZUludGVyZmFjZS5NZXNzYWdlUHJpb3JpdHkCAAAAKElDUC5NZXNzYWdlLlNlcnZp
        Y2VJbnRlcmZhY2UuTWVzc2FnZUZsYWcCAAAAJ0lDUC5NZXNzYWdlLlNlcnZpY2VJbnRlcmZhY2UuTWVz
        c2FnZVdheQIAAAA4SUNQLk1lc3NhZ2UuU2VydmljZUludGVyZmFjZS5NZXNzYWdlVXNlclByb3BlcnRp
        ZXNPYmplY3QCAAAAAgAAAAT9////C1N5c3RlbS5HdWlkCwAAAAJfYQJfYgJfYwJfZAJfZQJfZgJfZwJf
        aAJfaQJfagJfawAAAAAAAAAAAAAACAcHAgICAgICAgIAAAAAAAAAAAAAAAAAAAAABfz///8oSUNQLk1l
        c3NhZ2UuU2VydmljZUludGVyZmFjZS5NZXNzYWdlVHlwZQEAAAAHdmFsdWVfXwAIAgAAAAEAAAAABfv/
        //8pSUNQLk1lc3NhZ2UuU2VydmljZUludGVyZmFjZS5NZXNzYWdlU3RhdGUBAAAAB3ZhbHVlX18ACAIA
        AAABAAAACgoKCh7xhisync8ICgH6/////f///wAAAAAAAAAAAAAAAAAAAAAKCgX5////J0lDUC5NZXNz
        YWdlLlNlcnZpY2VJbnRlcmZhY2UuQm9keUZvcm1hdAEAAAAHdmFsdWVfXwAIAgAAAAIAAAAJCAAAAAoB
        9/////3///8AAAAAAAAAAAAAAAAAAAAACgoAAAAAAAAAAAX2////LElDUC5NZXNzYWdlLlNlcnZpY2VJ
        bnRlcmZhY2UuTWVzc2FnZVByaW9yaXR5AQAAAAd2YWx1ZV9fAAgCAAAAAQAAAAX1////KElDUC5NZXNz
        YWdlLlNlcnZpY2VJbnRlcmZhY2UuTWVzc2FnZUZsYWcBAAAAB3ZhbHVlX18ACAIAAAABAAAABfT///8n
        SUNQLk1lc3NhZ2UuU2VydmljZUludGVyZmFjZS5NZXNzYWdlV2F5AQAAAAd2YWx1ZV9fAAgCAAAAAQAA
        AAoECAAAAKgBU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tJQ1AuTWVzc2FnZS5TZXJ2
        aWNlSW50ZXJmYWNlLkF0dGFjaG1lbnRDb250ZW50LCBJQ1AuTWVzc2FnZS5TZXJ2aWNlSW50ZXJmYWNl
        LCBWZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dAwAA
        AAZfaXRlbXMFX3NpemUIX3ZlcnNpb24EAAAwSUNQLk1lc3NhZ2UuU2VydmljZUludGVyZmFjZS5BdHRh
        Y2htZW50Q29udGVudFtdAgAAAAgICQ0AAAAAAAAAAAAAAAcNAAAAAAEAAAAAAAAABC5JQ1AuTWVzc2Fn
        ZS5TZXJ2aWNlSW50ZXJmYWNlLkF0dGFjaG1lbnRDb250ZW50AgAAAAs=
</value>
  </data>
</root>