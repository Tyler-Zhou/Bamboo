<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ICP.Framework.CommonLibrary</name>
    </assembly>
    <members>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.EmailCenterServiceHostAttribute">
            <summary>
            Email Center作为宿主承载服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.EmailCenterServiceHostAttribute.#ctor">
            <summary>
            构造函数
            <remarks>服务名称系统默认构造(=接口名称去除开头字母'I')，承载类型为ICP</remarks>
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.EmailCenterServiceHostAttribute.#ctor(System.String)">
            <summary>
            构造函数
            <remarks>承载类型默认为ICP</remarks>
            </summary>
            <param name="serviceName">服务名称</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.EmailCenterServiceHostAttribute.ServiceName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.ICPBrowsableAttribute">
            <summary>
            可浏览属性的标记
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.ICPBrowsableAttribute.No">
            <summary>
            不可浏览
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.ICPBrowsableAttribute.Yes">
            <summary>
            可浏览
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.ICPBrowsableAttribute.#ctor(System.Boolean)">
            <summary>
            实例化一个可浏览属性
            </summary>
            <param name="browsable"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.ICPBrowsableAttribute.Browsable">
            <summary>
            是否可浏览
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.ICPServiceHostAttribute">
            <summary>
            ICP作为宿主承载服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.ICPServiceHostAttribute.#ctor">
            <summary>
            构造函数
            <remarks>服务名称系统默认构造(=接口名称去除开头字母'I')，承载类型为ICP</remarks>
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.ICPServiceHostAttribute.#ctor(System.String)">
            <summary>
            构造函数
            <remarks>承载类型默认为ICP</remarks>
            </summary>
            <param name="serviceName">服务名称</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.ICPServiceHostAttribute.ServiceName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.BindingGetter">
            <summary>
            绑定获取类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.IBindingGetter">
            <summary>
            绑定获取器接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.IBindingGetter.Get(System.Type)">
            <summary>
            获取单向通信服务绑定
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.IBindingGetter.Get(System.Type,System.Boolean)">
            <summary>
            获取回调通信绑定
            </summary>
            <param name="type"></param>
            <param name="isDuplex"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.BindingGetter.Get(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.BindingGetter.GetTcpBinding">
            <summary>
            获取TCP绑定
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.BindingGetter.GetCustomNamedPipeBinding">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.BindingGetter.ServiceTypeJudger">
            <summary>
            服务宿主类型判断辅助类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ClientConfig">
            <summary>
            客户端配置，客户端的个性化信息保存类（以文本文件的形式存在客户端）
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.#ctor(System.String)">
            <summary>
            指定存放路径的构造函数
            </summary>
            <param name="fileDirectory"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.GetValue(System.String)">
            <summary>
            取配置项的值
            </summary>
            <param name="name">名称</param>
            <returns>对应的值,不存在则返回null</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.SetValue(System.String,System.String)">
            <summary>
            设置项的值,如果名称不存在,不做任何操作.
            </summary>
            <param name="name">项名称</param>
            <param name="value">项的值</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.AddValue(System.String,System.String)">
            <summary>
            添加项,如果名称已经存在,则修改原值
            </summary>
            <param name="name">项名称</param>
            <param name="value">项值</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.Contains(System.String)">
            <summary>
            是否包含特定名称的项
            </summary>
            <param name="name">项名称</param>
            <returns>包含返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.GetConfig">
            <summary>
            获取配置信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.SaveConfig">
            <summary>
            保存配置
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ClientConfig.Config">
            <summary>
            配置对象
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ClientConfig.Config.Items">
            <summary>
            配置项
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ClientConfig.ConfigItem">
            <summary>
            配置项
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.ConfigItem.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientConfig.ConfigItem.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">项名称</param>
            <param name="value">项值</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ClientConfig.ConfigItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ClientConfig.ConfigItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ClientHelper">
            <summary>
            客户端辅助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.ClearAppSettingCache">
            <summary>
            清空缓存
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.ClearSession">
            <summary>
            清空当前用户Session数据
            </summary>
            <param name="sessionId"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.GetAppSettingValue(System.String)">
             <summary>
            应用程序配置文件中读取指定键值
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.SetApplicationContext">
            <summary>
            为处理多线程情况，在当前线程设置应用程序上下文
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.EnsureAppStarted(System.String,System.String)">
            <summary>
            确保指定名称的进程已启动
            </summary>
            <param name="appName">进程名称，进程文件必须与当前执行代码在同一目录下</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.ReleaseWaitHandle(System.String)">
            <summary>
            根据应用程序名称释放全局等待锁
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.EnsureFilePreviewServiceStarted">
            <summary>
            确保文档预览服务已启动
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.EnsureEmailCenterAppStarted(System.String)">
            <summary>
            确保邮件中心程序已启动
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.CenterAppStartedOutLook">
            <summary>
            如果未启动OUTLOOK.EXE文件,系统自动开启OUTLOOK.EXE文件
            未解决，OUTLOOK最小化是隐藏到图标处无法自动启动
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.IsAppExists(System.String)">
            <summary>
            判断指定名称的进程是否已存在
            </summary>
            <param name="appName"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.ShowEmailCenterWindow">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.ExitEmailCenterApp">
            <summary>
            退出邮件中心应用程序
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.Get``2">
            <summary>
            根据接口和实现类型获取实例，并且将服务添加到客户端服务容器
            
            </summary>
            <typeparam name="I"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.ActiveMainForm">
            <summary>
            将主程序窗体最大化并显示在操作系统窗口最前端
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.HideForm(System.IntPtr)">
            <summary>
            最小化窗体
            </summary>
            <param name="formHandle"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.KillProcess(System.String)">
            <summary>
            结束进程
            </summary>
            <param name="appName"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientHelper.GetErrorMessage(System.Exception)">
            <summary>
            处理数据库主动抛出异常的XML结构的Message属性，返回异常的描述信息
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ClientModelBuilder">
            <summary>
            WCF客户端通信代理构造器
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.IClientModelBuilder">
            <summary>
            WCF客户端通信代理构造器接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.IClientModelBuilder.Get(System.Type,System.Object)">
            <summary>
            获取代理实例
            </summary>
            <param name="type">服务接口类型</param>
            <param name="instance">回调实例，如果不是回调服务，则传递null值</param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ClientModelBuilder.BindingGetter">
            <summary>
            绑定获取类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ClientModelBuilder.ServiceTypeJudger">
            <summary>
            服务宿主类型判断辅助类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ClientPermission">
            <summary>
            自定义模块枚举类
            根据用户权限加载模块
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ClientPermission.#ctor">
            <summary>
            修改时间: 2011-06-17 14:36
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.CABModuleInfo">
            <summary>
            模块信息类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.CursorHelper">
            <summary>
            鼠标样式辅助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.CursorHelper.#ctor(System.Windows.Forms.Cursor)">
            <summary>
            构造函数
            </summary>
            <param name="newCursor">目标样式</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.CursorHelper.#ctor">
            <summary>
            构造函数
            默认鼠标样式为等待光标
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.CursorHelper.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.CursorHelper.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.CustomHttpBinding">
            <summary>
            自定义绑定
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.CustomHttpBinding.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="streamedTransfer">是否流式传输</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.CustomHttpBinding.#ctor">
            <summary>
            构造函数 传输模式默认为Buffered
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.CustomHttpBinding.CreateBindingElements">
            <summary>
            构造绑定元素集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.CustomNamedPipeBinding">
            <summary>
            自定义命名管道绑定
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.CustomNamedPipeBinding.CreateBindingElements">
            <summary>
            构造绑定元素集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.AbstractMiniDataFinder">
            <summary>
            简易搜索器
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AbstractMiniDataFinder.ResetCondition(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            如果搜索器存在的情况下，提供重新设置条件查询数据的功能
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AbstractMiniDataFinder.PickOne(System.String,System.String,System.String[],System.Windows.Forms.Control)">
            <summary>
            单选数据
            </summary>
            <param name="searchValue">搜索初始值</param>
            <param name="property">搜索初始值对应的属性</param>
            <param name="returnFields">返回属性列表</param>
            <param name="container">容器控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AbstractMiniDataFinder.PickMany(System.String[],System.Guid[],System.Windows.Forms.Control)">
            <summary>
            多选数据
            </summary>
            <param name="returnFields">返回属性列表</param>
            <param name="existValues">已经选择的数据</param>
            <param name="container">容器控件</param>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Client.AbstractMiniDataFinder.DataChoosed">
            <summary>
            数据选择事件
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.DataFindEventArgs`1">
            <summary>
            数据搜索参数
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.DataFindEventArgs`1.#ctor(`0[])">
            <summary>
            构造函数
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.DataFindEventArgs`1.Data">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.DataFindEventArgs">
            <summary>
            数据搜索参数
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.DataFindEventArgs.#ctor(System.Object[])">
            <summary>
            构造函数
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.DataFindEventArgs.Data">
            <summary>
            数据列表
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.FinderTriggerType">
            <summary>
            触发搜索的类型( KeyEnter=0,点击按钮=1)
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderTriggerType.KeyEnter">
            <summary>
            在控件里按下回车键
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderTriggerType.ClickButton">
            <summary>
            点击按钮
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.GetExistValueHandler">
            <summary>
            用于多选搜索器中获取已选数据的委托
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.FinderInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderInfo.finderKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderInfo.finderTitle">
            <summary>
            
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderInfo.finderType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderInfo.ProxyType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderInfo.pickoneHandler">
            <summary>
            
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderInfo.pickmanyHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IDataFinder">
            <summary>
            普通搜索器
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinder.PickOne(System.String,System.String,ICP.Framework.CommonLibrary.Client.SearchConditionCollection,System.String[],ICP.Framework.CommonLibrary.Client.FinderTriggerType,System.String)">
            <summary>
            单选数据
            </summary>
            <param name="searchValue">搜索初始值</param>
            <param name="property">搜索初始值对应的属性</param>
            <param name="conditions">搜索初始值</param>
            <param name="returnFields">返回属性列表</param>
            <param name="triggerType">触发搜索的类型</param>
            <param name="workspace">容器Workspace的名称</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinder.PickOne(System.String,System.String,ICP.Framework.CommonLibrary.Client.SearchConditionCollection,System.String[],ICP.Framework.CommonLibrary.Client.FinderTriggerType,System.Windows.Forms.Control)">
            <summary>
            单选数据
            </summary>
            <param name="searchValue">搜索初始值</param>
            <param name="property">搜索初始值对应的属性</param>
            <param name="conditions">搜索初始值</param>
            <param name="returnFields">返回属性列表</param>
            <param name="triggerType">触发搜索的类型</param>
            <param name="container">容器控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinder.PickMany(System.String,System.String,ICP.Framework.CommonLibrary.Client.SearchConditionCollection,System.String[],ICP.Framework.CommonLibrary.Client.FinderTriggerType,ICP.Framework.CommonLibrary.Client.GetExistValueHandler,System.String)">
            <summary>
            多选数据
            </summary>
            <param name="searchValue">搜索初始值</param>
            <param name="property">搜索初始值对应的属性</param>
            <param name="conditions">搜索初始值</param>
            <param name="returnFields">返回属性列表</param>
            <param name="triggerType">触发搜索的类型</param>
            <param name="getExistValueHandler">获取已选数据的委托</param>
            <param name="workspace">容器Workspace的名称</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinder.PickMany(System.String,System.String,ICP.Framework.CommonLibrary.Client.SearchConditionCollection,System.String[],ICP.Framework.CommonLibrary.Client.FinderTriggerType,ICP.Framework.CommonLibrary.Client.GetExistValueHandler,System.Windows.Forms.Control)">
            <summary>
            多选数据
            </summary>
            <param name="searchValue">搜索初始值</param>
            <param name="property">搜索初始值对应的属性</param>
            <param name="conditions">搜索初始值</param>
            <param name="returnFields">返回属性列表</param>
            <param name="getExistValueHandler">获取已选数据的委托</param>
            <param name="triggerType">触发搜索的类型</param>
            <param name="container">容器控件</param>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Client.IDataFinder.DataChoosed">
            <summary>
            数据选择事件
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IMiniDataFinder">
            <summary>
            简易搜索器
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IMiniDataFinder.ResetCondition(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            如果搜索器操作的情况下，提供重新设置条件查询数据的功能
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IMiniDataFinder.PickOne(System.String,System.String,System.String[],System.Windows.Forms.Control)">
            <summary>
            单选数据
            </summary>
            <param name="searchValue">搜索初始值</param>
            <param name="property">搜索初始值对应的属性</param>
            <param name="returnFields">返回属性列表</param>
            <param name="container">容器控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IMiniDataFinder.PickMany(System.String[],System.Guid[],System.Windows.Forms.Control)">
            <summary>
            多选数据
            </summary>
            <param name="returnFields">返回属性列表</param>
            <param name="existValues">已经选择的数据</param>
            <param name="container">容器控件</param>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Client.IMiniDataFinder.DataChoosed">
            <summary>
            数据选择事件
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.DataPresenceType">
            <summary>
            网格样式
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.DataPresenceType.Normal">
            <summary>
            默认
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.DataPresenceType.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.DataPresenceType.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.DataPresenceType.Disabled">
            <summary>
            作废
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.DataPresenceType.NewRow">
            <summary>
            新行
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.LanguageType">
            <summary>
            多语言类型
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.LanguageType.UI">
            <summary>
            UI
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.LanguageType.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.DataCharngedType">
            <summary>
            日期改变类型
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.DataCharngedType.All">
            <summary>
            全部
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.DataCharngedType.StartDate">
            <summary>
            开始日期
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.DataCharngedType.EndData">
            <summary>
            结束日期
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.PortalType">
            <summary>
            首页类型
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ConditionsGetHandler">
            <summary>
            无参数的方法，返回搜索条件的集合
            </summary>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.SearchCondition">
            <summary>
            用于对搜索器指定初始条件
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.SearchCondition.Key">
            <summary>
            字段名称，即搜索调用方和实现方约定的关键字，比如POLID、PODID
            不区分大小写
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.SearchCondition.Value">
            <summary>
            针对Key字段的初始值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.SearchCondition.CanChange">
            <summary>
            是否允许改变Value
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.SearchConditionCollection">
            <summary>
            包含多个搜索条件的集合
            (没有实现ICollection接口)
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.SearchConditionCollection.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.SearchConditionCollection.AddWithValue(System.String,System.Object,System.Boolean)">
            <summary>
            添加搜索条件
            </summary>
            <param name="key">搜索调用方和实现方约定的字段名称</param>
            <param name="value">该字段的值</param>
            <param name="canChange">是否允许用户修改</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.SearchConditionCollection.Remove(System.String)">
            <summary>
            根据字段名称，在搜索条件中移除该条件
            </summary>
            <param name="key">字段名称(不区分大小写)</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.SearchConditionCollection.Contain(System.String)">
            <summary>
            是否包含某个字段
            </summary>
            <param name="key">字段名称(不区分大小写)</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.SearchConditionCollection.GetValues(System.String)">
            <summary>
            返回某个字段值
            </summary>
            <param name="key">字段名称(不区分大小写)</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.SearchConditionCollection.GetValue(System.String)">
            <summary>
            返回某个字段值(对应有多个值的话，将随机返回)
            </summary>
            <param name="key">字段名称(不区分大小写)</param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.SearchConditionCollection.Conditions">
            <summary>
            获取传入的条件字典
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ErrorInfoData">
            <summary>
            错误信息对象
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorInfoData.#ctor(System.Windows.Forms.Control,System.String)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="message"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorInfoData.#ctor(System.Windows.Forms.Control,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="message"></param>
            <param name="className"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorInfoData.#ctor(ICP.Framework.CommonLibrary.Client.ErrorInfoType,System.Windows.Forms.Control,System.String)">
            <summary>
            
            </summary>
            <param name="errorType"></param>
            <param name="owner"></param>
            <param name="message"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorInfoData.#ctor(System.Windows.Forms.Control,System.Exception)">
            <summary>
            
            </summary>
            <param name="owner"></param>
            <param name="exception"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorInfoData.#ctor(ICP.Framework.CommonLibrary.Client.ErrorInfoType,System.Windows.Forms.Control,System.Exception)">
            <summary>
            
            </summary>
            <param name="errorType"></param>
            <param name="owner"></param>
            <param name="exception"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorInfoData.#ctor(ICP.Framework.CommonLibrary.Client.ErrorInfoType,System.Windows.Forms.Control,System.Exception,System.Drawing.Image,System.Windows.Forms.Control)">
            <summary>
            
            </summary>
            <param name="errorType"></param>
            <param name="owner"></param>
            <param name="exception"></param>
            <param name="image"></param>
            <param name="targetControl"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorInfoData.#ctor(ICP.Framework.CommonLibrary.Client.ErrorInfoType,System.Windows.Forms.Control,System.Exception,System.Drawing.Image,System.Windows.Forms.Control,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="errorType"></param>
            <param name="owner"></param>
            <param name="exception"></param>
            <param name="image"></param>
            <param name="targetControl"></param>
            <param name="className"></param>
            <param name="filedName"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.ErrorType">
            <summary>
            错误信息类型
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.Owner">
            <summary>
            
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.ModuleName">
            <summary>
            模块名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.ClassName">
            <summary>
            类名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.FieldName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.Exception">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.Message">
            <summary>
            消息提示文本
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.ScreenImage">
            <summary>
            错误发生时候的抓屏图象(方便发送给系统管理查看原因)
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorInfoData.TargetControl">
            <summary>
            对应的目标控件
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ErrorInfoType">
            <summary>
            
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ErrorInfoType.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ErrorInfoType.Infomation">
            <summary>
            信息
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorMessage.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorMessage.Number">
            <summary>
            
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorMessage.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorMessage.Property">
            <summary>
            
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ErrorMessages">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ErrorMessages.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ErrorMessages.Messages">
            <summary>
            
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.frmProcessTip">
            <summary>
            事件进度显示窗体
            使用时，须根据需要设置窗体标题和提示信息
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.frmProcessTip.SetTip(System.Object,ICP.Framework.CommonLibrary.Client.TipEventArgs)">
            <summary>
            设置提示信息
            </summary>
            <param name="tip"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.frmProcessTip.SetText(System.Object,ICP.Framework.CommonLibrary.Client.TipEventArgs)">
            <summary>
            设置标题文本
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.frmProcessTip.CloseForm">
            <summary>
            关闭窗体
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.frmProcessTip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.frmProcessTip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.frmProcessTip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.TipWindowEventHandler">
            <summary>
            进度提示窗口事件处理类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.TipWindowEventHandler.RemoveHandlers">
            <summary>
            清除事件委托链，以释放资源
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.TipEventArgs">
            <summary>
            进度提示窗口事件处理参数类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.TipEventArgs.Tip">
            <summary>
            提示
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IBusinessInfoProviderFactory">
            <summary>
            业务信息供应工厂
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IBusinessInfoProviderFactory.Register``1(ICP.Framework.CommonLibrary.Common.OperationType)">
            <summary>
            注册业务信息供应者
            </summary>
            <typeparam name="T">IBusinessInfoProvider</typeparam>
            <param name="operationType">业务类型</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IBusinessInfoProviderFactory.GetBusinessInfoProvider(ICP.Framework.CommonLibrary.Common.OperationType)">
            <summary>
            获取业务信息供应者
            </summary>
            <param name="operationType">业务类型</param>
            <returns>业务信息供应者</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IBusinessInfoProvider">
            <summary>
            业务信息供应接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IBusinessInfoProvider.ShowBusinessInfo(ICP.Framework.CommonLibrary.Common.OperationType,System.Guid,System.String)">
            <summary>
            显示业务信息
            </summary>
            <param name="operationID">业务ID</param>
            <param name="operationType">业务类型</param>
            <param name="workspaceName">workspaceName,传入空值以一个对话框形式打开</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IBusinessInfoProvider.ShowBusinessInfo(ICP.Framework.CommonLibrary.Common.OperationType,System.Guid,System.Boolean,System.String)">
            <summary>
            显示业务信息
            </summary>
            <param name="operationID">业务ID</param>
            <param name="operationType">业务类型</param>
            <param name="isMbl">是否MBL</param>
            <param name="workspaceName">workspaceName,传入空值以一个对话框形式打开</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IMainForm">
            <summary>
            主界面接口
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Client.IMainForm.ApplicationExit">
            <summary>
            应用程序退出事件
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Client.IMainForm.ApplicationStart">
            <summary>
            应用程序启动事件
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Client.IMainForm.MainFormActivated">
            <summary>
            主窗体激活事件
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Client.IMainForm.MainFormDeactivated">
            <summary>
            主窗体失活事件
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Client.IMainForm.KeyDownEvent">
            <summary>
            主窗体按键事件
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IServiceBaseAddressGetter">
            <summary>
            服务基地址获取接口
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IServiceClient">
            <summary>
            通信客户端接口
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ILoginUserInfoService">
            <summary>
            获取登录用户信息接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ILoginUserInfoService.Get">
            <summary>
            获取登录用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ScrollableControlMessageFilter">
            <summary>
            鼠标滚动消息过滤类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ServiceBaseAddressGetter">
            <summary>
            服务基址获取类
            <remarks>根据服务承载类型，从客户端应用程序配置文件获取对应键值</remarks>
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.LocalServiceProxyStrategy`1.BuildUp(Microsoft.Practices.ObjectBuilder.IBuilderContext,System.Type,System.Object,System.String)">
            <summary>
            Forwards the <see cref="!:EventTopic"/> related attributes processing to the <see cref="!:EventInspector"/>
            for registering publishers and/or subscribers.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.LocalServiceProxyStrategy`1.TearDown(Microsoft.Practices.ObjectBuilder.IBuilderContext,System.Object)">
            <summary>
            Forwards the <see cref="!:EventTopic"/> related attributes processing to the <see cref="!:EventInspector"/>
            for unregistering publishers and/or subscribers.
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.PermissionStrategy">
            <summary>
            权限策略类，处理被RequestAllow特性修饰的命令处理方法
            备注：
                  1.策略处理的对象必须派生自用户控件
                  2.方法必须为命令处理方法,即被CommandHandler特性修饰
                  3.方法被标识为需要进行权限处理，即被RequestAllow特性修饰
                  4.如果无权限，则命令关联的控件将被显示并Disable
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.PermissionStrategy.#ctor">
            <summary>
            屏蔽构造函数 以使用Instance单例
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.PermissionStrategy.BuildUp(Microsoft.Practices.ObjectBuilder.IBuilderContext,System.Type,System.Object,System.String)">
            <summary>
            Forwards the <see cref="!:EventTopic"/> related attributes processing to the <see cref="!:EventInspector"/>
            for registering publishers and/or subscribers.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.PermissionStrategy.TearDown(Microsoft.Practices.ObjectBuilder.IBuilderContext,System.Object)">
            <summary>
            Forwards the <see cref="!:EventTopic"/> related attributes processing to the <see cref="!:EventInspector"/>
            for unregistering publishers and/or subscribers.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceProxyStrategy.BuildUp(Microsoft.Practices.ObjectBuilder.IBuilderContext,System.Type,System.Object,System.String)">
            <summary>
            Forwards the <see cref="!:EventTopic"/> related attributes processing to the <see cref="!:EventInspector"/>
            for registering publishers and/or subscribers.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceProxyStrategy.TearDown(Microsoft.Practices.ObjectBuilder.IBuilderContext,System.Object)">
            <summary>
            Forwards the <see cref="!:EventTopic"/> related attributes processing to the <see cref="!:EventInspector"/>
            for unregistering publishers and/or subscribers.
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.DataTypeHelper">
            <summary>
            数据类型转换帮助器,各数据类型互转，判断是否是某种数据类型等
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsLetter(System.Char)">
            <summary>
            检查当前字符是否是有效字母，大写或小写。
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsNumber(System.Char)">
            <summary>
            检查当前字符是数字字符。
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsUpperLetter(System.Char)">
            <summary>
            检查当前字符是否是有效大写字母。
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsLowerLetter(System.Char)">
            <summary>
            检查当前字符是否是有效小写字母。
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsGuid(System.Object)">
            <summary>
            检查是否为Guid类型的字符串
            </summary>
            <param name="o">要检查的字符串</param>
            <returns>如果是，则返回true，如果不是，则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsInt(System.Object)">
            <summary>
            检查是否为整数的字符串
            </summary>
            <param name="o">要检查的字符串</param>
            <returns>如果是，则返回true，如果不是，则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsDateTime(System.Object)">
            <summary>
            检查是否为日期型的字符串
            </summary>
            <param name="o">要检查的字符串</param>
            <returns>如果是，则返回true，如果不是，则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsDouble(System.Object)">
            <summary>
            检查是否为浮点型
            </summary>
            <param name="o">要检查的字符串</param>
            <returns>如果是，则返回true，如果不是，则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsSingle(System.Object)">
            <summary>
             检查是否为Single型
            </summary>
            <param name="o">要检查的字符串</param>
            <returns>如果是，则返回true，如果不是，则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsDecimal(System.Object)">
            <summary>
            检查是否为Decimal型
            </summary>
            <param name="o">要检查的字符串</param>
            <returns>如果是，则返回true，如果不是，则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsBool(System.Object)">
            <summary>
            检查是否为bool型
            </summary>
            <param name="o">要检查的字符串</param>
            <returns>如果是，则返回true，如果不是，则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToString(System.String)">
            <summary>
            转化为字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToString(System.String,System.Object)">
            <summary>
            转化为字符串
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToString(System.String,System.Boolean)">
             <summary>
            去除空格
             </summary>
             <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetInt(System.Object)">
            <summary>
            得到一个整形
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetInt(System.Object,System.Int32)">
            <summary>
            得到一个整形
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetIntNull(System.Object)">
            <summary>
            得到一个可空整形
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetIntNull(System.Object,System.Nullable{System.Int32})">
            <summary>
            得到一个可空整形
            </summary>
            <param name="obj"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToInt(System.String)">
            <summary>
            转化为Int类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToInt(System.String,System.Object)">
            <summary>
            转化为Int类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDecimal(System.Object)">
            <summary>
            转化为Decimal类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDecimal(System.Object,System.Decimal)">
            <summary>
            转化为Decimal类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDecimalNull(System.Object)">
            <summary>
            某对象转换为可为空的Decimal
            </summary>
            <param name="obj">对象</param>
            <returns>Decimal?</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDecimalNull(System.Object,System.Nullable{System.Decimal})">
            <summary>
            转化为Decimal类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToDecimal(System.String)">
            <summary>
            转化为Decimal类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToDecimal(System.String,System.Object)">
            <summary>
            转化为Decimal类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDouble(System.Object)">
            <summary>
            转化为Double类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDouble(System.Object,System.Double)">
            <summary>
            转化为Double类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDoubleNull(System.Object)">
            <summary>
            转化为Double类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDoubleNull(System.Object,System.Nullable{System.Double})">
            <summary>
            转化为Double类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToDouble(System.String)">
            <summary>
            转化为Double类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToDouble(System.String,System.Object)">
            <summary>
            转化为Double类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetString(System.Char[])">
            <summary>
            返回字符数组对应的字符串。
            </summary>
            <param name="obj">字符数组</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetString(System.Object)">
            <summary>
            转化为String类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetString(System.Object,System.String)">
            <summary>
            转化为String类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetGuid(System.Object)">
            <summary>
            转化为Guid类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetGuid(System.Object,System.Guid)">
            <summary>
            转化为Guid类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetGuidNull(System.Object)">
            <summary>
            转化为Guid类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetGuidNull(System.Object,System.Nullable{System.Guid})">
            <summary>
            转化为Guid类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToGuid(System.Object)">
            <summary>
            转化为Guid类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToGuid(System.String)">
            <summary>
            转化为Guid类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToGuid(System.String,System.Object)">
            <summary>
            转化为Guid类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetBool(System.Object)">
            <summary>
            转化为Bool类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetBool(System.Object,System.Boolean)">
            <summary>
            转化为Bool类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetBoolNull(System.Object)">
            <summary>
            转化为可为空的Bool类型
            </summary>
            <param name="obj">对象</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetBoolNull(System.Object,System.Nullable{System.Boolean})">
            <summary>
            转化为Bool类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToBool(System.String)">
            <summary>
            转化为Bool类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToBool(System.String,System.Object)">
            <summary>
            转化为Bool类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDateTime(System.Object)">
            <summary>
            转化为时间类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDateTime(System.Object,System.DateTime)">
            <summary>
            转化为时间类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDateTimeNull(System.Object)">
            <summary>
            转化为可为空时间类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetDateTimeNull(System.Object,System.Nullable{System.DateTime})">
            <summary>
            转化为可为空时间类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToDateTime(System.String)">
            <summary>
            转化为时间类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToDateTime(System.String,System.Object)">
            <summary>
            转化为时间类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToDateTime(System.Object,System.Object)">
            <summary>
            转化为时间类型
            </summary>
            <param name="date">日期</param>
            <param name="time">时间</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToDateTime(System.Object,System.Object,System.Object)">
            <summary>
            转化为长日期类型
            </summary>
            <param name="date">日期</param>
            <param name="time">时间</param>
            <param name="defaultValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.ToBytes(System.String)">
            <summary>
            字符串转化为字节数组
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsNull(System.Object)">
            <summary>
            是否为空
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.SerializeObject(System.Object)">
            <summary>
            序列化一个对象，把一个对象序列化成一个字符串
            </summary>
            <param name="obj">对象</param>
            <returns>序列化好的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.SerializeObjectArray(System.Object[])">
            <summary>
            序列化一个对象数组，把一个对象数组序列化成一个字符串
            </summary>
            <param name="arr">对象数组</param>
            <returns>序列化好的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.GetXmlDateTime(System.String)">
            <summary>
            从XML文件中读取时间转换
            </summary>
            <param name="Time"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.DataTypeHelper.IsType(System.Type,System.Object)">
            <summary>
            值是否是正确的类型
            </summary>
            <param name="type"></param>
            <param name="value"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.IconHelper">
            <summary>
            提供从操作系统读取图标的方法
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.IconHelper.GetIconByFileName(System.String)">
            <summary>
            依据文件名读取图标，若指定文件不存在，则返回空值。
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.IconHelper.GetIconByFileType(System.String,System.Boolean)">
            <summary>
            给出文件扩展名（.*），返回相应图标
            若不以"."开头则返回文件夹的图标。
            </summary>
            <param name="fileType"></param>
            <param name="isLarge"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.SerializationUnit">
            <summary>
            序列化和反序列化单元
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializationUnit.Serialize(System.Object)">
            <summary>
            把对象序列化为字节数组
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializationUnit.Deserialize(System.Byte[])">
            <summary>
            把字节数组反序列化成对象
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializationUnit.Compress(System.Data.DataSet)">
            <summary>
            将DataSet写入Xml后，在将其压缩
            </summary>
            <param name="ds"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializationUnit.Decompress(System.Byte[])">
            <summary>
            将字节流解压成DataSet
            </summary>
            <param name="arrbts"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IMemoryCachedService">
            <summary>
            对象缓存服务接口(仅用于服务端)
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Add(System.String,System.Object)">
            <summary>
            新增
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Add(System.String,System.Object,System.DateTime)">
            <summary>
            新增，并指定在超时时间到达时删除
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="expiry"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Add(System.Collections.Generic.IDictionary{System.String,System.Object},System.DateTime)">
            <summary>
            批量新增，并指定在超时时间到达时删除
            </summary>
            <param name="pairs"></param>
            <param name="expiry"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Add(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            批量新增
            </summary>
            <param name="pairs"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Set(System.String,System.Object)">
            <summary>
            更新，不存在则新增
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Set(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            批量更新，不存在则新增
            </summary>
            <param name="pairs"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Delete(System.String[])">
            <summary>
            批量删除
            </summary>
            <param name="keys"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Get(System.String)">
            <summary>
            获取
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMemoryCachedService.Get(System.String[])">
            <summary>
            批量获取
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.IServiceTypeJudger">
            <summary>
            服务类型判断接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.IServiceTypeJudger.Get(System.Type)">
            <summary>
            获取服务类型
            </summary>
            <param name="type">接口类型</param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ServiceHostType">
            <summary>
            服务类型
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.ServiceHostType.Unknown">
            <summary>
            未知
            <remarks>类型不是接口或者未被ServiceContract特性修饰</remarks>
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.ServiceHostType.Normal">
            <summary>
            应用服务器承载服务
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.ServiceHostType.ICP">
            <summary>
            ICP承载服务
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.ServiceHostType.EmailCenter">
            <summary>
            邮件中心承载服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.LocalServiceHost.GetServiceBaseAddress(System.Type,System.Type)">
            <summary>
            获取WCF服务基地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.LocalServiceHost.IsLocalServiceHostContractType(System.Type,System.Type)">
            <summary>
            验证是否为本地承载服务接口类型
            </summary>
            <param name="t">需验证的接口类型</param>
            <returns>为真返回true，否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.LocalServiceHost.RegisterComponent(System.Type,System.Type)">
            <summary>
            注册服务组件 
            <param name="type">注册的服务接口类型</param>
            <param name="instance">回调服务代理实例，如果不是回调服务，此参数必须为null</param>
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.LocalServiceHost.InitializeContainer">
            <summary>
            初始化服务容器
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.DataContractSerializerBehavior">
            <summary>
            上下文传递终结点行为类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.NGenHelper">
            <summary>
            NGen本地代码生成辅助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.NGenHelper.GenerateNativeCode">
            <summary>
            调用Ngen产生本地代码
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.NGenHelper.AddNGenToolPathToSystemPath(System.String)">
            <summary>
            将运行时目录添加入系统目录
            </summary>
            <param name="envDir"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.NGenHelper.CheckNGenToolIsExists(System.String)">
            <summary>
            检查NGen工具是否存在
            </summary>
            <param name="envDir"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.NGenHelper.RunGenerateNativeFile(System.String)">
            <summary>
            运行文件，生成本机代码
            </summary>
            <param name="fullFileName"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.CallbackServiceConfigurationSection">
            <summary>
            回调服务配置段类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.CallbackServiceConfigurationSection.Services">
            <summary>
            回调服务集合
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.Item">
            <summary>
            回调服务项
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.Item.Id">
            <summary>
            服务Id
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.Item.ServiceType">
            <summary>
            服务类型 格式："完全限定类型名称,DLL名称"
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.Item.CallbackType">
            <summary>
            回调接口类型 格式："完全限定类型名称,DLL名称"
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.Item.CallbackInstanceType">
            <summary>
            回调接口实现类型 格式："完全限定类型名称,DLL名称"
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.Item.IsCallbackInstanceExists">
            <summary>
            回调接口实现类是否已注入根WorkItem
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ServiceCollection">
            <summary>
            回调服务集合配置类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceCollection.Add(ICP.Framework.CommonLibrary.Client.Item)">
            <summary>
            添加
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceCollection.CreateNewElement">
            <summary>
            新建
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            根据指定Key返回项
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceCollection.Remove(ICP.Framework.CommonLibrary.Client.Item)">
            <summary>
            删除指定项
            根据项的Id值
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceCollection.RemoveAt(System.Int32)">
            <summary>
            删除指定索引的项
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceCollection.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ServiceCollection.Item(System.Int32)">
            <summary>
            集合索引
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.RepositoryItemCommandAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ICP.Framework.CommonLibrary.Client.RepositoryItemCommandAdapter"/> class
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.RepositoryItemCommandAdapter.#ctor(DevExpress.XtraEditors.Repository.RepositoryItem,System.String)">
            <summary>
            Initializes the adapter with the given <see cref="!:ToolStripItem"/>.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.RepositoryItemCommandAdapter.OnCommandChanged(Microsoft.Practices.CompositeUI.Commands.Command)">
            <summary>
            Handles the changes in the <see cref="T:Microsoft.Practices.CompositeUI.Commands.Command"/> by refreshing 
            the <see cref="!:ToolStripItem.Enabled"/> property.
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ServiceClient">
            <summary>
            WCF服务客户端实现类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceClient.IsWCFContractType(System.Type)">
            <summary>
            验证是否为WCF契约接口类型
            </summary>
            <param name="t">需验证的接口类型</param>
            <returns>为真返回true，否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceClient.RegisterComponent(System.Type,System.Object)">
            <summary>
            注册服务组件 
            <param name="type">注册的服务接口类型</param>
            <param name="instance">回调服务代理实例，如果不是回调服务，此参数必须为null</param>
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceClient.InitializeContainer">
            <summary>
            初始化服务容器
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceClient.GetService``1">
            <summary>
            根据接口类型获取服务代理实例
            </summary>
            <typeparam name="T">服务契约接口类型</typeparam>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceClient.GetService``1(System.Object)">
             <summary>
            根据接口类型获取服务代理实例
            仅限回调服务使用
             </summary>
             <typeparam name="T">服务契约接口类型</typeparam>
             <param name="instance">回调服务本地实现实例</param>
             <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceClient.GetService(System.Type,System.Object)">
            <summary>
            根据接口类型，获取回调服务代理实例
            </summary>
            <param name="t">WCF服务实现的契约接口</param>
            <param name="instance">回调服务实现实例</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.ServiceClient.GetService(System.Type)">
            <summary>
            根据接口类型获取服务代理
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ServiceClient.Container">
            <summary>
            
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ServiceClient.ServiceTypeJudger">
            <summary>
            服务宿主类型判断辅助类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.ServiceClient.FilePreviewService">
            <summary>
            文档预览服务
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.AddInConfigurationSection">
            <summary>
            插件配置段类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.AddInConfigurationSection.AddIns">
            <summary>
            插件集合
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.AddInItem">
            <summary>
            插件项
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.AddInItem.Id">
             <summary>
            Id
             </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.AddInItem.ImplementType">
            <summary>
            实现类型 格式："完全限定类型名称,DLL名称"
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.AddInCollection">
            <summary>
            回调服务集合配置类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AddInCollection.Add(ICP.Framework.CommonLibrary.Client.AddInItem)">
            <summary>
            添加
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AddInCollection.CreateNewElement">
            <summary>
            新建
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AddInCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            根据指定Key返回项
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AddInCollection.Remove(ICP.Framework.CommonLibrary.Client.AddInItem)">
            <summary>
            删除指定项
            根据项的Id值
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AddInCollection.RemoveAt(System.Int32)">
            <summary>
            删除指定索引的项
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AddInCollection.Remove(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.AddInCollection.Item(System.Int32)">
            <summary>
            集合索引
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ApplicationContext">
            <summary>
            应用程序上下文
            添加属性时,属性键名必须以"__"开头，以区分其他Http header值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.Username">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.ClientId">
            <summary>
            客户端ID,唯一标识一个客户端
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.MacAddress">
            <summary>
            客户端Mac地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.LocalIpAddress">
            <summary>
            客户端局域网IP地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.PublicIpAddress">
            <summary>
            客户端公共IP地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.IsEnglish">
            <summary>
            客户端语言是否为英文
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.CultureName">
             <summary>
            客户端语言名称
             </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.SessionId">
            <summary>
            会话ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.AssemblyName">
            <summary>
            当前程序集名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.FunctionName">
            <summary>
            功能名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.DefaultCompanyId">
            <summary>
            用户默认所属公司Id
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ApplicationContext.EmailAddress">
            <summary>
            用户默认邮件地址
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.AppSettingReader">
            <summary>
            应用程序配置文件appSettings配置节读取类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.AppSettingReader.#ctor">
            <summary>
            构造函数，将载入配置文件键值
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.AppSettingReader.GetAppSettings">
            <summary>
            获取应用程序配置文件AppSettings配置节里的所有键值
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.AppSettingReader.ClearAppSettingCache">
            <summary>
            清除数据缓存
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.AppSettingReader.GetAppSettingValue(System.String)">
             <summary>
            应用程序配置文件中读取指定键值
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.AppSettingReader.CompressionSize">
            <summary>
            压缩阈值
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.CommonHelper">
            <summary>
            公共辅助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.GetPulicIpAddress">
            <summary>
            获取公网IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.GetLocalIpAddress">
            <summary>
            获取本机内网IP
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.GetHostName">
            <summary>
            获取主机名
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.SaveLog(System.String)">
            <summary>
            保存日志信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.KillProcess(System.String)">
            <summary>
            结束进程
            </summary>
            <param name="processName">进程名称</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.BuildExceptionString(System.Exception)">
            <summary>
            构建异常信息
            <remarks>递归遍历所有内部异常</remarks>
            </summary>
            <param name="ex"></param>
            <returns>异常及其所有内部异常的Message组合，以及调用参数的StackTrace</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.GetDirectorySize(System.String)">
            <summary>
            获取某文件夹下所有文件的大小(以字节作为单位)
            </summary>
            <param name="dirPath">文件夹名称</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.GetDirectorySizeInUnit(System.String)">
            <summary>
            获取某文件夹下所有文件的大小
            </summary>
            <param name="dirPath"></param>
            <returns>具体的字节单位，如"12GB"</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonHelper.GetFileSizeString(System.Int64)">
            <summary>
            获取文件大小字符串表示
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder">
            <summary>
            消息压缩编码器
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder._contentType">
            <summary>
            标识消息的内容类型
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder._innerEncoder">
             <summary>
            实际使用的内部编码器 (二进制或者文本)，一般采用二进制
             </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.#ctor(System.ServiceModel.Channels.MessageEncoder)">
            <summary>
            构造函数
            </summary>
            <param name="innerEncoder">实际使用的内部编码器 (二进制或者文本)</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
            <summary> 
            读取消息内容 根据消息内容类型判断是否需要解压缩
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
            <summary>
            写入消息内容 根据配置文件阈值大小，自动决定是否压缩
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
            <summary>
            以流方式读取消息内容
            </summary>
            <param name="stream"></param>
            <param name="maxSizeOfHeaders"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
            <summary>
            以流方式写入消息内容
            </summary>
            <param name="message"></param>
            <param name="stream"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.CompressBuffer(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.Int32)">
            <summary>
            Compress a buffer
            </summary>
            <param name="buffer"></param>
            <param name="bufferManager"></param>
            <param name="messageOffset"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.DecompressBuffer(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
            <summary>
            Decompress a buffer
            </summary>
            <param name="buffer"></param>
            <param name="bufferManager"></param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.ContentType">
            <summary>
            获取消息内容类型
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.MediaType">
            <summary>
            Get the media type of the encoder
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncoder.MessageVersion">
            <summary>
            Get the message version of the encoder
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.CompactMessageEncoderFactory">
            <summary>
            压缩编码器工厂类
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.CompactMessageEncoderFactory._encoder">
            <summary>
            压缩编码器
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.CompactMessageEncoderFactory._innerFactory">
            <summary>
            产生内部编码器的编码器工厂类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncoderFactory.#ctor(System.ServiceModel.Channels.MessageEncoderFactory)">
            <summary>
            构造函数
            </summary>
            <param name="innerFactory">内部编码器工厂</param>o
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncoderFactory.Encoder">
            <summary>
            编码器工厂产生的消息编码器
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncoderFactory.MessageVersion">
            <summary>
            消息版本号
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement._baseBindingElement">
            <summary>
            Stores the base binding element so clones can use it.
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement._innerBindingElement">
            <summary>
            Stores the inner binding element
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.#ctor(ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement)">
            <summary>
            Constructor, used with the Clone method
            </summary>
            <param name="originalBindingElement"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.SetInnerBindingElement(System.ServiceModel.Channels.MessageEncodingBindingElement)">
            <summary>
            Sets e inner binding element
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Builds the channel factory stack on the client that creates a specified type of channel for a specified context. 
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Builds the channel listener on the service that accepts a specified type of channel for a specified context.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.CreateMessageEncoderFactory">
            <summary>
            Create the CompactMessageEncoderFactory
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.Clone">
            <summary>
            Clone the CompactMessageEncodingBindingElement
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
            <summary>
            Returns a typed object requested, if present, from the appropriate layer in the binding element stack. 
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.InnerBindingElement">
            <summary>
            Returns the inner binding element
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingBindingElement.MessageVersion">
            <summary>
            Get/Set the message version
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingElement">
            <summary>
            This class enables the user to configure the CompactMesssageEncoder with the configuration file.
            It's derived from ConfigurationElement
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingElement._properties">
            <summary>
            Stores the available properties of this ConfigurationElement.
            It's initialized in the Properties property.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingElement.CreateBindingElement">
            <summary>
            Creates an instance of the binding element
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
            <summary>
            Apply the configuration file to the binding element
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingElement.BindingElementType">
            <summary>
            Gets the type of the binding element. 
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingElement.Properties">
            <summary>
            Gets the collection of properties. 
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingElement.TextMessageEncodingElement">
            <summary>
            Get the TextMessageEncodingElement configuration 
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CompactMessageEncodingElement.BinaryMessageEncodingElement">
            <summary>
            Get the BinaryMessageEncodingElement configuration 
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ContextPropagationBehavior">
            <summary>
            上下文传递终结点行为类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.AuthDataInfo">
            <summary>
            用户登录时服务端返回验证信息类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.AuthDataInfo.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.AuthDataInfo.SessionId">
            <summary>
            属于此用户的SessionId
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.EncryptProviderFactory">
            <summary>
            静态工厂
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.EncryptProviderFactory.GetEncryptProvider(ICP.Framework.CommonLibrary.Common.EncryptType)">
            <summary>
            
            </summary>
            <param name="encryptType"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DES_IDEncryptProvider">
            <summary>
            根据一个GUID作为KEY的加密模式
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.IEncryptProvider">
            <summary>
            加密供应者
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.IEncryptProvider.Encrypt(System.String,System.String)">
            <summary>
            加密
            </summary>
            <param name="key">key</param>
            <param name="encryptString">原文</param>
            <returns>返回密文</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.IEncryptProvider.Decrypt(System.String,System.String)">
            <summary>
            解密
            </summary>
            <param name="key">key</param>
            <param name="encryptString">密文</param>
            <returns>原文</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DES_IDEncryptProvider.Encrypt(System.String,System.String)">
            <summary>
            DES加密
            </summary>
            <param name="key"></param>
            <param name="encryptString"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DES_IDEncryptProvider.Decrypt(System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="key"></param>
            <param name="encryptString"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DESHepler">
            <summary>
            DES的帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DESHepler.Encrypt(System.String,System.String)">
            <summary>
            DES加密    
            </summary>
            <param name="pToEncrypt"></param>
            <param name="sKey"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DESHepler.Decrypt(System.String,System.String)">
            <summary>
            DES解密    
            </summary>
            <param name="pToEncrypt"></param>
            <param name="sKey"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ICPException">
            <summary>
            ICP系统自定义异常类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ICPException.ExceptionInfo">
            <summary>
            自定义异常信息描述
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IErrorDisplayer">
            <summary>
            实现了错误提示服务的Control
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.IErrorDisplayer.TraceService">
            <summary>
            
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.EditMode">
            <summary>
            打开数据的模式
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.EditMode.New">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.EditMode.Edit">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.EditMode.Copy">
            <summary>
            复制
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.EditMode.SaveAs">
            <summary>
            另存为
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.PropertyChangedBaseEx">
            <summary>
            为属性更改的通知方法提供安全快捷的写法
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.PropertyChangedBaseEx.NotifyPropertyChanged``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            通知某属性改变了
            如果已经开始编辑，则IsDirty属性会设置为true
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="baseDataObject"></param>
            <param name="expression"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.BaseDataObject">
            <summary>
            所有业务对象的基类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.#ctor">
            <summary>
            初始化业务对象
            会准备所有的验证信息
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.SetError(System.String,System.String)">
            <summary>
            设置错误信息
            </summary>
            <param name="propertyName">属性</param>
            <param name="message">错误信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.GetPropertyError(System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
            <summary>
            获取指定属性相关的错误信息
            </summary>
            <param name="propertyName">属性</param>
            <param name="info">错误信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.GetError(DevExpress.XtraEditors.DXErrorProvider.ErrorInfo)">
            <summary>
            获取错误信息
            </summary>
            <param name="info">错误信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.SetErrorInfo(DevExpress.XtraEditors.DXErrorProvider.ErrorInfo,System.String,DevExpress.XtraEditors.DXErrorProvider.ErrorType)">
            <summary>
            设置错误信息
            </summary>
            <param name="info">错误信息</param>
            <param name="errorText">错误文本</param>
            <param name="errorType">错误类型</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.Validate">
            <summary>
            验证对象里的业务规则是否成立
            </summary>
            <returns>验证通过返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.Validate(ICP.Framework.CommonLibrary.Common.ValidateEventHandler)">
            <summary>
            验证对象里的业务规则是否成立
            </summary>
            <param name="validateHandler">验证委托</param>
            <returns>验证通过返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.Validate(System.String@,ICP.Framework.CommonLibrary.Common.ValidateEventHandler,System.Boolean)">
            <summary>
            验证对象里的业务规则是否成立
            </summary>
            <param name="errorMessage">错误消息</param>
            <param name="validateHandler">验证委托</param>
            <param name="autohrowError">是否自动在LocalCommonServices.ErrorTrace中提出错误</param>
            <returns>验证通过返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.Validate(System.String@,ICP.Framework.CommonLibrary.Common.ValidateEventHandler)">
            <summary>
            验证对象里的业务规则是否成立
            </summary>
            <param name="errorMessage">错误消息</param>
            <param name="validateHandler">验证委托</param>
            <returns>验证通过返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.Validate(System.String@,System.Boolean)">
            <summary>
            验证对象里的业务规则是否成立
            </summary>
            <param name="errorMessage">错误消息</param>
            <param name="autohrowError">是否自动在LocalCommonServices.ErrorTrace中提出错误</param>
            <returns>验证通过返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.Validate(System.String@)">
            <summary>
            验证对象里的业务规则是否成立
            </summary>
            <param name="errorMessage">错误消息</param>
            <returns>验证通过返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.BeginEdit">
            <summary>
            开始编辑 _editHasBegin = true;
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.CancelEdit">
            <summary>
            取消编辑(setIsDirty =false _editHasBegin = false;
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.EndEdit">
            <summary>
            提交编辑  _editHasBegin = false;
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.OnPropertyChanged(System.String,System.Object)">
            <summary>
            属性改变处理方法
            </summary>
            <param name="propertyname"></param>
            <param name="value"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseDataObject.OnPropertyChanged(System.String)">
            <summary>
            属性改变处理方法
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.BaseDataObject.Undoable">
            <summary>
            是否可撤消
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.BaseDataObject.IsNew">
            <summary>
            虚属性,是否新建对象,请在自定的对象中实现此操作
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.BaseDataObject.IsDirty">
            <summary>
            数据是否有修改
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Common.BaseDataObject.PropertyChanged">
            <summary>
            属性改变时触发的事件
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.MemberDescriptionAttribute">
            <summary>
            枚举成员描述特性
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.MemberDescriptionAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="description"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.MemberDescriptionAttribute.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="cDescription">中文描述</param>
            <param name="eDescription">英文描述</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.MemberDescriptionAttribute.CDescription">
            <summary>
            中文描述
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.MemberDescriptionAttribute.EDescription">
            <summary>
            英文描述
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.MemberDescriptionAttribute.SimpleMeaning">
            <summary>
            另外的含义
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DataObjectCompare">
            <summary>
            业务对象比较对象
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DataObjectCompare.Equals(ICP.Framework.CommonLibrary.Common.BaseDataObject,ICP.Framework.CommonLibrary.Common.BaseDataObject)">
            <summary>
            两个业务对象是否相等
            两个空对象视为相等
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>是否是同一个对象</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DataObjectCompare.GetHashCode(ICP.Framework.CommonLibrary.Common.BaseDataObject)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DateTimeFormatAttribute">
            <summary>
            时间验证特性
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute">
            <summary>
            ICP数据验证特性基类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="errorMessage">错误提示信息，中英文相同</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="cMessage"></param>
            <param name="eMessage"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.IsValid(System.Object)">
            <summary>
            数据验证 派生类必须实现
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.GetErrorMessage(System.Boolean)">
            <summary>
            根据语言获取验证错误信息
            </summary>
            <param name="isEnglish"></param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.CMessage">
            <summary>
            中文简体错误信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.EMessage">
            <summary>
            英文错误信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.IsUseErrorTemplate">
            <summary>
            是否使用错误信息模板
            默认为True
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.CErrorTemplate">
            <summary>
            中文错误模板字符串
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.EErrorTempalte">
            <summary>
            英文错误模板字符串
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidateBaseAttribute.ErrorMessage">
             <summary>
            错误信息获取器
            根据系统登录语言获取关联的错误信息
             </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DateTimeFormatAttribute.IsValid(System.Object)">
            <summary>
            验证是否正确
            </summary>
            <param name="value">验证值</param>
            <returns>如果验证通过为true,否则为false</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.RequiredAttribute">
            <summary>
            必录特性类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.RequiredAttribute.IsValid(System.Object)">
            <summary>
            验证是否正确
            </summary>
            <param name="value">验证值</param>
            <returns>如果验证通过为true,否则为false</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DecimalRequiredAttribute">
            <summary>
            Decimal验证特性
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DecimalRequiredAttribute.IsValid(System.Object)">
            <summary>
            验证是否正确
            </summary>
            <param name="value">验证值</param>
            <returns>如果验证通过为true,否则为false</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.StringLengthAttribute">
            <summary>
            字符串长度验证特性类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.StringLengthAttribute.IsValid(System.Object)">
            <summary>
            数据验证
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.StringLengthAttribute.MaximumLength">
            <summary>
            允许的字符串最大长度
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.EmailAttribute">
            <summary>
            邮件验证特性
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.GuidRequiredAttribute">
            <summary>
            Guid必须录入特性
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.GuidRequiredAttribute.IsValid(System.Object)">
            <summary>
            验证是否正确
            </summary>
            <param name="value">验证值</param>
            <returns>如果验证通过为true,否则为false</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ValidateEventHandler">
            <summary>
            验证处理委托
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ValidateEventArgs">
            <summary>
            验证处理委托参数类型
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidateEventArgs.#ctor(ICP.Framework.CommonLibrary.Common.BaseDataObject)">
            <summary>
            构造函数
            </summary>
            <param name="ownerObject">业务对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidateEventArgs.SetErrorInfo(System.String,System.String)">
            <summary>
            设置错误信息
            </summary>
            <param name="propertyName">属性名称</param>
            <param name="message">消息</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ValidatingInfo">
            <summary>
            验证信息
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidatingInfo.IsValid(System.Object)">
            <summary>
            验证是否正确
            </summary>
            <param name="obj">验证值</param>
            <returns>如果验证通过为true,否则为false</returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidatingInfo.Validating">
            <summary>
            验证特性
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidatingInfo.PropertyInfo">
            <summary>
            属性信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidatingInfo.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.Cryptography">
            <summary>
            加密类
            </summary>
            <remarks>
            封装常用的加密算法
            </remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.Cryptography.EncryptMD5String(System.String)">
            <summary>
            md5加密指定字符串
            </summary>
            <param name="a_strValue">要加密的字符串</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.Cryptography.IsSame(System.String,System.String)">
            <summary>
            判断两个加密字符串是否相同
            </summary>
            <param name="a_str1"></param>
            <param name="a_str2"></param>
            <returns>如果相同返回真</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.Cryptography.StringToByteArray(System.String)">
            <summary>
            转换string到Byte树组
            </summary>
            <param name="s">要转换的字符串</param>
            <returns>转换的Byte数组</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.Cryptography.ByteArrayToString(System.Byte[])">
            <summary>
            转换Byte数组到字符串
            </summary>
            <param name="a_arrByte">Byte数组</param>
            <returns>字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.Cryptography.Encrypt3DES(System.String,System.String)">
            <summary>
            3des加密字符串
            </summary>
            <param name="a_strString">要加密的字符串</param>
            <param name="a_strKey">密钥</param>
            <returns>加密后并经base64编码的字符串</returns>
            <remarks>静态方法，采用默认ascii编码</remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.Cryptography.Encrypt3DES(System.String,System.String,System.Text.Encoding)">
            <summary>
            3des加密字符串
            </summary>
            <param name="a_strString">要加密的字符串</param>
            <param name="a_strKey">密钥</param>
            <param name="encoding">编码方式</param>
            <returns>加密后并经base63编码的字符串</returns>
            <remarks>重载，指定编码方式</remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.Cryptography.Decrypt3DES(System.String,System.String)">
            <summary>
            3des解密字符串
            </summary>
            <param name="a_strString">要解密的字符串</param>
            <param name="a_strKey">密钥</param>
            <returns>解密后的字符串</returns>
            <exception cref="T:System.Exception">密钥错误</exception>
            <remarks>静态方法，采用默认ascii编码</remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.Cryptography.Decrypt3DES(System.String,System.String,System.Text.Encoding)">
            <summary>
            3des解密字符串
            </summary>
            <param name="a_strString">要解密的字符串</param>
            <param name="a_strKey">密钥</param>
            <param name="encoding">编码方式</param>
            <returns>解密后的字符串</returns>
            <exception cref="T:System.Exception">密钥错误</exception>
            <remarks>静态方法，指定编码方式</remarks>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.BaseList`1">
            <summary>
            所有业务列表对象的基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
            构造函数
            </summary>
            <param name="items">列表</param>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.BaseList`1.ItemAdded">
            <summary>
            列表对象添加项触发时间
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.BaseList`1.ItemRemoved">
            <summary>
            列表对象删除项触发时间
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.IndexOf(`0)">
            <summary>
            获取项对象所在位置
            </summary>
            <param name="item">项对象</param>
            <returns>返回项对象所在位置</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.Insert(System.Int32,`0)">
            <summary>
            插入项
            </summary>
            <param name="index">位置</param>
            <param name="item">项对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.RemoveAt(System.Int32)">
            <summary>
            删除指定位置上的项
            </summary>
            <param name="index">位置</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.Add(`0)">
            <summary>
            添加指定项
            </summary>
            <param name="item">项对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.Clear">
            <summary>
            清除所有项
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.Contains(`0)">
            <summary>
            是否包含指定项
            </summary>
            <param name="item">项对象</param>
            <returns>如果包含返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.CopyTo(`0[],System.Int32)">
            <summary>
            拷贝数组
            </summary>
            <param name="array">数组对象</param>
            <param name="arrayIndex">拷贝开始位置</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.Remove(`0)">
            <summary>
            删除指定项
            </summary>
            <param name="item">项</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.GetEnumerator">
            <summary>
            获取IEnumerator
            </summary>
            <returns>返回IEnumerator</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            获取IEnumerator
            </summary>
            <returns>返回IEnumerat</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.BeginEdit">
            <summary>
            开始编辑
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.CancelEdit">
            <summary>
            取消编辑
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.BaseList`1.EndEdit">
            <summary>
            结束编辑
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.BaseList`1.IsDirty">
            <summary>
            是否有修改
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.BaseList`1.Item(System.Int32)">
            <summary>
            获取指定位置上的项
            </summary>
            <param name="index">位置</param>
            <returns>返回指定位置上的项</returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.BaseList`1.Count">
            <summary>
            项数
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.BaseList`1.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.ClientConstants">
            <summary>
            客户端需要使用的一些常量定义
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.ServiceBaseAddressKey">
            <summary>
            WCF服务基地址
            应用程序配置文件键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.FileServerBaseUrlKey">
            <summary>
            升级文档下载根路径
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.ApplicationNameKey">
            <summary>
            主程序名称
            应用程序配置文件键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.FileServerUrlKey">
            <summary>
            升级文件服务器地址
            应用程序配置文件键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.UpdateApplicationNameKey">
            <summary>
            升级程序名称
            应用程序配置文件键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.WebSiteUrlKey">
            <summary>
            ICP网站地址
            应用程序配置文件键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.EnableNlsKey">
            <summary>
            EnableNls
            应用程序配置文件键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.ServiceNameSpaceKey">
            <summary>
            WCF服务所属命名空间
            应用程序配置文件键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.TcpServiceNameSpaceKey">
            <summary>
            TCP公告服务所属命名空间
            应用程序配置文件键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.CompressionSizeKey">
            <summary>
            客户端压缩阈值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.tcpServiceBaseAddressKey">
            <summary>
            tcp服务基址键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.DesktopExeNameKey">
            <summary>
            桌面程序名称
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.SessionRequestServicesKey">
            <summary>
            需要Session传输模式的服务名称集合键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.SystemVersionNoKey">
            <summary>
            系统版本号
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.NGenVersionNoKey">
            <summary>
            NGen版本号
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.UpdateVersionNoKey">
            <summary>
            更新程序版本号
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.userNameKey">
            <summary>
            用户名
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.passwordKey">
            <summary>
            密码
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.EncryptKey">
            <summary>
            加密key值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.IsUpdateKey">
            <summary>
            是否为升级 如果是升级 则保存用户密码 否则不保存
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.MainWorkspace">
            <summary>
            主界面主工作区名称
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.InternalDomainKey">
            <summary>
            内部邮箱域名
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.ICPHostServiceBaseAddressKey">
            <summary>
            ICP承载服务基址
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.EmailCenterHostServiceBaseAddressKey">
            <summary>
            Email Center承载服务基址
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.EmailCenterNameKey">
            <summary>
            邮件中心程序名称
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.PropagateContextKey">
            <summary>
            是否传播上下文
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.FilterModulesKey">
            <summary>
            模块加载时需要忽略的模块文件名称
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.SyncCacheDataTimerKey">
            <summary>
            同步本地缓存定时器
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.BatchUploadRelationDataTimerKey">
            <summary>
            批量上传关联信息数据定时器
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.ClientConstants.BatchUploadOperationLogDataTimerKey">
            <summary>
            批量上传操作日志定时器
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IErrorTraceService">
            <summary>
            设置错误信息服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.Clear">
            <summary>
            清空所有错误
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.RemoveAll(System.Windows.Forms.Control)">
            <summary>
            删除全部与指定控件有关的错误
            </summary>
            <param name="owner">窗体控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.RemoveAll(System.Windows.Forms.Control,System.String)">
            <summary>
            删除全部与指定控件有关对象的错误
            </summary>
            <param name="owner">窗体控件</param>
            <param name="className">对象类名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.FilterAll(System.Windows.Forms.Control)">
            <summary>
            过滤指定控件的错误
            </summary>
            <param name="owner">窗体控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.FilterAll(System.Windows.Forms.Control,System.String)">
            <summary>
            过滤指定对象的错误
            </summary>
            <param name="owner">窗体控件</param>
            <param name="className">类名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.String)">
            <summary>
            设置指定窗体控件的错误信息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="message">错误信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.String,System.Windows.Forms.Control)">
            <summary>
            设置错误信息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="message">错误消息</param>
            <param name="control">窗体控件上与错误信息相关的控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.String,System.String,System.String)">
            <summary>
            设置错误信息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="message">错误消息</param>
            <param name="className">类名</param>
            <param name="filedName">与错误信息相关的对象属性</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.String,System.Drawing.Image)">
            <summary>
            设置错误消息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="message">错误消息</param>
            <param name="image">错误图标</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.String,System.Windows.Forms.Control,System.Drawing.Image)">
            <summary>
            设置错误消息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="message">错误消息</param>
            <param name="control">与错误相关的控件</param>
            <param name="image">错误图标</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.Exception)">
            <summary>
            设置错误消息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="exception">异常消息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.Exception,System.Drawing.Image)">
            <summary>
            设置错误消息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="exception">错误消息</param>
            <param name="image">错误图表</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.Exception,System.Windows.Forms.Control)">
            <summary>
            设置错误消息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="exception">异常消息</param>
            <param name="control">与错误相关的控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.Exception,System.String,System.String)">
            <summary>
            设置错误消息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="exception">异常消息</param>
            <param name="className">类名</param>
            <param name="filedName">与错误相关的对象属性</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Windows.Forms.Control,System.Exception,System.Windows.Forms.Control,System.Drawing.Image)">
            <summary>
            设置错误信息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="exception">异常消息</param>
            <param name="control">与错误相关的控件</param>
            <param name="image">错误图标</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetSuccessfullyInfo(System.Windows.Forms.Control,System.String)">
            <summary>
            设置成功提示信息
            </summary>
            <param name="owner">窗体控件</param>
            <param name="message">成功提示信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.ShowMessageBox(System.Int32)">
            <summary>
            显示自定义消息
            </summary>
            <param name="messageId"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.ShowMessageBox(System.Int32[])">
            <summary>
            显示多个自定义消息
            </summary>
            <param name="messageIds"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.ShowMessageBox(System.String,System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="messsage"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IErrorTraceService.SetErrorInfo(System.Collections.Generic.List{ICP.Framework.CommonLibrary.Client.ErrorInfoData})">
            <summary>
            批量设置异常信息
            </summary>
            <param name="errors"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.IErrorTraceService.CurrentOwner">
            <summary>
            错误面板当前关联的窗体控件
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.LocalCommonServices">
            <summary>
            本地UI通用服务
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalCommonServices.Statusbar">
            <summary>
            状态栏服务
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalCommonServices.ToolBar">
            <summary>
            工具栏服务
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalCommonServices.ErrorTrace">
            <summary>
            错误提示服务 
            用于在窗体下方的DockPanel里面显示多条异常信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalCommonServices.Desktop">
            <summary>
            桌面管理服务
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalCommonServices.PermissionService">
            <summary>
            权限管理服务
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.CustomerDescription">
            <summary>
            客户描述信息
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToString(System.Boolean)">
            <summary>
            转换为字符串描述
            </summary>
            <param name="isEnglish">是否英文</param>
            <returns>返回字符串描述</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToString">
            <summary>
            转换为字符串
            </summary>
            <returns>返回字符串描述</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.GetTypeCode">
            <summary>
            未实现
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToBoolean(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToByte(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToChar(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToDateTime(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToDecimal(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToDouble(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToInt16(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToInt32(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToInt64(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToSByte(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToSingle(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToString(System.IFormatProvider)">
            <summary>
            分四行显示名称、地址、电话和传真
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToType(System.Type,System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="conversionType"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToUInt16(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToUInt32(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CustomerDescription.ToUInt64(System.IFormatProvider)">
            <summary>
            未实现
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CustomerDescription.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CustomerDescription.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CustomerDescription.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CustomerDescription.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CustomerDescription.Tel">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CustomerDescription.Fax">
            <summary>
            传真
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CustomerDescription.Contact">
            <summary>
            联系人
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CustomerDescription.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.EncryptType">
            <summary>
            加密方式
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.EncryptType.DES_ID">
            <summary>
            通过一个GUID字串进行加密
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.OperationType">
            <summary>
            业务类型
            0 出口业务；1 进口业务；2 空运出口；3 空运进口；4 派车；5 报关；6 其它业务
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.Unknown">
            <summary>
            不确定
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.OceanExport">
            <summary>
            出口业务
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.OceanImport">
            <summary>
            进口业务
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.AirExport">
            <summary>
            空运出口
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.AirImport">
            <summary>
            空运进口
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.Other">
            <summary>
            其它业务
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.Truck">
            <summary>
            派车
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.Customs">
            <summary>
            报关
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.Internal">
            <summary>
            内贸
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.Trailer">
            <summary>
            集运业务
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.OperationType.InquireRate">
            <summary>
            询价
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.BusinessType">
            <summary>
            业务类型
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.BusinessType.Trk">
            <summary>
            派车
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.BusinessType.Customs">
            <summary>
            报关
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.BusinessType.Internal">
            <summary>
            内贸
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.FormType">
            <summary>
            表单类型
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.Unknown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.Booking">
            <summary>
            托运单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.ShippingOrder">
            <summary>
            装货单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.MBL">
            <summary>
            主提单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.HBL">
            <summary>
            分提单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.Warehouse">
            <summary>
            仓单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.Truck">
            <summary>
            派车单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.Customs">
            <summary>
            报关单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.Bill">
            <summary>
            账单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.Container">
            <summary>
            箱号
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.FormType.ReleaseBL">
            <summary>
            放单管理
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ApplicationType">
            <summary>
            应用程序类型
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.EmailOrientation">
            <summary>
            邮件中心浏览模式枚举
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.EmailOrientation.Horizontal">
            <summary>
            水平
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.EmailOrientation.Vertical">
            <summary>
            垂直
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.GlobalConstants">
            <summary>
            服务端，客户端通用常量
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.GlobalConstants.DividedSymbol">
            <summary>
            数据分割符号
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.GlobalConstants.ShowDividedSymbol">
            <summary>
            显示分割符号
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.GlobalConstants.DATETIMEFORMAT">
            <summary>
            保存到数据库时间格式字符串
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.GlobalConstants.SystemVersionNo">
            <summary>
            系统版本号字典键值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.GlobalConstants.NewRowID">
            <summary>
            新增行ID
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.GlobalConstants.ICPHostNamedPipeServiceName">
            <summary>
            ICP承载的NamedPipe服务名称
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.GlobalConstants.EmailCenterHostNamedPipeServiceName">
            <summary>
            邮件中心承载的NamedPipe服务名称
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ILocalServiceContainer">
            <summary>
            本地服务宿主接口
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.IServiceContainer">
            <summary>
            服务容器接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.IServiceContainer.GetService``1">
            <summary>
            获取服务
            </summary>
            <typeparam name="T">服务类型</typeparam>
            <returns>返回指定类型的服务</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.IServiceContainer.GetService(System.Type)">
            <summary>
            获取服务
            </summary>
            <param name="type">服务类型</param>
            <returns>返回指定类型的服务</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.LoginUserInfo">
            <summary>
            本地用户信息类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.CultureName">
            <summary>
            环境语言名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.ApplicationType">
            <summary>
            应用程序类型：ICP主程序，邮件中心
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.AdministratorId">
            <summary>
            系统管理员用户Id
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.SessionId">
            <summary>
            当前会话ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.ClientId">
            <summary>
            客户端Id，唯一标识
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.IsEnglish">
            <summary>
            是否英文环境
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.EnableCustomDataGrid">
            <summary>
            是否允许列表显示自定义
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.SkinName">
            <summary>
            ICP皮肤样式
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.SystemVersionNo">
            <summary>
            服务端系统版本号
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.SystemNGenVersionNo">
            <summary>
            服务端系统NGen版本号
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.SystemUpdateVersionNo">
            <summary>
            服务端系统升级程序版本号
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.EmailHost">
            <summary>
            传真发送的主机域名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.IsDesignMode">
            <summary>
            当前程序是否处于设计时
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.UserInfo">
            <summary>
            登陆用户信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.PortalType">
            <summary>
            首页类型
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.SystemConfigInfoList">
            <summary>
            系统配置参数字典列表
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.LoginUserInfo.PermissionPackage">
            <summary>
            当前登陆用户的权限包
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ManyResultData">
            <summary>
            保存方法返回数据结果（存在子列表）
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ManyResultData.#ctor">
            <summary>
            Initializes a new instance of the ManyResultData class
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ManyResultData.ChildResults">
            <summary>
            对于子列表返回的结果
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ManyHierarchyResultData">
            <summary>
            保存方法返回数据结果（存在子列表）
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ManyHierarchyResultData.#ctor">
            <summary>
            Initializes a new instance of the ManyResultData class
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ManyHierarchyResultData.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ManyHierarchyResultData.HierarchyCode">
            <summary>
            级联代码
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ManyHierarchyResultData.UpdateDate">
            <summary>
            数据版本(用于控制并发冲突)
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ManyHierarchyResultData.ChildResults">
            <summary>
            对于子列表返回的结果
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ManyResult">
            <summary>
            保存方法返回数据结果（存在子列表）
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SingleResult">
            <summary>
            保存方法返回数据结果(单条）
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResult.#ctor">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResult.Add(System.String,System.Object)">
            <summary>
            在结果集中添加键值对 
            如果已添加相同键的键值对 则覆盖
            </summary>
            <param name="propertyName">名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResult.Add(System.String,System.Object,System.Boolean)">
            <summary>
            在结果集中添加键值对 
            如果已添加相同键的键值对 则覆盖
            </summary>
            <param name="propertyName">名称</param>
            <param name="value">值</param>
            <param name="replaceKey">如果相同键的键值对已存在，是否覆盖</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResult.ContainProperty(System.String)">
            <summary>
            判断属性在字典中是否存在
            </summary>
            <param name="propertyName">属性名称</param>
            <returns>存在状态</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResult.GetValue``1(System.String)">
            <summary>
            返回指定类型的值
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="propertyName">名称</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResult.Copy">
            <summary>
            返回当前结果的副本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResult.CopyTo(ICP.Framework.CommonLibrary.Common.SingleResult)">
            <summary>
            将当前结果集中的所有键值对拷贝到目标结果集中
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResult.ToString">
            <summary>
            输出当前结果集中的所有的键值对
            key: value 一行一对
            为了调试方便，覆盖这个方法。
            作者:Royal
            创建时间:2011-05-27 10:03
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ManyResult.#ctor">
            <summary>
            Initializes a new instance of the ManyResultData class
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ManyResult.Items">
            <summary>
            对于子列表返回的结果
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.HierarchyManyResult">
            <summary>
            保存方法返回数据结果（返回存在父子关系的结果集合）
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.HierarchyManyResult.#ctor">
            <summary>
            Initializes a new instance of the ManyResultData class
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.HierarchyManyResult.#ctor(ICP.Framework.CommonLibrary.Common.SingleResult)">
            <summary>
            结构化的单行结果集
            </summary>
            <param name="result"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.HierarchyManyResult.Childs">
            <summary>
            对于子列表返回的结果
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.PageList">
            <summary>
            PageList为分页搜索功能添加的类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.PageList.DataPageInfo">
            <summary>
            总行数
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DataPageInfo">
            <summary>
            DataPageInfo
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.DataPageInfo.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.DataPageInfo.CurrentPage">
            <summary>
            CurrentPage
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.DataPageInfo.PageSize">
            <summary>
            PageSize
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.DataPageInfo.SortByName">
            <summary>
            SortByName
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.DataPageInfo.SortOrderType">
            <summary>
            SortOrderType
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SortOrderType">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.SortOrderType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.SortOrderType.Desc">
            <summary>
            Desc
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.SortOrderType.Asc">
            <summary>
            Asc
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.RegularExpressionAttribute">
            <summary>
            正则表达式特性类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.RegularExpressionAttribute.IsValid(System.Object)">
            <summary>
            数据验证
            </summary>
            <param name="value">需验证的值</param>
            <returns>验证成功返回true,否则返回false</returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.RegularExpressionAttribute.Pattern">
            <summary>
            模式字符串
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.PublishService`1">
            <summary>
            发布服务抽象类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ISubscriptionService">
            <summary>
            订阅服务接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ISubscriptionService.Subscribe(System.String,System.Collections.Generic.List{System.Guid},System.Guid)">
            <summary>
            订阅
            </summary>
            <param name="eventOperation">想要订阅的事件名称</param>
            <param name="userDepartmentIds">用户所处的部门Id列表</param>
            <param name="clientId">客户端标识</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ISubscriptionService.Unsubscribe(System.String)">
             <summary>
            取消事件订阅
             </summary>
             <param name="eventOperation"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1">
            <summary>
            订阅管理者基类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.m_TransientStore">
            <summary>
            存放临时订阅者 以事件名称为键 以某事件的所有订阅者列表为值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.m_Subscriptor">
            <summary>
            存放订阅者及其所属的部门Id列表信息
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.m_SubcriptorIds">
            <summary>
            存放订阅者及其客户端标识
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.#cctor">
            <summary>
            静态构造函数 初始化临时订阅者存储字典
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.VerifyAddress(System.String)">
            <summary>
            终结点地址验证
            </summary>
            <param name="address"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.GetBindingFromAddress(System.String)">
            <summary>
            从地址传输模式中获取绑定
            </summary>
            <param name="address"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.GetOperations">
            <summary>
            获取回调契约中所有回调方法名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.GetTransientList(System.String,System.Collections.Generic.List{System.Guid})">
            <summary>
            获取临时订阅者列表
            </summary>
            <param name="eventOperation">订阅事件名称</param>
            <param name="notifyDepartmentIds">需要通知的部门Id列表</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.AddTransient(`0,System.String)">
            <summary>
            添加订阅者
            </summary>
            <param name="subscriber">订阅者</param>
            <param name="eventOperation">订阅事件名称</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.RemoveTransient(`0,System.String)">
            <summary>
            移除订阅者
            </summary>
            <param name="subscriber">需移除的订阅者</param>
            <param name="eventOperation">订阅的事件名称</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.Subscribe(System.String,System.Collections.Generic.List{System.Guid},System.Guid)">
            <summary>
            订阅事件
            </summary>
            <param name="eventOperation">需订阅的事件名称，如果为空，则订阅所有事件</param>
            <param name="userDepartmentIds">用户所属的部门Id列表</param>
            <param name="clientId">客户端标识</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.Subscribe(System.String)">
            <summary>
            订阅事件
            </summary>
            <param name="eventOperation">需订阅的事件名称，如果为空，则订阅所有事件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SubscriptionManager`1.Unsubscribe(System.String)">
            <summary>
            取消订阅
            </summary>
            <param name="eventOperation">需取消的订阅事件名称，如果为空，则取消所有订阅事件</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ServiceTypeJudger">
            <summary>
            服务类型判断类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SingleHierarchyResultData">
            <summary>
            保存方法返回数据结果(单条）
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SingleResultData">
            <summary>
            保存方法返回数据结果(单条）
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResultData.#ctor">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleResultData.#ctor(System.Guid,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
            <param name="id">ID</param>
            <param name="updateDate">版本</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SingleResultData.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SingleResultData.UpdateDate">
            <summary>
            数据版本(用于控制并发冲突)
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleHierarchyResultData.#ctor">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleHierarchyResultData.#ctor(System.Guid,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
            <param name="id">ID</param>
            <param name="hierarchyCode">级联代码</param>
            <param name="updateDate">版本</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SingleHierarchyResultData.HierarchyCode">
            <summary>
            级联代码
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SingleNoResultData">
            <summary>
            特殊的结果集,只包含单号和更新时间
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleNoResultData.#ctor">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleNoResultData.#ctor(System.Guid,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
            <param name="id">ID</param>
            <param name="no">单号</param>
            <param name="updateDate">版本</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SingleNoResultData.No">
            <summary>
            单号
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SingleRowIndexResultData">
            <summary>
            单行索引结果数据？
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleRowIndexResultData.#ctor">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SingleRowIndexResultData.#ctor(System.Guid,System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the SingleResultData class
            </summary>
            <param name="id">ID</param>
            <param name="rowIndex">行索引编号</param>
            <param name="updateDate">版本</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SingleRowIndexResultData.RowIndex">
            <summary>
            行号
            (从 0 开始？)
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.ValidationInfoTemplate">
            <summary>
            错误信息模板信息集合类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.ValidationInfoTemplate.Clear">
            <summary>
            清空集合
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.ValidationInfoTemplate.Item(System.Object)">
            <summary>
            集合索引器
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SubscriptionInfo">
            <summary>
            回调订阅用户信息类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.BindingSourceHelper">
            <summary>
            BindingSource帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.BindingSourceHelper.UpdateItem(System.Windows.Forms.BindingSource,System.Object)">
            <summary>
            更新数据源
            </summary>
            <remarks>
            如果数据对象在数据源中则修改，否则新增加
            </remarks>
            <param name="bs">数据源</param>
            <param name="item">更新的数据对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.BindingSourceHelper.InnerUpdateItem(System.Windows.Forms.BindingSource,System.Object)">
            <summary>
            更新BindingSource绑定数据中的指定项
            </summary>
            <param name="bindingSource"></param>
            <param name="item"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.ColorHelper">
            <summary>
            颜色帮助类
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.ColorHelper.FinderColor">
            <summary>
            搜索器颜色值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.ColorHelper.LineInterleavingColor">
            <summary>
            行交替颜色值
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.ColorHelper.LineClosedColor">
            <summary>
            已关闭单据颜色值
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ColorHelper.SetColorStyle(DevExpress.Utils.AppearanceObject,ICP.Framework.CommonLibrary.Client.DataPresenceType)">
            <summary>
            设置颜色样式
            </summary>
            <param name="appearanceObjectEx"></param>
            <param name="dataPresenceType"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SaveResponse">
            <summary>
            保存请求被执行后返回的结果集
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveResponse.Analyze(System.Collections.Generic.List{ICP.Framework.CommonLibrary.Common.SaveRequest},System.Collections.Generic.Dictionary{System.Guid,ICP.Framework.CommonLibrary.Common.SaveResponse},System.Boolean)">
            <summary>
            将返回的结果集对号入座，赋值给本地原始请求
            </summary>
            <param name="requests"></param>
            <param name="responses"></param>
            <param name="hasCommit"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveResponse.RequestId">
            <summary>
            
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveResponse.SingleResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveResponse.ManyResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveResponse.HierarchyManyResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.DatabaseExtend">
            <summary>
            数据库对象扩展
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.Column``1(System.Data.DataRow,System.String)">
            <summary>
            尝试将列的值转换成您要的类型的值
            如果出错能指示出错的列的名称
            </summary>
            <typeparam name="T">要转换的类型</typeparam>
            <param name="row"></param>
            <param name="columnName">列名</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.Column``1(System.Data.DataRow,System.String,System.Boolean)">
            <summary>
            尝试将列的值转换成您要的类型的值
            出错时，可以尝试为您返回您要的类型的默认值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="row"></param>
            <param name="columnName">列名</param>
            <param name="assignDefaultValueIfNull">转换出错时用到这个属性。true，为您返回T的默认值；false，抛出InvalidCaseException异常，并指示列名</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.SingleResult(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            获取单行结果
            </summary>
            <param name="db">数据库对象</param>
            <param name="command">命令</param>
            <returns>返回SingleResultData</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.SingleResult(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.String[])">
            <summary>
            获取单行结果集
            </summary>
            <param name="db">数据库对象</param>
            <param name="command">命令</param>
            <param name="properyNames">属性名数组</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.SingleHierarchyResult(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            获取单行结果
            </summary>
            <param name="db">数据库对象</param>
            <param name="command">命令</param>
            <returns>返回SingleResultData</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.GetStoredProcCommandWithTimeout(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.String)">
            <summary>
            获取指定的存储过程，并有指定的超时值
            超时值设置为60S
            </summary>
            <param name="db"></param>
            <param name="spName"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.ManyResult(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
             获取多行结果
             每行结果都应该包含ID和UpdateDate
            </summary>
            <param name="db">数据库对象</param>
            <param name="command">命令</param>
            <returns>返回ManyResultData</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.ManyResult(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.String[])">
            <summary>
            获取多行结果集
            </summary>
            <param name="db">数据库对象</param>
            <param name="command">命令</param>
            <param name="propertyNames">属性名数组</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.ManyResult(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.String[],ICP.Framework.CommonLibrary.Common.ManyResult@)">
            <summary>
            为了配合事务的封装
            </summary>
            <param name="db"></param>
            <param name="command"></param>
            <param name="propertyNames"></param>
            <param name="outerResult"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.ManyResults(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.String[][])">
            <summary>
            获取多个表的结果集
            </summary>
            <param name="db"></param>
            <param name="command"></param>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.ManyHierarchyResult(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand,System.Guid)">
            <summary>
             获取多行结果
            </summary>
            <param name="db">数据库对象</param>
            <param name="command">命令</param>
            <param name="id">主ID</param>
            <returns>返回ManyResultData</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DatabaseExtend.Equals``1(``0[],``0[])">
            <summary>
            数组比较
            </summary>
            <typeparam name="T"></typeparam>
            <param name="a1"></param>
            <param name="a2"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.SaveRequestTerminator">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SaveRequestTerminator.RaiseEvent(System.Collections.Generic.List{ICP.Framework.CommonLibrary.Common.SaveRequest},System.Collections.Generic.List{ICP.Framework.CommonLibrary.Common.SaveRequest},System.Boolean)">
            <summary>
            触发本地集合中各个操作的结果事件
            </summary>
            <param name="resultFromServer">将结果集和客户端对应起来，并且触发所有客户端操作的事件</param>
            <param name="originals">只有原始的列表里面的事件才能执行。前面的commands是从服务端返回后的对象，不会保存客户端的事件委托。</param>
            <param name="transactionHasCommited">事务是否成功Commit</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.SingleCommand">
            <summary>
            单个命令
            1、通知下一个命令可以开始了；
            2、维护结果集
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommand.#ctor">
            <summary>
            初始化操作
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommand.ValidateParameters(System.Boolean,System.RuntimeMethodHandle)">
            <summary>
            
            </summary>
            <param name="validate"></param>
            <param name="handler"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommand.RaiseEvent">
            <summary>
            根据整个事务执行的结果，触发成功或失败的事件
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommand.CommandId">
            <summary>
            分配给操作的唯一标识
            用于从服务端返回后和客户端的变量精确的一一对应
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommand.SingleResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommand.ManyResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommand.HierarchyManyResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommand.Parameters">
            <summary>
            要压入服务端方法的参数
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommand.ClassName">
            <summary>
            要调用的服务端的类的名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommand.MethodName">
            <summary>
            要调用上述类中的方法的名称
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Helper.SingleCommand.Successed">
            <summary>
            调用成功后触发
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommand.HasCommit">
            <summary>
            整个事务是否执行成功
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Helper.SingleCommand.Failed">
            <summary>
            调用失败后触发
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection">
            <summary>
            支持事务的数据库调用方法的集合
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.Commands">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.RaiseEvent(ICP.Framework.CommonLibrary.Helper.SingleCommandCollection)">
            <summary>
            触发集合中各个操作的结果事件
            </summary>
            <param name="commands">将结果集和客户端对应起来，并且触发所有客户端操作的事件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.Add(ICP.Framework.CommonLibrary.Helper.SingleCommand)">
            <summary>
            添加要执行的操作
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.Clear">
            <summary>
            清除所有已经添加的操作
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.Contains(ICP.Framework.CommonLibrary.Helper.SingleCommand)">
            <summary>
            是否包含某个操作
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.CopyTo(ICP.Framework.CommonLibrary.Helper.SingleCommand[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.Remove(ICP.Framework.CommonLibrary.Helper.SingleCommand)">
            <summary>
            从当前集合中移除某个操作
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.IsTransactionCommited">
            <summary>
            获取或设置事务执行的结果
            true表示事务成功commit
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.Count">
            <summary>
            返回当前集合中的操作的数量
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SingleCommandCollection.IsReadOnly">
            <summary>
            是否允许修改
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.Transaction">
            <summary>
            在客户端实现事务操作
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Transaction.#ctor">
            <summary>
            初始化事务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Transaction.Commit">
            <summary>
            提交事务
            所有的Action都执行完了，一定要手动调用此方法。否则事务在超时后会自动回滚。
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.Transaction.TransactionId">
            <summary>
            获取事务的唯一标识
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.TransactionManager">
            <summary>
            事务管理器
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TransactionManager.GetTransactionScope(System.Guid)">
            <summary>
            
            </summary>
            <param name="guid"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TransactionManager.InvokeActionIntoTransactionScope(System.Action,System.Guid)">
            <summary>
            将数据库操作的执行，纳入TransactionScope
            </summary>
            <param name="action"></param>
            <param name="transactionId"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TransactionManager.InvokeInTransaction(System.Action,System.Guid)">
            <summary>
            自动附加事务
            </summary>
            <param name="action"></param>
            <param name="transactionId"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TransactionManager.BeginTransaction">
            <summary>
            开始事务
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TransactionManager.Commit(System.Guid)">
            <summary>
            结束事务
            </summary>
            <param name="guid"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.TransactionManager.Instance">
            <summary>
            唯一实例
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SaveRequest">
            <summary>
            单个命令
            1、通知下一个命令可以开始了；
            2、维护结果集
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequest.#ctor">
            <summary>
            初始化操作
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequest.RaiseEvent">
            <summary>
            根据整个事务执行的结果，触发成功或失败的事件
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.SaveRequest.InvolvedObjects">
            <summary>
            涉及到的对象
            这些对象在操作结束后可以做进一步处理
            一定是List T，为了使用NonSerialized标记而用object类型。
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequest.AddInvolvedObject(System.Object)">
            <summary>
            添加受影响的对象
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequest.UnBoxInvolvedObject``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveRequest.RequestId">
            <summary>
            分配给操作的唯一标识
            用于从服务端返回后和客户端的变量精确的一一对应
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveRequest.SingleResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveRequest.ManyResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveRequest.HierarchyManyResult">
            <summary>
            方法执行后可能返回这个结果
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveRequest.HasCommit">
            <summary>
            整个事务是否执行成功
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Common.SaveRequest.Failed">
            <summary>
            调用失败后触发
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Common.SaveRequest.Successed">
            <summary>
            调用成功后触发
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.SaveRequestCollection">
            <summary>
            支持事务的数据库调用方法的集合
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.Commands">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.RaiseEvent(ICP.Framework.CommonLibrary.Common.SaveRequestCollection)">
            <summary>
            触发集合中各个操作的结果事件
            </summary>
            <param name="commands">将结果集和客户端对应起来，并且触发所有客户端操作的事件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.Add(ICP.Framework.CommonLibrary.Common.SaveRequest)">
            <summary>
            添加要执行的操作
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.Clear">
            <summary>
            清除所有已经添加的操作
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.Contains(ICP.Framework.CommonLibrary.Common.SaveRequest)">
            <summary>
            是否包含某个操作
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.CopyTo(ICP.Framework.CommonLibrary.Common.SaveRequest[],System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.Remove(ICP.Framework.CommonLibrary.Common.SaveRequest)">
            <summary>
            从当前集合中移除某个操作
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.IsTransactionCommited">
            <summary>
            获取或设置事务执行的结果
            true表示事务成功commit
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.Count">
            <summary>
            返回当前集合中的操作的数量
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.SaveRequestCollection.IsReadOnly">
            <summary>
            是否允许修改
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.DataTableHelper">
            <summary>
            system.data.DataTable的帮助方法
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataTableHelper.ConvertString(System.String)">
            <summary>
            用于DataTable.Select转换特殊字符
            </summary>
            <param name="input">input</param>
            <returns>ouput</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.DataZipStream">
            <summary>
            数据压缩
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.CompressionDataSet(System.Data.DataSet)">
            <summary>
            压缩DataSet
            </summary>
            <param name="dsOriginal"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.DecompressionDataSet(System.Byte[])">
            <summary>
            解压DataSet
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.CompressFile(System.String,System.String)">
            <summary>
            压缩文件
            </summary>
            <param name="sourceFile">源文件</param>
            <param name="destinationFile">压缩后的文件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.DecompressFile(System.String,System.String)">
            <summary>
            解压文件
            </summary>
            <param name="sourceFile"></param>
            <param name="destinationFile"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.CompressionArrayList(System.Collections.IList)">
            <summary>
            压缩List
            </summary>
            <param name="DataOriginal"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.DecompressionArrayList(System.Byte[])">
            <summary>
            解压List
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.CompressionObject(System.Object)">
            <summary>
            压缩Object
            </summary>
            <param name="DataOriginal"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.DecompressionObject(System.Byte[])">
            <summary>
            解压Object
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.ZipString(System.String)">
            <summary>
            压缩字符串
            </summary>
            <param name="unCompressedString"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DataZipStream.UnzipString(System.String)">
            <summary>
            解压字符串
            </summary>
            <param name="unCompressedString"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.DevHelper">
            <summary>
            DevExpress适用的一些静态方法
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DevHelper.FormatMoney(DevExpress.XtraEditors.SpinEdit)">
            <summary>
            千位分隔符和小数点后两位
            </summary>
            <param name="spinEdit"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DevHelper.SetSpinEditFormat(DevExpress.XtraEditors.SpinEdit,System.String)">
            <summary>
            
            </summary>
            <param name="spinEdit"></param>
            <param name="mask"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DevHelper.FormatSpinEdit(DevExpress.XtraEditors.SpinEdit,System.Int32)">
            <summary>
            
            </summary>
            <param name="spinEdit">要限制的SpinEdit</param>
            <param name="length">小数点后的位数</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DevHelper.FormatSpinEditForInteger(DevExpress.XtraEditors.SpinEdit)">
            <summary>
            
            </summary>
            <param name="spinEdit"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DevHelper.DrawCheckBox(DevExpress.XtraGrid.Views.Grid.ColumnHeaderCustomDrawEventArgs,System.Boolean)">
            <summary>
            在指定的列头显示勾选框
            </summary>
            <param name="e"></param>
            <param name="chk"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DevHelper.ClickGridCheckBox(DevExpress.XtraGrid.Views.Grid.GridView,System.String,System.Boolean)">
            <summary>
            点击列头的勾选框，切换所有行对应列的勾选
            </summary>
            <param name="gridView"></param>
            <param name="fieldName"></param>
            <param name="currentStatus"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.FastZipHelper">
            <summary>
            zip文件解压辅助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FastZipHelper.ExtractFile(System.String,System.String)">
            <summary>
            解压当前目录下的zip文件到指定目录
            </summary>
            <param name="zipFileName"></param>
            <param name="targetDirectory"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FastZipHelper.ExtractFile(System.String)">
            <summary>
            解压zip文件到当前目录
            </summary>
            <param name="zipFileName"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FastZipHelper.ExtractSystemUpdateFile">
            <summary>
            解压系统升级文件到程序当前目录 文件名指定为ICPFiles.zip 并在解压后将原压缩文件删除
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods">
            <summary>
            字符串加解密的静态扩展
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.EMailRegularExpression">
            <summary>
            匹配Email地址的正则表达式
            http://msdn.microsoft.com/en-us/library/01escwtf.aspx 参考链接
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.URLRegularExpression">
            <summary>
            匹配网址URL的正则表达式
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.HexRegularExoression">
            <summary>
            Xml十六进制正则表达式
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.HTMLRegularExpression">
            <summary>
            匹配HTML标记的正则表达式
            <remarks>
            仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力
            </remarks>
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.QQRegularExpression">
            <summary>
            匹配腾讯QQ号
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.PostCodeRegularExpression">
            <summary>
            匹配中国邮政编码
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IDCardRegularExpression">
            <summary>
            匹配身份证
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IPRegularExpression">
            <summary>
            匹配ip地址
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.TELRegularExpression">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.Encrypt(System.String,System.String,ICP.Framework.CommonLibrary.Common.EncryptType)">
            <summary>
            String 的加密扩展
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.Decrypt(System.String,System.String,ICP.Framework.CommonLibrary.Common.EncryptType)">
            <summary>
            String 的解密扩展
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.MatchUseRegex(System.String,System.String)">
            <summary>
            从字符串获取匹配的子串
            </summary>
            <param name="source">源字符串</param>
            <param name="regexExpression">要匹配的正则表达式</param>
            <returns>匹配的子串列表</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.DecodeSpecialCharacter(System.String)">
            <summary>
            将特殊字符解码
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.EncodeSpecialCharacter(System.String)">
            <summary>
            将特殊字符编码
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.ReplaceHexCharacter(System.String,System.String)">
            <summary>
            将字符序列化成xml时，需要将十六进制字符转换
            </summary>
            <param name="source"></param>
            <param name="replacement"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IsValidEmail(System.String)">
            <summary>
            验证邮件地址是否有效
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IsNullOrEmpty(System.String)">
            <summary>
            String 的IsNullOrEmpty扩展(其实就是换种写法)
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.ToGuid(System.String)">
            <summary>
            如果input IsNullOrEmpty,返回Guid.Empty,不然就返回new Guid(input),转换不成会会报错
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IsIP(System.String)">
            <summary>
            是否ip地址
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IsIDCard(System.String)">
            <summary>
            是否身份证
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IsPostCode(System.String)">
            <summary>
            是否邮边
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IsQQ(System.String)">
            <summary>
            是否QQ
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IsHTML(System.String)">
            <summary>
            是否HTML
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.StringExtensionMethods.IsTEL(System.String)">
            <summary>
            是否电话
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.DecimalExtensionMethods">
            <summary>
            decimal静态扩展
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DecimalExtensionMethods.IsNullOrZero(System.Nullable{System.Decimal})">
            <summary>
            decimal 是否为空或0
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.EnumHelper">
            <summary>
            枚举处理帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.EnumHelper.GetEnumValues``1(System.Boolean)">
            <summary>
            获取枚举成员列表
            </summary>
            <typeparam name="T">枚举类型</typeparam>
            <param name="english">是否英文环境</param>
            <returns>返回枚举成员列表</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.EnumHelper.GetDescription``1(``0,System.Boolean,System.Boolean)">
            <summary>
            获取枚举类型值的描述信息.
            2011-05-18 修改：没有标签的时候返回value本身的字符串形式
            </summary>
            <param name="value">枚举类型值</param>
            <param name="english">是否英文环境</param>
            <param name="returnEmptyIfNull">对为空值的枚举(值为0时)返回Empty</param>
            <returns>返回枚举成员的描述</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.EnumHelper.GetDescription``1(``0,System.Boolean)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="english"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.EnumHelper.ToString(System.Object)">
            <summary>
            转化为名称
            </summary>
            <param name="enumvalue">枚举值</param>
            <returns>返回转换后的名称</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.EnumHelper.ListItem`1">
            <summary>
            成员类型
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.EnumHelper.ListItem`1.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.EnumHelper.ListItem`1.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.ExceptionHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ExceptionHelper.MaskSqlServerException(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.FtpHelper">
            <summary>
            FTP 帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FtpHelper.Upload(System.String,System.String,System.String,System.String,System.String,System.Byte[])">
            <summary>
            发送FTP文件
            </summary>
            <param name="host">FTP主机</param>
            <param name="path">路径</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <param name="filename">上传到服务器储存的文件名</param>
            <param name="datas">上传文件内容</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FtpHelper.Download(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="host">主机</param>
            <param name="path">路径</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <param name="remoteFileName">文件名</param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.FTPClient">
            <summary>
             FTP客户端类库
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.#ctor">
            <summary>
            构造函数. 
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.GetFileList(System.String,System.Boolean)">
            <summary>
            返回目录下的文件名称数组
            </summary>
            <param name="mask">搜索模式</param>
            <param name="longDirListing">发送LIST 替代 NLST</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.GetFileSize(System.String)">
            <summary>
            获取文件大小.
            </summary>
            <param name="fileName">远程文件路径名称</param>
            <returns>Size of file in bytes</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Login">
            <summary>
            登陆远程服务器.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.SetBinaryMode(System.Boolean)">
            <summary>
            设置传输类型 
            </summary>
            <param name="mode">True 为 binary 类型, false 为其他类型</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Download(System.String)">
            <summary>
            下载远程文件到本地目录,
            保持原始文件名.
            </summary>
            <param name="remFileName">远程文件路径名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Download(System.String,System.Boolean)">
            <summary>
            下载远程文件到本地目录,
            保持原始文件名.并发送复位标识
            </summary>
            <param name="remFileName">Remote file name</param>
            <param name="resume">Resume</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Download(System.String,System.String)">
            <summary>
            下载远程文件到本地指定的目录路径
            </summary>
            <param name="remFileName">Remote file name</param>
            <param name="locFileName">Local file name</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Download(System.String,System.String,System.Boolean)">
            <summary>
            下载远程文件到本地指定的文件路径
            </summary>
            <param name="remFileName">远程文件路径</param>
            <param name="locFileName">本地文件路径</param>
            <param name="resume">是否断点续传</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.DownloadContent(System.String,System.Boolean)">
            <summary>
            下载指定文件到内存字节数组
            </summary>
            <param name="remFileName">远程文件名称</param>
            <param name="resume">是否断点续传</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Upload(System.String)">
            <summary>
            上传一个文件.
            </summary>
            <param name="fileName">本地文件路径名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Upload(System.String,System.Boolean)">
            <summary>
            上传一个文件，并发送复位标识
            </summary>
            <param name="fileName">本地文件路径名</param>
            <param name="resume">是否复位</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Upload(System.String,System.Byte[])">
            <summary>
            上传一个文件，并发送复位标识
            </summary>
            <param name="fileName">本地文件路径名</param>
            <param name="datas">字节数组</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.DeleteRemoteFile(System.String)">
            <summary>
            从FTP服务器上删除指定文件.
            </summary>
            <param name="fileName">要删除文件名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.RenameRemoteFile(System.String,System.String)">
            <summary>
            重命名远程文件.
            </summary>
            <param name="oldFileName">原始文件名</param>
            <param name="newFileName">新文件名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Mkdir(System.String)">
            <summary>
            在远程服务器上创建一个目录.
            </summary>
            <param name="dirName">目录名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Rmdir(System.String)">
            <summary>
            删除远程目录.
            </summary>
            <param name="dirName">目录名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Chdir(System.String)">
            <summary>
            改变远程服务器上的工作目录.
            </summary>
            <param name="dirName">切换到的目录名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.Close">
            <summary>
            关闭与远程服务器的连接.
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.readReply">
            <summary>
             获取服务器返回的信息.
             </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.FTPClient.sendCommand(System.String)">
            <summary>
             发送FTP协议的命令，比如 NLST, LIST,CWD
             </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.FTPClient.RemoteHost">
            <summary>
            获取或设置远程主机地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.FTPClient.RemotePort">
            <summary>
            获取或设置远程主机链接端口
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.FTPClient.RemotePath">
            <summary>
            获取或设置初始目录
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.FTPClient.UserName">
            <summary>
            设置远程主机登陆用户名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.FTPClient.Password">
            <summary>
            获取或设置远程主机登陆密码
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.FTPClient.Debug">
            <summary>
            设置是否为调试模式
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.FTPClient.ServerResponse">
            <summary>
             获取最后一个命令引发的服务器响应的信息字符串
             </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.FTPClient.ResponseCode">
            <summary>
             获取服务器返回的代码
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.GridHelper">
            <summary>
            网格处理帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GridHelper.ToggleSelectAllRows(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            切换行全选或全不选
            </summary>
            <param name="grid"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GridHelper.SetColorStyle(DevExpress.Utils.AppearanceObject,ICP.Framework.CommonLibrary.Helper.PresenceStyle)">
            <summary>
            设置颜色样式？
            </summary>
            <param name="appearanceObjectEx"></param>
            <param name="dataPresenceType"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.PresenceStyle">
            <summary>
            样式
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.PresenceStyle.Disabled">
            <summary>
            作废
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.PresenceStyle.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.PresenceStyle.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.PresenceStyle.NewLine">
            <summary>
            新行
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.PresenceStyle.Confirmed">
            <summary>
            确认过、审核过
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.PresenceStyle.Bold">
            <summary>
            字体加粗
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Helper.PresenceStyle.BoldAndDisabled">
            <summary>
            作废并且字体加粗
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.GridViewHelper">
            <summary>
            做原型时一些辅助方法
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GridViewHelper.FillData(DevExpress.XtraGrid.Views.Grid.GridView)">
            <summary>
            以随机数据填充网格
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GridViewHelper.ExpandAllRows(DevExpress.XtraGrid.Views.Grid.GridView,System.Boolean)">
            <summary>
            展开/搜索全部子试图
            </summary>
            <param name="view">网格视图</param>
            <param name="expand">是否展开</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Logger">
            <summary>
            提供最简单的办法来使用log4net开源组件，免配置文件
            作者：熊中方
            创建时间：2011-05-09 18:04
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Logger.Log">
            <summary>
            一个已经配置好了的日志记录器
            日志输出路径是应用程序的当前运行目录下的子目录LogFiles
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.ObjectHelper">
            <summary>
            对象帮助类 
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.Create(System.Type)">
            <summary>
            创建指定类型的对象 
            </summary>
            <param name="type">对象类型</param>
            <returns>返回对象类型的实例</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.Create``1">
            <summary>
            创建指定类型的对象 
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <returns>返回对象类型的实例</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.SetValue(System.Object,System.Reflection.PropertyInfo,System.Object)">
            <summary>
            设置对象指定属性的值
            </summary>
            <param name="item">对象</param>
            <param name="p">属性</param>
            <param name="value">值</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.SetValue(System.Object,System.String,System.Object)">
            <summary>
            设置对象指定属性的值
            </summary>
            <param name="obj">对象</param>
            <param name="propertyname">属性</param>
            <param name="value">值</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.GetValue(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            获取指定对象的属性值
            </summary>
            <param name="obj">数据对象</param>
            <param name="p">属性</param>
            <returns>返回指定的属性的值</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.GetValue(System.Object,System.String)">
            <summary>
            获取指定对象的属性值
            </summary>
            <param name="obj">数据对象</param>
            <param name="propertyname">属性</param>
            <returns>返回指定的属性的值</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.CopyData(System.Object,System.Object)">
            <summary>
            拷贝数据
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.CopyData``1(``0,``0)">
            <summary>
            拷贝数据
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.GetTypeName(System.Type)">
            <summary>
            获取对象的类型名称
            </summary>
            <param name="type">对象类型</param>
            <returns>返回类型名称</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ObjectHelper.CleanPropertyValue(System.Object,System.String)">
            <summary>
            设置对象指定属性的值
            </summary>
            <param name="item">对象</param>
            <param name="propertyname">属性</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IDataFindClientService">
            <summary>
            搜索器客户端服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterGridColumnFinder(System.Object,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            实际此方法执行 注册网格搜索器3
            </summary>
            <param name="column">列</param>
            <param name="finderKey">搜索器的名字</param>
            <param name="valueField">网格数据源对应的属性列</param>
            <param name="textField">网格数据源对应的属性列</param>
            <param name="resultValueField">搜索器返回结果的属性列</param>
            <param name="resultTextField">搜索器返回结果的属性列</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterGridColumnFinder(System.Object,System.String,System.String,System.String,System.String,System.String,ICP.Framework.CommonLibrary.Client.AfterDataPickedHandler)">
            <summary>
            实际此方法执行 注册网格搜索器3
            </summary>
            <param name="column">列</param>
            <param name="finderKey">搜索器的名字</param>
            <param name="valueField">网格数据源对应的属性列</param>
            <param name="textField">网格数据源对应的属性列</param>
            <param name="resultValueField">搜索器返回结果的属性列</param>
            <param name="resultTextField">搜索器返回结果的属性列</param>
            <param name="afterDataPickedHandler">在返回结果后</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterGridColumnFinder(System.Object,System.String,System.String,System.String,System.String,System.String,ICP.Framework.CommonLibrary.Client.ConditionsGetHandler)">
            <summary>
            实际此方法执行 注册网格搜索器3
            </summary>
            <param name="column">列</param>
            <param name="finderKey">搜索器的名字</param>
            <param name="valueField">网格数据源对应的属性列</param>
            <param name="textField">网格数据源对应的属性列</param>
            <param name="resultValueField">搜索器返回结果的属性列</param>
            <param name="resultTextField">搜索器返回结果的属性列</param>
            <param name="conditionsGetHandler">多条件搜索对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterGridColumnFinder(System.Object,System.String,System.String[],System.String[])">
            <summary>
            实际此方法执行 注册网格搜索器3
            </summary>
            <param name="column">列</param>
            <param name="finderKey">搜索常量</param>
            <param name="sourceFields">网格数据源对应的属性列</param>
            <param name="resultFields">搜索器返回结果的属性列</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterGridColumnFinder(System.Object,System.String,System.String[],System.String[],ICP.Framework.CommonLibrary.Client.ConditionsGetHandler)">
            <summary>
            实际此方法执行 注册网格搜索器3
            </summary>
            <param name="column">列</param>
            <param name="finderKey">搜索常量</param>
            <param name="sourceFields">网格数据源对应的属性列</param>
            <param name="resultFields">搜索器返回结果的属性列</param>
            <param name="conditionsGetHandler">多条件搜索对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterGridColumnFinder(System.Object,System.String,System.String[],System.String[],ICP.Framework.CommonLibrary.Client.ConditionsGetHandler,ICP.Framework.CommonLibrary.Client.AfterDataPickedHandler)">
            <summary>
            注册网格搜索器3
            </summary>
            <param name="column">列</param>
            <param name="finderKey">搜索常量</param>
            <param name="sourceFields">网格数据源对应的属性列</param>
            <param name="resultFields">搜索器返回结果的属性列</param>
            <param name="conditionsGetHandler">多条件搜索对象</param>
            <param name="afterPickedHandler">在返回结果后</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterTreeListColumnFinder(System.Object,System.Object,System.String,System.String[],System.String[],ICP.Framework.CommonLibrary.Client.ConditionsGetHandler,ICP.Framework.CommonLibrary.Client.AfterDataPickedHandler)">
            <summary>
            注册树形网格搜索器
            </summary>
            <param name="column">列</param>
            <param name="finderKey">搜索常量</param>
            <param name="sourceFields">网格数据源对应的属性列</param>
            <param name="resultFields">搜索器返回结果的属性列</param>
            <param name="conditionsGetHandler">多条件搜索对象</param>
            <param name="afterPickedHandler">在返回结果后</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterMiniFinder(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.String[],ICP.Framework.CommonLibrary.Client.DataPickedHandler,ICP.Framework.CommonLibrary.Client.DataClearHandler)">
            <summary>
            注册简易搜索器控件
            </summary>
            <param name="subject">目标控件(必须是MiniFinderPopupContainerEdit)</param>
            <param name="finderName">搜索器常量</param>
            <param name="searchField">搜索字段</param>
            <param name="dispayField">显示在文本框中对应的字段</param>
            <param name="valueField">绑定到控件Tag的字段</param>
            <param name="resultFields">返回那些字段</param>
            <param name="handler">成功后处理委托</param>
            <param name="clearHandler">清除处理委托</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.RegisterMultiple(System.Windows.Forms.Control,System.String,System.String,System.String[],ICP.Framework.CommonLibrary.Client.ConditionsGetHandler,ICP.Framework.CommonLibrary.Client.DataPickedHandler,ICP.Framework.CommonLibrary.Client.DataClearHandler,ICP.Framework.CommonLibrary.Client.GetExistValueHandler,System.String)">
            <summary>
            注册多选
            </summary>
            <param name="subject">主角</param>
            <param name="finderName">搜索器常量</param>
            <param name="searchField">搜索字段</param>
            <param name="resultFields">搜索字段</param>
            <param name="conditionsGetHandler">搜索器实现方设置搜索条件时调用的委托</param>
            <param name="handler">成功后处理委托</param>
            <param name="clearHandler">清除处理委托</param>
            <param name="workspace">workspace</param>
            <param name="getExistValueHandler">获取已选值</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.Register(System.Windows.Forms.Control,System.String,System.String,System.String[],ICP.Framework.CommonLibrary.Client.DataPickedHandler,ICP.Framework.CommonLibrary.Client.DataClearHandler,System.String)">
            <summary>
            注册搜索器
            </summary>
            <param name="subject"></param>
            <param name="finderName">搜索器的名字，如：Customer</param>
            <param name="searchField">搜索字段名，分为两部分， 如：cCode/cName</param>
            <param name="resultFields">指定返回的数据字段, 例： new string[]{ID , Name ,Address}</param>
            <param name="pickedHandler">搜索到值后的处理方法。 建议直接用匿名代理：
                                       delegate(object[] data){
                                             this.tbShipper.Text = data[0].ToString(); 
                                             this.tbShipper.Tag = data[1].ToString();
                                             };</param>
            <param name="clearHndler">用户取消搜索后触发的委托</param>
            <param name="workspace">在界面上容器的ID</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.Register(System.Windows.Forms.Control,System.String,System.String,System.String[],ICP.Framework.CommonLibrary.Client.ConditionsGetHandler,ICP.Framework.CommonLibrary.Client.DataPickedHandler,ICP.Framework.CommonLibrary.Client.DataClearHandler,System.String)">
            <summary>
            注册搜索器
            </summary>
            <param name="subject"></param>
            <param name="finderName">搜索器的名字，如：Customer</param>
            <param name="searchField">搜索字段名，分为两部分， 如：cCode/cName</param>
            <param name="resultFields">指定返回的数据字段, 例： new string[]{ID , Name ,Address}</param>
            <param name="conditionsGetHandler">搜索器实现方设置搜索条件时调用的委托</param>
            <param name="pickedHandler">搜索到值后的处理方法。 建议直接用匿名代理：
                                       delegate(object[] data){
                                             this.tbShipper.Text = data[0].ToString(); 
                                             this.tbShipper.Tag = data[1].ToString();
                                             };</param>
            <param name="clearHndler">用户取消搜索后触发的委托</param>
            <param name="workspace">在界面上容器的ID</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.Register(System.Windows.Forms.Control,System.String,System.String,System.String[],ICP.Framework.CommonLibrary.Client.DataPickedHandler,System.Object,System.String)">
            <summary>
            注册搜索器
            </summary>
            <param name="subject"></param>
            <param name="finderName">搜索器的名字，如：Customer</param>
            <param name="searchField">搜索字段名，分为两部分， 如：cCode/cName</param>
            <param name="resultFields">指定返回的数据字段, 例： new string[]{ID , Name ,Address}</param>
            <param name="handler">搜索到值后的处理方法。 建议直接用匿名代理：
                                       delegate(object[] data){
                                             this.tbShipper.Text = data[0].ToString(); 
                                             this.tbShipper.Tag = data[1].ToString();
                                             };</param>
            <param name="defualtValue"></param>
            <param name="workspace"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.Register(System.Windows.Forms.Control,System.String,System.String,System.String[],ICP.Framework.CommonLibrary.Client.DataPickedHandler,System.String)">
            <summary>
            注册搜索器
            </summary>
            <param name="subject"></param>
            <param name="finderName">搜索器的名字，如：Customer</param>
            <param name="searchField">搜索字段名，分为两部分， 如：cCode/cName</param>
            <param name="resultFields">指定返回的数据字段, 例： new string[]{ID , Name ,Address}</param>
            <param name="handler">搜索到值后的处理方法。 建议直接用匿名代理：
                                       delegate(object[] data){
                                             this.tbShipper.Text = data[0].ToString(); 
                                             this.tbShipper.Tag = data[1].ToString();
                                             };</param>
            <param name="workspace"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFindClientService.Register(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            注册搜索器
            </summary>
            <param name="subject">文本输入框</param>
            <param name="finderName">搜索器的名字，如：Customer</param>
            <param name="searchField">搜索字段名，分为两部分， 如：cCode/cName</param>
            <param name="textField">取指定字段在值付给Text属性</param>
            <param name="tagField">取指定字段在值付给Tag属性</param>
            <param name="workspace"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.DataPickedHandler">
            <summary>
            数据选择后处理委托
            </summary>
            <param name="inputSource">对象</param>
            <param name="pickedData">选择数据</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.DataClearHandler">
            <summary>
            数据清除处理委托
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.FinderType">
            <summary>
            搜索器的类型 (单选 =0,多选,迷你单选,迷你多选
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderType.Single">
            <summary>
            单选
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderType.Multy">
            <summary>
            多选
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderType.MiniSingle">
            <summary>
            迷你单选
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.FinderType.MiniMulty">
            <summary>
            迷你多选
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.AfterDataPickedHandler">
            <summary>
            数据选择后处理委托
            </summary>
            <param name="befocePickedData">befocePickedData</param>
            <param name="afterPickedData">afterPickedData</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.PickOneHandler">
            <summary>
            单选处理委托
            </summary>
            <param name="searchValue">搜索值</param>
            <param name="property">搜索属性</param>
            <param name="conditions">其它条件</param>
            <param name="triggerType">触发搜索的类型( KeyEnte=0,点击按钮=1)</param>
            <returns>返回选择的结果</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.PickManyHandler">
            <summary>
            多选处理委托
            </summary>
            <param name="searchValue">搜索值</param>
            <param name="property">搜索属性</param>
            <param name="conditions">其它条件</param>
            <param name="triggerType">触发搜索的类型( KeyEnte=0,点击按钮=1)</param>
            <param name="getExistValueHandler">用于多选搜索器中获取已选数据的委托</param>
            <returns>返回选择的结果</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IDataFinderFactory">
            <summary>
            数据搜索工厂
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinderFactory.GetDataFinder(System.String)">
            <summary>
            获取普通搜索器
            </summary>
            <param name="finderKey">搜索器常量</param>
            <returns>返回普通搜索器</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinderFactory.GetMiniDataFinder(System.String)">
            <summary>
            获取简易搜索器
            </summary>
            <param name="finderKey">搜索器常量</param>
            <returns>返回简易搜索器</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinderFactory.Register``1(System.String,ICP.Framework.CommonLibrary.Client.PickOneHandler,ICP.Framework.CommonLibrary.Client.PickManyHandler)">
            <summary>
            注册搜索器
            </summary>
            <typeparam name="dfProxy">代理类型</typeparam>
            <param name="finderKey">搜索器常量</param>
            <param name="pickoneHandler">单选处理方法</param>
            <param name="pickmanyHandler">多选处理方法</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinderFactory.Register``1(System.String,System.String,ICP.Framework.CommonLibrary.Client.PickOneHandler,ICP.Framework.CommonLibrary.Client.PickManyHandler)">
            <summary>
            注册搜索器
            </summary>
            <typeparam name="dfProxy">代理类型</typeparam>
            <param name="finderKey">搜索器常量</param>
            <param name="finderTitle">搜索器标题</param>
            <param name="pickoneHandler">单选处理方法</param>
            <param name="pickmanyHandler">多选处理方法</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinderFactory.Register(System.String,System.Type)">
            <summary>
            注册搜索器
            </summary>
            <param name="finderKey">搜索器常量</param>
            <param name="finderType">搜索器类型</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinderFactory.Register``1(System.String)">
            <summary>
            注册普通搜索器
            </summary>
            <typeparam name="T">普通搜索器类型</typeparam>
            <param name="finderKey">搜索器常量</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDataFinderFactory.RegisterMini``1(System.String)">
            <summary>
            注册简易搜索器
            </summary>
            <typeparam name="T">简易搜索器类型</typeparam>
            <param name="finderKey">搜索器常量</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.LocalData">
            <summary>
            本地全局数据对象
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.LocalData.isPlugin">
            <summary>
            是否是插件
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.CultureName">
            <summary>
            环境语言名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.MainFormHandle">
            <summary>
            主窗口句柄
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.UIOrientation">
            <summary>
            邮件中心改变浏览模式时，需要切换面板显示
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.ApplicationType">
            <summary>
            应用程序类型：ICP主程序，邮件中心
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.AdministratorId">
            <summary>
            系统管理员用户Id
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.SessionId">
            <summary>
            当前会话ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.ClientId">
            <summary>
            客户端Id，唯一标识
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.IsEnglish">
            <summary>
            是否英文环境
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.IsPropagateContext">
            <summary>
            是否传播上下文
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.EnableCustomDataGrid">
            <summary>
            是否允许列表显示自定义
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.SkinName">
            <summary>
            ICP皮肤样式
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.DataSyncFinished">
            <summary>
            数据同步是否已完成
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.SystemVersionNo">
            <summary>
            服务端系统版本号
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.SystemNGenVersionNo">
            <summary>
            服务端系统NGen版本号
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.SystemUpdateVersionNo">
            <summary>
            服务端系统升级程序版本号
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.SyncVersionNo">
            <summary>
            同步程序版本号,用于维护本地缓存的数据库模式是否需要更改
            如果服务端同步版本号高于本地版本号，则将删除本地缓存文件，重建
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.EmailHost">
            <summary>
            传真发送的主机域名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.IsDesignMode">
            <summary>
            当前程序是否处于设计时
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.SysFont">
            <summary>
            系统默认字体
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.UserInfo">
            <summary>
            登陆用户信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.PortalType">
            <summary>
            首页类型
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LocalData.SystemConfigInfoList">
            <summary>
            系统配置参数字典列表
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.LoginInfo">
            <summary>
            登录信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.LoginID">
            <summary>
            用户GUID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.LoginName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.DefaultCompanyID">
            <summary>
            默认公司GUID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.DefaultCompanyName">
            <summary>
            默认公司名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.DefaultDepartmentID">
            <summary>
            默认部门的GUID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.DefaultDepartmentName">
            <summary>
            默认部门的名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.Password">
            <summary>
            用户登录密码
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.MacAddress">
            <summary>
            用户登录Mac地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.LocalIpAddress">
            <summary>
            用户登录IP地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.PublicIpAddress">
            <summary>
            用户登录公网IP地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.UserName">
            <summary>
            用户名称(中英文)
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.UserEname">
            <summary>
            用户英文名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.UserOrganizationList">
            <summary>
            用户的组织列表
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.LoginInfo.EmailAddress">
            <summary>
            用户默认邮箱
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DynamicCtorDelegate">
            <summary>
            动态构造方法委托
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DynamicMethodDelegate">
            <summary>
            动态方法委托
            </summary>
            <param name="target"> 方法所属对象</param>
            <param name="args"> 参数</param>
            <returns>返回动态方法委托委托</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DynamicMemberGetDelegate">
            <summary>
            动态属性(Get)委托
            </summary>
            <param name="target">属性所属对象</param>
            <returns>返回动态属性(Get)委托</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DynamicMemberSetDelegate">
            <summary>
            动态属性(Set)委托
            </summary>
            <param name="target"> 属性所属对象 </param>
            <param name="arg"> 参数 </param>
            <returns> 返回动态属性(Set)委托 </returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.DynamicMethodHandlerFactory">
            <summary>
            动态方法工厂
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DynamicMethodHandlerFactory.CreateConstructor(System.Reflection.ConstructorInfo)">
            <summary>
            创建构造函数委托
            </summary>
            <param name="constructor">构造信息</param>
            <returns>返回构造函数委托</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DynamicMethodHandlerFactory.CreateMethod(System.Reflection.MethodInfo)">
            <summary>
            创建动态方法委托
            </summary>
            <param name="method">方法信息</param>
            <returns>返回动态方法委托</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DynamicMethodHandlerFactory.CreatePropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            创建动态属性(Get)委托
            </summary>
            <param name="property">属性信息</param>
            <returns>返回动态属性(Get)委托</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DynamicMethodHandlerFactory.CreatePropertySetter(System.Reflection.PropertyInfo)">
            <summary>
            创建动态属性(Set)委托
            </summary>
            <param name="property">属性信息</param>
            <returns>返回动态属性(Set)委托</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DynamicMethodHandlerFactory.CreateFieldGetter(System.Reflection.FieldInfo)">
            <summary>
            创建动态属性(Get)委托
            </summary>
            <param name="field">字段信息</param>
            <returns>返回动态属性(Get)委托</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.DynamicMethodHandlerFactory.CreateFieldSetter(System.Reflection.FieldInfo)">
            <summary>
            创建动态字段(Set)委托
            </summary>
            <param name="field">字段信息</param>
            <returns>返回动态字段(Set)委托</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.MethodInvoker">
            <summary>
            方法调用委托
            </summary>
            <param name="methodName">方法名</param>
            <param name="data">数据</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.AsynContext">
            <summary>
            异步处理上下文
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AsynContext.#ctor(ICP.Framework.CommonLibrary.Client.MethodInvoker)">
             <summary>
            构造函数
             </summary>
             <param name="resultHandler">异步完成后处理方法</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AsynContext.#ctor(ICP.Framework.CommonLibrary.Client.MethodInvoker,ICP.Framework.CommonLibrary.Client.MethodInvoker)">
            <summary>
            构造函数
            </summary>
            <param name="resultHandler">异步完成后处理方法</param>
            <param name="errorHandler">异步中出现异常处理方法</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.AsynContext.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.AsynContext.IsAsynchronous">
            <summary>
            是否异步的
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.AsynContext.ResultHandler">
            <summary>
            正确返回结果处理委托
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Client.AsynContext.ErrorHandler">
            <summary>
            错误处理委托
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.ClientCacheAttribute">
            <summary>
            客户端缓存特性
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.ClientCacheAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.ClientCacheAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="dataUpdateEvent">数据修改事件名</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.ClientCacheAttribute.DataUpdateEvent">
            <summary>
            数据修改事件名
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.MulticastEventAttribute">
            <summary>
            广播事件特性
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.MulticastEventAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="triggerMethod"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.MulticastEventAttribute.TriggerMethod">
            <summary>
            触发方法
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.ThreadScopeStart">
            <summary>
            线程范围开始特性
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.ThreadScopeEnd">
            <summary>
            线程范围结束特性
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.Method">
            <summary>
            公共事件参数类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.Method.MethodInfo">
            <summary>
            模式信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.Method.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IDesktop">
            <summary>
            ICP桌面接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDesktop.NavigateUrl(System.String)">
            <summary>
            导航指定的网页
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDesktop.Active">
            <summary>
            设置当前桌面Tab为活动面版
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IDesktop.Add(System.Object,System.Windows.Forms.DockStyle)">
            <summary>
            添加一个控件在桌面指定位置
            </summary>
            <param name="obj">控件</param>
            <param name="dock">停靠样式</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IMainMenu">
            <summary>
            主菜单接口
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IStatusbar">
            <summary>
            状态栏服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IStatusbar.SetStatusBarPanel1(System.String)">
            <summary>
            设置状态栏面板1
            </summary>
            <param name="text">提示文本</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IStatusbar.SetStatusBarPanel(System.String)">
            <summary>
            设置状态栏文本信息
            </summary>
            <param name="text">文本</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IStatusbar.SetStatusBarPanel(System.String,System.Drawing.Image,System.Windows.Forms.Control)">
            <summary>
            在状态栏上加个Panel
            </summary>
            <param name="text">文本</param>
            <param name="image">文本旁的图标</param>
            <param name="lifecycleWith">控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IStatusbar.SetStatusBarPanel(System.String,ICP.Framework.CommonLibrary.Client.StatusIconType,System.Windows.Forms.Control)">
            <summary>
            设置状态栏提示控件
            </summary>
            <param name="text">提示文本</param>
            <param name="iconType">图标类型</param>
            <param name="lifecycleWith">提示控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IStatusbar.SetStatusBarPanel(System.Exception,System.Windows.Forms.Control)">
            <summary>
            设置状态错误提示控件
            </summary>
            <param name="ex">异常信息</param>
            <param name="lifecycleWith">提示控件</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IStatusbar.AddNotifyIcon(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            添加一个控件（有处理逻辑的）
            </summary>
            <param name="text">文本</param>
            <param name="image">图标</param>
            <param name="clickEvent">事件处理逻辑</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.StatusIconType">
            <summary>
            状态栏图标样式
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.StatusIconType.Info">
            <summary>
            信息提示
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.StatusIconType.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Client.StatusIconType.Error">
            <summary>
            错误
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Client.IToolbar">
            <summary>
            工具栏接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IToolbar.AddButton(System.String,System.Drawing.Image,System.EventHandler)">
            <summary>
            添加按钮
            </summary>
            <param name="text">文本</param>
            <param name="image">图标</param>
            <param name="onClick">事件处理逻辑</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Client.IToolbar.AddToolStripItem(System.Windows.Forms.ToolStripItem)">
            <summary>
            添加工具栏项
            </summary>
            <param name="item">工具栏项</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.Db4oTemplateHelper">
            <summary>
            db4o的查询模版帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Db4oTemplateHelper.CreateQueryTemplate``1(``0)">
            <summary>
            加工一个查询的标准模版
            </summary>
            <typeparam name="T"></typeparam>
            <param name="template">需要加工对象实例</param>
            <returns>加工好的模版</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.DynamicMethodParser">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DynamicMethodParser.Parser(System.Reflection.MethodInfo)">
            <summary>
            
            </summary>
            <param name="methodInfo"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.DynamicMethodParser.DynamicMethodHandler">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="paramters"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.SerializerHelper">
            <summary>
            序列化帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.CreateXmlWriter(System.Object)">
            <summary>
            创建XmlWriter
            </summary>
            <param name="output">流对象</param>
            <returns>返回XmlWriter</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.CreateXmlReader(System.Object)">
            <summary>
            创建XmlReader
            </summary>
            <param name="output">流对象</param>
            <returns>返回XmlReader</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.DeserializeFromString``1(System.String)">
            <summary>
            反序列化为对象
            </summary>
            <param name="content">要反序列化字符串的对象</param>
            <returns>返回反序列化的对象</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.DeserializeFromString``1(System.Type,System.String)">
            <summary>
            反序列化为对象(已过期,请使用DeserializeFromString《T》(string content))
            </summary>
            <typeparam name="T">T</typeparam>
            <param name="type">type</param>
            <param name="content">要反序列化字符串的对象</param>
            <returns>T</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.DeserializeFromXMLDocument``1(System.Type,System.Xml.XmlDocument)">
            <summary>
            反序列化为对象(已过期,请使用DeserializeFromXMLDocument《T》(XmlDocument xmlContent))
            </summary>
            <typeparam name="T">T</typeparam>
            <param name="type">type</param>
            <param name="xmlContent">要反序列化XmlDocument的对象</param>
            <returns>T</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.DeserializeFromXMLDocument``1(System.Xml.XmlDocument)">
            <summary>
            反序列化为对象
            </summary>
            <param name="xmlContent">要反序列化XmlDocument的对象</param>
            <returns>返回反序列化的对象</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.SerializeToString``1(``0)">
            <summary>
            序列化对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="type">序列的对象</param>
            <returns>返回序列化的字符串内容</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.SerializeToString``1(``0,System.Boolean,System.Boolean)">
            <summary>
            序列化对象
            </summary>
            <param name="type">对象类型</param>
            <param name="excludexmln">是否排除xmln信息</param>
            <param name="excludeNullNode">是否排除空节点</param>
            <returns>返回序列化的字符串内容</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.SerializeToString(System.Object,System.Boolean,System.Boolean)">
            <summary>
            序列化对象
            创建时间：2011-07-20 11:56
            </summary>
            <param name="o">实例</param>
            <param name="excludexmln"></param>
            <param name="excludeNullNode"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.SerializeToXMLDocument``1(``0)">
            <summary>
            序列化对象到XMLDocument
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="type">序列的对象</param>
            <returns>返回序列化的XMLDocument</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.SerializeToXMLDocument``1(``0,System.String)">
            <summary>
            序列化对象到XMLDocument
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="type">序列的对象</param>
            <param name="fileName">文件路径</param>
            <returns>返回序列化的XMLDocument</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SerializerHelper.DeserializeFromXMLDocument``1(System.String)">
            <summary>
            反序列化为对象
            </summary>
            <param name="fileName">文件</param>
            <returns>返回反序列化的对象</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.SnapScreenHelper">
            <summary>
            抓屏帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SnapScreenHelper.SnapScreen(System.IntPtr)">
            <summary>
            屏幕截图
            </summary>
            <param name="handle">截图的目标对象句柄(不正确的句柄表示截取全屏)</param>
            <returns>返回Image</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SnapScreenHelper.SnapFullScreen">
            <summary>
            截全屏幕
            </summary>
            <returns>返回Image</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SnapScreenHelper.CaptureFullScreen">
            <summary>
            捕获全屏保存到图片,返回图片保存路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SnapScreenHelper.CaptureFullScreen(System.String)">
            <summary>
            捕获全屏保存到图片,返回图片保存路径
            </summary>
            <param name="saveFileName">保存图片的文件名称</param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper">
            <summary>
            类型转换帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.ToShort(System.Nullable{System.Boolean})">
            <summary>
            把bool转为short类型
            </summary>
            <param name="value">可为空bool值</param>
            <returns>转换后的short对象</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.ToGuid(System.Nullable{System.Guid})">
            <summary>
            把可为null的Guid转换为Guid
            </summary>
            <param name="value">可为空Guid</param>
            <returns>转换后的Guid对象</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.GetGuid(System.Object)">
            <summary>
            尝试转换成Guid
            异常时返回Guid.Empty
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.DateTime[])">
            <summary>
            把时间数组转换为字符串
            </summary>
            <param name="values">Guid数组</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.Nullable{System.DateTime}[])">
            <summary>
            把时间数组转换为字符串
            </summary>
            <param name="values">Guid数组</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.Decimal[],System.Int32)">
            <summary>
            把decimal数组转换为字符串
            </summary>
            <param name="values">Int数组</param>
            <param name="preserDigits">保留位数</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.Guid[])">
            <summary>
            把Guid数组转换为字符串
            </summary>
            <param name="values">Guid数组</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.Nullable{System.Guid}[])">
            <summary>
            把Guid数组转换为字符串
            </summary>
            <param name="values">Guid数组</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.Int32[])">
            <summary>
            把Int数组转换为字符串
            </summary>
            <param name="values">Int数组</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.Int16[])">
            <summary>
            把Short数组转换为字符串
            </summary>
            <param name="values">Int数组</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.Boolean[])">
            <summary>
            把Int数组转换为字符串
            </summary>
            <param name="values">Int数组</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.String[])">
            <summary>
            把String数组转换为字符串
            </summary>
            <param name="values">String数组</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join(System.String[],System.String)">
            <summary>
            把String数组转换为字符串
            </summary>
            <param name="values">String数组</param>
            <param name="divideSymbol">分隔符</param>
            <returns>返回转换后的字符串</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.TypeConvertHelper.Join``1(``0[])">
            <summary>
            把Short数组转换为字符串
            </summary>
            <param name="values">Int数组</param>
            <returns>转换后的字符串</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ICacheService">
            <summary>
            缓存服务
            注释时间：2011-05-12 13:48
            注释人：熊中方
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ICacheService.GetValue(System.String)">
            <summary>
            根据键名称返回对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ICacheService.GetValue``1(System.String)">
            <summary>
            根据键名称返回特定类型的对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ICacheService.GetMultipleArray``1(System.String[])">
            <summary>
            根据键名称的数组返回特定对象的数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ICacheService.GetMultiple``1(System.String[])">
            <summary>
            根据件名称的数组返回特定对象的字典
            </summary>
            <typeparam name="T"></typeparam>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ICacheService.SetValue(System.String,System.Object)">
            <summary>
            将对象放在缓存集里
            </summary>
            <param name="key">键名称</param>
            <param name="value">对象</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ICacheService.SetValue(System.String,System.Object,System.DateTime)">
            <summary>
            将指定生命周期的对象放在缓存集里
            </summary>
            <param name="key">键名称</param>
            <param name="value">对象</param>
            <param name="expiry">在这个时间点失效</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ICacheService.KeyExists(System.String)">
            <summary>
            缓存集中是否存在某对象
            </summary>
            <param name="key">键名称</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ICacheService.Delete(System.String)">
            <summary>
            从缓存集中移除对象
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IColumnTemplateSynchronizeService">
            <summary>
            列模板同步服务接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IColumnTemplateSynchronizeService.SynchronizeToDatabase">
            <summary>
            同步列模板数据到数据库
            通过模板版本号比较决定是否需要同步数据库
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService">
            <summary>
            初始化服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.GetUserInfo(System.Guid,System.Boolean)">
            <summary>
            获取用户的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.GetDefaultOrganizationList(System.Guid,System.Boolean)">
            <summary>
            获取当前用户的组织结构的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.GetMultiLanguageList(System.String[],System.String[],System.Boolean)">
            <summary>
            获得多语言资源
            </summary>
            <param name="fullNames"></param>
            <param name="formNames"></param>
            <param name="isEnglish"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.GetSystemConfigurationInfoList(System.String[])">
            <summary>
            获取系统配置字典列表
            </summary>
            <param name="keys">键值数组</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.GetSystemConfigurationInfo(System.String)">
            <summary>
            获取系统配置字典
            </summary>
            <param name="key">键值</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.UpdateSystemConfigrationInfo(System.Collections.Generic.List{ICP.Framework.CommonLibrary.Server.SystemConfigurationInfo})">
            <summary>
            更新系统配置字典
            </summary>
            <param name="ids"></param>
            <param name="infos"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.GetServerCurrentTime">
            <summary>
            获取服务器当前时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.SaveMultiLanguageList(System.Guid[],System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.String[],System.Nullable{System.DateTime}[],ICP.Framework.CommonLibrary.Client.LanguageType[],System.Guid,System.Boolean)">
            <summary>
            保存多语言资源
            </summary>
            <param name="ids"></param>
            <param name="fullNames"></param>
            <param name="formNames"></param>
            <param name="controlNames"></param>
            <param name="chineseValues"></param>
            <param name="englishValues"></param>
            <param name="updateDates"></param>
            <param name="languageTypes"></param>
            <param name="saveByID"></param>
            <param name="isEnglish"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkInitializeService.DeleteMultiLanguageList(System.Guid[],System.Nullable{System.DateTime}[],System.Guid,System.Boolean)">
            <summary>
            删除多语言资源
            </summary>
            <param name="ids">ID集合</param>
            <param name="updateDates">更新时间</param>
            <param name="removeID">删除人</param>
            <param name="isEnglish">是否英文版本</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.LocalOrganizationType">
            <summary>
            组织结构类型
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.LocalOrganizationType.Root">
            <summary>
            公司主节点
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.LocalOrganizationType.Section">
            <summary>
            区域
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.LocalOrganizationType.Company">
            <summary>
            公司
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.LocalOrganizationType.Department">
            <summary>
            部门
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.LocalOrganizationType.Group">
            <summary>
            组
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo">
            <summary>
            默认组织结构信息
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.ID">
            <summary>
            唯一ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.IsDefault">
            <summary>
            是否默认
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.CShortName">
            <summary>
            中文简称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.EShortName">
            <summary>
            英文简称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.FullName">
            <summary>
            全称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.IsValid">
            <summary>
            有效性
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalOrganizationInfo.ParentID">
            <summary>
            父节点ID
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.LocalSexType">
            <summary>
            性别
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.LocalSexType.Female">
            <summary>
            女
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.LocalSexType.Male">
            <summary>
            男
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.LocalUserInfo">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LocalUserInfo.#ctor(System.Guid,System.String,System.String,System.String,System.String,System.String,ICP.Framework.CommonLibrary.Server.LocalSexType,System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="code"></param>
            <param name="name"></param>
            <param name="tel"></param>
            <param name="fax"></param>
            <param name="sex"></param>
            <param name="email"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LocalUserInfo.GetCompanyList">
            <summary>
            本地缓存的组织架构列表？
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LocalUserInfo.GetNormalCompany">
            <summary>
            获取本地缓存的用户默认(首选)公司信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalUserInfo.Id">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalUserInfo.Name">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalUserInfo.Ename">
            <summary>
            英文名
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalUserInfo.Sex">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalUserInfo.Code">
            <summary>
            帐号
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalUserInfo.Fax">
            <summary>
            传真
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalUserInfo.Tel">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.LocalUserInfo.EMail">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.MultiLanguageList">
            <summary>
            多语言资源列表
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.ID">
             <summary>
            ID
             </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.FormID">
            <summary>
            窗体唯一标识符
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.FullName">
            <summary>
            程序集名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.FormName">
            <summary>
            窗体名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.ControlName">
            <summary>
             控件名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.DefaultValue">
            <summary>
            默认值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.ChineseValue">
            <summary>
             中文值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.EnglishValue">
            <summary>
             英文名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.ChineseToolTip">
            <summary>
             中文ToolTip
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.EnglishToolTip">
            <summary>
             英文ToolTip
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.UpdateDate">
             <summary>
            创建时间
             </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MultiLanguageList.Languagetype">
            <summary>
             资源类型
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.SystemConfigurationInfo">
            <summary>
            系统配置表信息类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SystemConfigurationInfo.ID">
             <summary>
            ID
             </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SystemConfigurationInfo.Key">
            <summary>
            键值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SystemConfigurationInfo.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SystemConfigurationInfo.Value2">
            <summary>
            补充值2
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SystemConfigurationInfo.Value3">
            <summary>
            补充值3
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SystemConfigurationInfo.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Common.CommonEventArgs`1">
            <summary>
            公共事件参数类
            </summary>
            <typeparam name="T">类型</typeparam>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Common.CommonEventArgs`1.#ctor(`0)">
            <summary>
            构造函数
            </summary>
            <param name="data"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Common.CommonEventArgs`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.EventPublisherAttribute">
            <summary>
            事件发布特性
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.EventPublisherAttribute.#ctor(System.String,System.String,ICP.Framework.CommonLibrary.Attributes.EventPublisherScope)">
            <summary>
            构造函数
            </summary>
            <param name="topic">主题</param>
            <param name="description">描述</param>
            <param name="scope">发布范围</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.EventPublisherAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="topic">主题</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.EventPublisherAttribute.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="topic">主题</param>
            <param name="description">描述</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.EventPublisherAttribute.#ctor(System.String,ICP.Framework.CommonLibrary.Attributes.EventPublisherScope)">
            <summary>
            构造函数
            </summary>
            <param name="topic">主题</param>
            <param name="scope">发布范围</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.EventPublisherAttribute.Topic">
            <summary>
            事件唯一名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.EventPublisherAttribute.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.EventPublisherAttribute.EventScope">
            <summary>
            事件范围
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.EventPublisherScope">
            <summary>
            发布范围
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.EventPublisherScope.Global">
            <summary>
            全都能收到
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.EventPublisherScope.ServerOnly">
            <summary>
            只有服务器端能收到
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.EventPublisherScope.ClientOnly">
            <summary>
            只有客户端能收到
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.EventSubscriberAttribute">
            <summary>
            事件订阅特性
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.EventSubscriberAttribute.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="topic"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.EventSubscriberAttribute.Topic">
            <summary>
            主题
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.ServiceInfomationAttribute">
            <summary>
            服务接口标签
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.ServiceInfomationAttribute.#ctor(System.String,ICP.Framework.CommonLibrary.Attributes.ServiceType)">
            <summary>
            构造方法
            </summary>
            <param name="description">服务接口描述</param>
            <param name="serviceType">服务接口类型</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.ServiceInfomationAttribute.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="description">服务接口描述</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.ServiceInfomationAttribute.#ctor(ICP.Framework.CommonLibrary.Attributes.ServiceType)">
            <summary>
            构造方法
            </summary>
            <param name="serviceType">服务接口类型</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.ServiceInfomationAttribute.Description">
            <summary>
            获取服务接口描述
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.ServiceInfomationAttribute.ServiceType">
            <summary>
            获取服务接口类型
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.ServiceType">
            <summary>
            服务接口类型
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.ServiceType.System">
            <summary>
            系统服务
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.ServiceType.Workflow">
            <summary>
            工作流系统
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.ServiceType.Business">
            <summary>
            业务系统
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.ServiceType.Infrustructure">
            <summary>
            基础系统
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Attributes.ServiceType.Unknown">
            <summary>
            未知系统
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.ArgumentHelper">
            <summary>
            参数验证处理类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArgumentHelper.GuidIsNullOrEmpty(System.Nullable{System.Guid})">
            <summary>
            判断Guid是否为NULL或者为Guid.Empty
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArgumentHelper.AssertNotNull``1(``0,System.String)">
            <summary>
            验证指定参数不为空
            </summary>
            <typeparam name="T">参数类型</typeparam>
            <param name="arg">参数</param>
            <param name="argName">参数名称</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArgumentHelper.AssertStringNotEmpty(System.String)">
            <summary>
            验证字符串参数不为空
            </summary>
            <param name="arg">参数</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArgumentHelper.AssertStringNotEmpty(System.String,System.String)">
            <summary>
            验证字符串参数不为空
            </summary>
            <param name="arg">参数</param>
            <param name="argName">参数名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArgumentHelper.AssertEnumMember``1(``0)">
            <summary>
            验证枚举成员是否在指定枚举的成员
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="enumValue">值</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArgumentHelper.AssertGuidNotEmpty(System.Guid,System.String)">
            <summary>
            验证指定Guid是否为空
            </summary>
            <param name="id">ID</param>
            <param name="argName">参数名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArgumentHelper.AssertGuidNotEmpty(System.Guid[],System.String)">
            <summary>
            验证指定Guid数组是否为空
            </summary>
            <param name="ids">参数值</param>
            <param name="argName">参数名</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArgumentHelper.AssertArrayLengthMatch(System.Object[])">
            <summary>
            验证参数数组的长度是否等长
            </summary>
            <param name="values">可变参数数组列表</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.ArrayHelper">
            <summary>
            数组操作帮助类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArrayHelper.ArrayMerge``1(``0[],``0[])">
            <summary>合并两个数组</summary>
            <typeparam name="T">数组类型</typeparam>
            <param name="array1">数组1</param>
            <param name="array2">数组2</param>
            <returns>合并后的数组</returns>
            <remarks>
            Change history:
            2005-10-24 卢彦 created
            </remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArrayHelper.ReadAllBytesFromStream(System.IO.Stream)">
            <summary>
            从流里读出所有所有的字节数据
            </summary>
            <param name="stream"></param>
            <returns></returns>
            <remarks>
            Change history:
            2005-10-13 卢彦 created
            </remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArrayHelper.AddArrayItem``1(``0[],``0)">
            <summary>
            将数据项添加到数组中去
            </summary>
            <typeparam name="T">数组类型</typeparam>
            <param name="array">数组</param>
            <param name="item">要添加的数据项</param>
            <returns>处理后的数组</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.ArrayHelper.RemoveArrayItem``1(``0[],``0)">
            <summary>
            删除数组中的对应项
            (不知道删除后的数组顺序如何)
            </summary>
            <typeparam name="T">数组类型</typeparam>
            <param name="array">数组</param>
            <param name="item">要删除的数据项</param>
            <returns>处理后的数组</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.Compressor">
            <summary>
            压缩类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Compressor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Compressor.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="oversize">数据流长度的最大值</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Compressor.Compress(System.Byte[])">
            <summary>
            压缩数据流
            假如压缩了数据流，则在数据流最前面一位置1，否则置0
            </summary>
            <param name="val">需要压缩数据</param>
            <returns>返回压缩后数据</returns>
            <remarks>
            Change history:
            2005-10-13 卢彦 created
            </remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Compressor.Decompress(System.Byte[])">
            <summary>
            解压缩数据流
            </summary>
            <param name="val">压缩数据</param>
            <returns>返回解压缩后数据</returns>
            <remarks>
            Change history:
            2005-10-13 卢彦 created
            </remarks>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.DynamicComparer`1">
            <summary>
            动态排序类，基本用法是：FirstName, Age DESC, LastName
            </summary>
            <typeparam name="T">对象类型</typeparam>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DynamicComparer`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="orderBy"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DynamicComparer`1.Compare(`0,`0)">
            <summary>
            比较方法
            </summary>
            <param name="x">对象1</param>
            <param name="y">对象2</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DynamicComparer`1.ParseOrderBy(System.String)">
            <summary>
            解析排序属性
            </summary>
            <param name="orderBy"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.DynamicComparer`1.CheckSortProperties(ICP.Framework.CommonLibrary.Helper.SortProperty[])">
            <summary>
            检查排序属性是否正确
            </summary>
            <param name="sortProperties"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.SortProperty">
            <summary>
            排序属性
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SortProperty.#ctor(System.String)">
            <summary>
            构造一个排序属性,默认为升序
            </summary>
            <param name="propertyName">名称</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SortProperty.#ctor(System.String,System.Boolean)">
            <summary>
            构造一个排序属性
            </summary>
            <param name="propertyName">名称</param>
            <param name="sortDescending">是否降序</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SortProperty.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Helper.SortProperty.Descending">
            <summary>
            是否降序
            默认为“否”
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.SecurityHelper">
            <summary>
            加密算法类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SecurityHelper.HashObject(System.Object)">
            <summary>
            计算对象的HASH数列
            </summary>
            <param name="valueToHash">欲计算的对象</param>
            <returns>HASH数列的BASE64编码</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SecurityHelper.DESEncrypt(System.Byte[],System.String)">
            <summary>
            对字节数组加密
            </summary>
            <param name="data">数据</param>
            <param name="key">加密KEY</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SecurityHelper.DESDecrypt(System.Byte[],System.String)">
            <summary>
            对数据解密
            </summary>
            <param name="data">已加密数据</param>
            <param name="key">解密KEY</param>
            <returns>返回明文数据</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SecurityHelper.DESEncrypt(System.String,System.String)">
            <summary>
            对字节数组加密
            </summary>
            <param name="data">数据</param>
            <param name="key">加密KEY</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.SecurityHelper.DESDecrypt(System.String,System.String)">
            <summary>
            对数据解密
            </summary>
            <param name="data">已加密数据</param>
            <param name="key">解密KEY</param>
            <returns>返回明文数据</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.GenericSymmetricCryptor">
            <summary>
            通用的对称加密算法类
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GenericSymmetricCryptor.#ctor(System.Security.Cryptography.SymmetricAlgorithm)">
            <summary>
            构造函数
            </summary>
            <param name="algorithm">对称加密算法，比如RC2, DES, TripleDES等等</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GenericSymmetricCryptor.GetLegalKey(System.String)">
            <summary>
            获得密钥
            </summary>
            <returns>密钥</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GenericSymmetricCryptor.GetLegalIV">
            <summary>
            获得初始向量IV
            </summary>
            <returns>初试向量IV</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GenericSymmetricCryptor.Encrypto(System.Byte[],System.String)">
            <summary>
            加密方法
            </summary>
            <param name="bytIn">带价密的字节数组</param>
            <param name="key">密钥</param>
            <returns>经过加密的数据</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.GenericSymmetricCryptor.Decrypto(System.Byte[],System.String)">
            <summary>
            解密方法
            </summary>
            <param name="bytIn">待解密的字节数组</param>
            <param name="key">密钥</param>
            <returns>经过解密的数据</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Helper.Serializer">
            <summary>
            序列化对象
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Serializer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Serializer.#ctor(System.Int32)">
            <summary>
            构造方法
            </summary>
            <param name="overSize">长度阙值，超过这个长度则进行压缩</param>
            <remarks>
            Change history:
            2005-10-13 卢彦 created
            </remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Serializer.BinaryDeserialize``1(System.Byte[])">
            <summary>
            字节流反序列化为对象
            </summary>
            <param name="data">字节数组</param>
            <returns>返回对象</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Helper.Serializer.BinarySerialize``1(``0)">
            <summary>
            对象序列为字节流数组
            </summary>
            <param name="obj">对象</param>
            <returns>返回字节流数组</returns>
            <remarks>
            Change history:
            2005-10-13 卢彦 created
            2005-12-20 张文韬 注释掉了if(object.Equals(obj,default(T))) return null;
            2005-12-31 卢彦 加上了当obj为引用类型时并且为null时返回null
            </remarks>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Attributes.FunctionInfomationAttribute">
            <summary>
            服务接口方法标签
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.FunctionInfomationAttribute.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="description">服务接口方法描述</param>
            <param name="offline">是否具有离线特性</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.FunctionInfomationAttribute.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="offline">是否具有离线特性</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.FunctionInfomationAttribute.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="description">服务接口方法描述</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Attributes.FunctionInfomationAttribute.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.FunctionInfomationAttribute.Description">
            <summary>
            获取服务接口方法描述
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Attributes.FunctionInfomationAttribute.Offline">
            <summary>
            获取是否具有离线特性
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IMembershipService">
            <summary>
            用户管理服务接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMembershipService.GetUserDisplayName(System.String)">
            <summary>
            获取用户显示名
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMembershipService.GetUserInfo(System.Guid)">
            <summary>
            获取用户信息
            </summary>
            <param name="userid">用户的GUID</param>
            <returns>包含用户信息的表</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMembershipService.GetUserInfoByUserCode(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="usercode">用户的唯一代码</param>
            <returns>包含用户信息的表</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMembershipService.ChangePassword(System.String,System.String,System.String)">
            <summary>
            修改用户密码
            </summary>
            <param name="username">用户名</param>
            <param name="oldPassword">旧密码</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMembershipService.ValidateUser(System.String,System.String,System.String)">
            <summary>
            验证用户
            </summary>
            <param name="username">用户名</param>
            <param name="password">用户密码</param>
            <param name="networkAdapter">网卡MAC地址？</param>
            <returns>正确的话返回用户的标识</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMembershipService.GetAllFunctionsFromUser(System.String)">
            <summary>
            获取用户所有的功能权限
            </summary>
            <param name="user"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMembershipService.Log(System.Guid,System.String,System.String,System.String,System.DateTime,System.String)">
            <summary>
            记录用户活动日志
            </summary>
            <param name="userId"></param>
            <param name="code"></param>
            <param name="ip"></param>
            <param name="netWorkNo"></param>
            <param name="loginTime"></param>
            <param name="description"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IMembershipService.GetRolesForUser(System.String)">
            <summary>
            获取某用户所有的角色
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.SiteType">
            <summary>
            在界面上的位置
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.SiteType.Menu">
            <summary>
            菜单
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.SiteType.ToolBar">
            <summary>
            工具栏
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.SiteType.StatusBar">
            <summary>
            状态栏
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IAuthenticateService">
            <summary>
            验证服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IAuthenticateService.AuthUser(System.String,System.String,System.String,System.DateTime)">
            <summary>
            验证用户
            </summary>
            <param name="usercode">用户名或代码</param>
            <param name="password">密码(是否MD5加密后的值?)</param>
            <param name="macAddress">客户端Mac地址</param>
            <param name="loginTime">客户端登录时间</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IAuthenticateService.GetPermissionPackage(System.Guid)">
            <summary>
            获取用户的权限包？
            </summary>
            <param name="userid">用户GUID</param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.RequestAllowAttribute">
            <summary>
            命令处理方法需要权限处理的特性类
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.SimpleRoleInfo">
            <summary>
            简单的用户角色信息类
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SimpleRoleInfo.ID">
            <summary>
            唯一ID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SimpleRoleInfo.EName">
            <summary>
            英文名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.SimpleRoleInfo.CompanyID">
            <summary>
            角色所属的公司ID
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.PermissionPackage">
            <summary>
            权限包
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.PermissionPackage.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.PermissionPackage.HaveActionPermission(System.String)">
            <summary>
            是否有权限执行某动作
            </summary>
            <param name="actionName">动作名称</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.PermissionPackage.HaveFunctionPermission(System.String)">
            <summary>
            获取当前用户是否有权限执行某功能项
            </summary>
            <param name="commandName">功能代码</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.PermissionPackage.IsInRole(System.Nullable{System.Guid},System.String)">
             <summary>
            判断用户是否属于某个角色
             </summary>
             <param name="companyID">角色所属的公司ID</param>
             <param name="roleName">角色名称(中文或英文名称)</param>
             <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.PermissionPackage.AllowActions">
            <summary>
            允许的动作的集合
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.PermissionPackage.BuildTime">
            <summary>
            生成时间？
            
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.PermissionPackage.UserId">
            <summary>
            用户的GUID
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.PermissionPackage.Modules">
            <summary>
            模块集合
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.PermissionPackage.Commands">
            <summary>
            界面上的命令集合
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.PermissionPackage.RoleList">
            <summary>
            用户所属的角色列表
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.Module">
            <summary>
            模块
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.Module.#ctor(System.String,System.String,System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
            实例化一个模块
            </summary>
            <param name="assembly">DLL的路径</param>
            <param name="updatelocation">新版本的地址</param>
            <param name="allowRoles">哪些角色有权限加载此模块</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.Module.Equals(System.Object)">
            <summary>
            如果两个模块的DLL物理路径相同，则认为两个模块是相同的
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.Module.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.Module.Assembly">
            <summary>
            DLL的路径
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.Module.UpdateLocation">
            <summary>
            新版本的地址
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.Module.AllowRoles">
            <summary>
            哪些角色有权限
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.UICommand">
            <summary>
            界面上的命令(按钮)
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.UICommand.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            实例化一个命令
            </summary>
            <param name="ctext"></param>
            <param name="etext"></param>
            <param name="name"></param>
            <param name="site"></param>
            <param name="registerSite"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.UICommand.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            实例化一个命令
            </summary>
            <param name="ctext"></param>
            <param name="etext"></param>
            <param name="name"></param>
            <param name="site"></param>
            <param name="registerSite"></param>
            <param name="type"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.UICommand.Equals(System.Object)">
            <summary>
            如果名称和位置完全相同，就认为两个命令相同
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.UICommand.Text">
            <summary>
            命名Caption
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.UICommand.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.UICommand.Site">
            <summary>
            驻留在界面上的位置？
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.UICommand.RegisterSite">
            <summary>
            注册在界面上的位置？
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.UICommand.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.UICommand.Image">
            <summary>
            图片数组
            包含哪些图片？
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.UICommand.AssemblyName">
            <summary>
            命令所属的模块DLL名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.UICommand.HasPermission">
            <summary>
            是否有权限
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IOperationLogService">
            <summary>
            操作日志服务接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IOperationLogService.Add(System.DateTime,System.String)">
             <summary>
             添加操作日志
            </summary>
            <param name="operationTime">操作时间</param>
             <param name="content">操作描述</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IOperationLogService.Add(System.DateTime,System.String,System.String)">
            <summary>
            添加操作日志
            </summary>
            <param name="operationTime"></param>
            <param name="content"></param>
            <param name="functionName"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IOperationLogService.Add(System.Guid,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.Boolean)">
            <summary>
            添加操作日志
            </summary>
            <param name="userId">用户ID</param>
            <param name="internetIP">外网IP地址</param>
            <param name="intarnetIP">内网IP地址</param>
            <param name="macAddress">用户主机Mac地址</param>
            <param name="operationTime">操作时间</param>
            <param name="assemblyNames">当前操作所在的程序集名称</param>
            <param name="functionName">当前操作的功能项名称</param>
            <param name="content">操作详细描述</param>
            <param name="isEnglish">是否英文</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IOperationLogService.BatchAdd(System.Data.DataTable)">
            <summary>
            批量新增
            </summary>
            <param name="dt"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IServiceImplCollector">
            <summary>
            IServiceImplCollector
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IServiceImplCollector.GetServiceNames(System.Type)">
            <summary>
            GetServiceNames
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IServiceImplCollector.GetService(System.Type,System.String)">
            <summary>
            GetService
            </summary>
            <param name="type">类型</param>
            <param name="id">ID</param>
            <returns>返回指定服务</returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ISessionState">
            <summary>
            会话状态接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionState.RemoveAll">
            <summary>
            移除所有会话状态
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionState.Remove(System.Object)">
            <summary>
            移除指定标识的实例
            </summary>
            <param name="key">标识</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionState.Exists(System.Object)">
            <summary>
            判断是否存在该key值
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ISessionState.Item(System.Object)">
            <summary>
            索引器
            </summary>
            <param name="key">标识</param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ISessionService">
            <summary>
            会话服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionService.Register(System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.Boolean)">
            <summary>
            注册会话
            </summary>
            <param name="userName">用户名称</param>
            <param name="ipAddress">IP 地址</param>
            <param name="encryptKey">加密Key</param>
            <param name="culture">客户端登录系统所选择的语言代码</param>
            <param name="loginTime">客户端登录时间</param>
            <param name="assemblyName">程序集名称</param>
            <param name="clientId">客户端唯一标识</param>
            <param name="isEnglish">是否英文</param>
            <param name="localAddress">客户登陆电脑的局域网IP</param>
            <param name="macAddress">客户登陆电脑mac地址</param>
            <param name="userId">用户Id</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionService.UnloadSession(System.String,System.DateTime)">
            <summary>
            注销会话
            </summary>
            <param name="sessionID">会话ID</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionService.GetSession(System.String)">
            <summary>
            获取指定会话状态
            </summary>
            <param name="sessionID">会话ID</param>
            <returns>返回指定会话状态</returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionService.GetAllSessions">
            <summary>
            获取所有会话信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionService.isUserLoginInWithSameIP(System.String,System.String)">
            <summary>
            判断同一用户同一电脑IP是否已经登录
            </summary>
            <param name="userId"></param>
            <param name="ipAddress"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISessionService.GetClientId(System.String[])">
            <summary>
            根据用户Id获取用户客户端标识
            </summary>
            <param name="userIds">用户Id</param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ISessionService.CurrentSession">
            <summary>
            返回当前会话
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ServerVariables">
            <summary>
            服务常量
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.ServerVariables.SESSION_ID">
            <summary>
            会话ID
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.ServerVariables.LOGGING_TIME">
            <summary>
            登陆事件
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.ServerVariables.CURRENT_USER">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.ServerVariables.CLIENT_ADDRESS">
            <summary>
            当前登陆用户的IP
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.ServerVariables.ENCRYPT_KEY">
            <summary>
            加密KEY
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.ServerVariables.CULTURE_ID">
            <summary>
            文化
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.ServerVariables.CLIENT_ID">
            <summary>
            客户端标识
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.ServerVariables.User_ID">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IServiceGateway">
            <summary>
            服务网关
            有什么作用？
            </summary>
        </member>
        <member name="E:ICP.Framework.CommonLibrary.Server.IServiceGateway.ServiceInvoked">
            <summary>
            服务被调用时触发的事件
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ServiceInvokedEventArgs">
            <summary>
            服务调用事件参数
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInvokedEventArgs.ServiceName">
            <summary>
            服务名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInvokedEventArgs.MethodName">
            <summary>
            调用方式的名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInvokedEventArgs.ConsumeMilSecs">
            <summary>
            小号的事件(单位:毫秒)
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IFrameworkSystemService">
            <summary>
            系统管理服务接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkSystemService.GetAllServices">
            <summary>
            获取所有的服务信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IFrameworkSystemService.GetInvoker(System.Reflection.MethodInfo)">
            <summary>
            动态调用某个方法
            </summary>
            <param name="methodInfo"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ServiceInfo">
            <summary>
            服务信息
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ServiceInfo.#ctor(System.String,System.String,System.String,ICP.Framework.CommonLibrary.Attributes.ServiceType,System.Type)">
            <summary>
            
            </summary>
            <param name="serviceKey"></param>
            <param name="name"></param>
            <param name="description"></param>
            <param name="serviceType"></param>
            <param name="type"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ServiceInfo.AddService(ICP.Framework.CommonLibrary.Server.FunctionInfo)">
            <summary>
            增加功能
            </summary>
            <param name="service"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInfo.Key">
            <summary>
            键值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInfo.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInfo.SystemType">
            <summary>
            服务类型
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInfo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ServiceInfo.Functions">
            <summary>
            功能描述
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.FunctionInfo">
            <summary>
            功能信息？
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.FunctionInfo.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Reflection.MethodInfo,System.String)">
            <summary>
            
            </summary>
            <param name="functionKey"></param>
            <param name="serviceKey"></param>
            <param name="name"></param>
            <param name="description"></param>
            <param name="offline"></param>
            <param name="methodInfo"></param>
            <param name="dataUpdateEvent"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.FunctionInfo.Key">
            <summary>
            键值
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.FunctionInfo.SubSystemKey">
            <summary>
            子系统键值？
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.FunctionInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.FunctionInfo.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.FunctionInfo.Offline">
            <summary>
            是否支持脱机使用？
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.FunctionInfo.MethodInfo">
            <summary>
            方法信息？
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.FunctionInfo.DataUpdateEvent">
            <summary>
            数据更新事件？
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ClientModuleInfo">
            <summary>
            客户端模块信息
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ClientModuleInfo.#ctor(System.String[],System.String,System.String,System.Boolean,ICP.Framework.CommonLibrary.Server.CommandMapping[])">
            <summary>
            
            </summary>
            <param name="allowedRoles"></param>
            <param name="assemblyFile"></param>
            <param name="updateLocation"></param>
            <param name="isMainModule"></param>
            <param name="commandMappings"></param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ClientModuleInfo.AllowedRoles">
            <summary>
            活得授权的角色数组
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ClientModuleInfo.AssemblyFile">
            <summary>
            装配件文件的路径
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ClientModuleInfo.UpdateLocation">
            <summary>
            升级位置
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ClientModuleInfo.IsMainModule">
            <summary>
            是否主要模块
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ClientModuleInfo.CommandMappings">
            <summary>
            命令映射的数组
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.CommandMap">
            <summary>
            命令映射？
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.CommandMap.Mappings">
            <summary>
            命令映射的数组
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.CommandMapping">
            <summary>
            命令映射？
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.CommandMapping.Site">
            <summary>
            在界面上的位置
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.CommandMapping.CommandName">
            <summary>
            命令名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.CommandMapping.Label">
            <summary>
            显示给用户看的标签的名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.CommandMapping.Type">
            <summary>
            类型的字符串表示
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.CommandMapping.AllowedRoles">
            <summary>
            有权限的角色的集合
            (用逗号分隔？)
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.CommandMapping.RegisterSite">
            <summary>
            注册到界面上的位置？
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ILoggerFactory">
            <summary>
            日志工厂接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILoggerFactory.CreateLogger``1(System.String)">
            <summary>
            创建一个日志记录者
            </summary>
            <typeparam name="T">日志记录者类型</typeparam>
            <param name="loggingPath">日志记录路径</param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILoggerFactory.CreateLogger``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILoggerFactory.CreateLogger(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="loggingPath"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILoggerFactory.CreateLogger(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ILogger">
            <summary>
            日志记录者接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Debug(System.String)">
            <summary>
            记录调试级别的日志
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Debug(System.String,System.Exception)">
            <summary>
            记录调试级别的日志
            </summary>
            <param name="message">日志信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Info(System.String)">
            <summary>
            记录消息级别的日志
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Info(System.String,System.Exception)">
            <summary>
            记录消息级别的日志
            </summary>
            <param name="message">日志信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Warn(System.String)">
            <summary>
            记录警告级别的日志
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Warn(System.String,System.Exception)">
            <summary>
            记录警告级别的日志
            </summary>
            <param name="message">日志信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Error(System.String)">
            <summary>
            记录错误级别的日志
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Error(System.String,System.Exception)">
            <summary>
            记录错误级别的日志
            </summary>
            <param name="message">日志信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Fatal(System.String)">
            <summary>
            记录致命错误级别的日志
            </summary>
            <param name="message">日志信息</param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ILogger.Fatal(System.String,System.Exception)">
            <summary>
            记录致命错误L级别的日志
            </summary>
            <param name="message">日志信息</param>
            <param name="ex">异常</param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.LoggerMock">
            <summary>
            日志记录接口的空实现
            不记录任何信息，仅仅提供接口的空方法实现
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Debug(System.String)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Debug(System.String,System.Exception)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Info(System.String)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Info(System.String,System.Exception)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Warn(System.String)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Warn(System.String,System.Exception)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Error(System.String)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Error(System.String,System.Exception)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Fatal(System.String)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.LoggerMock.Fatal(System.String,System.Exception)">
            <summary>
            空方法
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IObjectDatabaseService">
            <summary>
            对象数据库服务
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabaseService.OpenDatabase(System.String)">
            <summary>
            打开对象数据库
            </summary>
            <param name="databaseName"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabaseService.CloseDatabase(System.String)">
            <summary>
            关闭对象数据库
            </summary>
            <param name="databaseName"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabaseService.DropDatabase(System.String)">
            <summary>
            删除对象数据库
            </summary>
            <param name="databaseName"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabaseService.GetAllDatabaseInfo">
            <summary>
            获取全部的对象数据库信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.IObjectDatabase">
            <summary>
            对象数据库
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabase.Save(System.Object)">
            <summary>
            保存对象
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabase.Delete(System.Object)">
            <summary>
            删除对象
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabase.Load``1(System.Predicate{``0})">
            <summary>
            根据查询条件获取指定对象的数组？
            </summary>
            <typeparam name="T"></typeparam>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabase.Load``1(``0)">
            <summary>
            根据对象的Type返回所有同样的对象？
            </summary>
            <typeparam name="T"></typeparam>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabase.Load``1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabase.GetObjectKey(System.Object)">
            <summary>
            根据对象，返回其键值
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabase.GetObjectByKey(System.String)">
            <summary>
            根据键值获取对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.IObjectDatabase.Activate(System.Object,System.Int32)">
            <summary>
            激活指定深度内的对象？
            </summary>
            <param name="obj"></param>
            <param name="depth"></param>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ObjectDatabaseInfo">
            <summary>
            对象数据库的信息
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ObjectDatabaseInfo.#ctor(System.String,System.String,System.Int32)">
            <summary>
            构造对象数据库信息
            </summary>
            <param name="name">名称</param>
            <param name="description">描述</param>
            <param name="size">大小</param>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ObjectDatabaseInfo.Name">
            <summary>
            获取对象数据库的名称
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ObjectDatabaseInfo.Description">
            <summary>
            获取或设置对象数据库的属性
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ObjectDatabaseInfo.Size">
            <summary>
            获取对象数据库的大小
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ObjectDatabaseInfo.StoredClasses">
            <summary>
            获取或设置对象数据库的存储类别
            </summary>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.ObjectDatabaseInfo.Objects">
            <summary>
            获取或设置对象数据库的对象数目
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.MockObjectDatabaseService">
            <summary>
            对象数据库服务的一个伪实现(空实现)
            ICP 2.0的时候用于缓存的
            ICP 3.0暂时不考虑缓存
            </summary>
        </member>
        <member name="F:ICP.Framework.CommonLibrary.Server.MockObjectDatabaseService.db">
            <summary>
            
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.MockObjectDatabaseService.CloseDatabase(System.String)">
            <summary>
            
            </summary>
            <param name="databaseName"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.MockObjectDatabaseService.DropDatabase(System.String)">
            <summary>
            
            </summary>
            <param name="databaseName"></param>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.MockObjectDatabaseService.GetAllDatabaseInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.MockObjectDatabaseService.GetInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.MockObjectDatabaseService.OpenDatabase(System.String)">
            <summary>
            
            </summary>
            <param name="databaseName"></param>
            <returns></returns>
        </member>
        <member name="P:ICP.Framework.CommonLibrary.Server.MockObjectDatabaseService.ObjectDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="T:ICP.Framework.CommonLibrary.Server.ISystemErrorLogService">
            <summary>
            系统错误记录服务接口
            </summary>
        </member>
        <member name="M:ICP.Framework.CommonLibrary.Server.ISystemErrorLogService.Save(System.Guid,System.String,System.String,System.Byte[],System.String,System.DateTime)">
             <summary>
             保存系统错误日志
             </summary>
             <param name="userId"></param>
             <param name="userName"></param>
             <param name="sessionId"></param>
             <param name="description"></param>
            <param name="screenCapture">屏幕截图</param>
             <param name="createTime"></param>
        </member>
    </members>
</doc>
