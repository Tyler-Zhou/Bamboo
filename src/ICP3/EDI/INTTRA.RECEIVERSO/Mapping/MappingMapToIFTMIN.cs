////////////////////////////////////////////////////////////////////////
//
// MappingMapToIFTMIN.cs
//
// This file was generated by MapForce 2010.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Xml;
using Altova.Xml;

using ICP.EDI.ServiceInterface;



namespace INTTRA.RECEIVERSO
{

    public class MappingMapToIFTMIN : Altova.TraceProvider, IMapping
    {

        #region

        private bool runDoesCloseAll = true;
        public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; } }




        #region Members
        // instances
        protected XmlNode m_INTRRASO2Instance;
        // members
        #endregion //Members


        public void Run(String INTRRASO2SourceFilename, string EnvelopeTargetFilename)
        {
            // open source streams
            WriteTrace("Loading " + INTRRASO2SourceFilename + "...\n");
            Altova.IO.Input INTRRASO2Source = new Altova.IO.FileInput(INTRRASO2SourceFilename);
            // open target stream
            Altova.IO.Output EnvelopeTarget = new Altova.IO.FileOutput(EnvelopeTargetFilename);

            // run
            Run(INTRRASO2Source, EnvelopeTarget);

            // close source streams
            INTRRASO2Source.Stream.Close();
            // close target stream
            WriteTrace("Saving " + EnvelopeTargetFilename + "...\n");
            EnvelopeTarget.Stream.Close();
        }

        public void Run(Altova.IO.Input INTRRASO2Source, Altova.IO.Output EnvelopeTarget)
        {
            // Open the source(s)
            XmlDocument INTRRASO2DocSourceObject = XmlTreeOperations.LoadDocument(INTRRASO2Source);


            m_INTRRASO2Instance = INTRRASO2DocSourceObject;
            INTRRASO2Source.Close();
            // Create the target
            Envelope.EnvelopeDocument EnvelopeTargetDoc = new Envelope.EnvelopeDocument();
            Altova.TextParser.ITextNode EnvelopeTargetObject = EnvelopeTargetDoc.Generator;

            // Execute mapping

            seq1_Main mapping = new seq1_Main(
new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_INTRRASO2Instance, INTRRASO2Source.Filename));

            Altova.Mapforce.MFTextWriter.Write(mapping, EnvelopeTargetObject);

            // Close the target

            EnvelopeTargetDoc.SetEncoding("ISO-8859-1", false, false);
            EnvelopeTargetDoc.Save(EnvelopeTarget);

            // Close the Source Library

            if (runDoesCloseAll)
            {
                INTRRASO2Source.Close();
                EnvelopeTarget.Close();
            }
        }
        class seq1_Main : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_instance_INTRRASO;

            public seq1_Main(
                Altova.Mapforce.IMFNode var1_instance_INTRRASO
                )
            {
                this.var1_instance_INTRRASO = var1_instance_INTRRASO;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq1_Main closure;
                string var2_const_;
                public Enumerator(seq1_Main closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Envelope", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Interchange", var2_const_), (new seq2_create_element(closure.var1_instance_INTRRASO)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq2_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_INTRRASO;

            public seq2_create_element(
                Altova.Mapforce.IMFNode var1_INTRRASO
                )
            {
                this.var1_INTRRASO = var1_INTRRASO;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq2_create_element closure;
                string var2_const_;
                public Enumerator(seq2_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNB", var2_const_), (new seq3_create_element(closure.var1_INTRRASO)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Group", var2_const_), (new seq9_cond_map_filter_elements(closure.var1_INTRRASO)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq3_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_INTRRASO;

            public seq3_create_element(
                Altova.Mapforce.IMFNode var1_INTRRASO
                )
            {
                this.var1_INTRRASO = var1_INTRRASO;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq3_create_element closure;
                string var6_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq3_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var6_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_INTRRASO));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 6; goto case 6; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 22;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S001", var6_const_), (new seq4_create_element()));
                                pos++;
                                return true;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DocumentNo", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0020", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 6;
                            case 22:
                                state = 23;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S002", var6_const_), (new seq5_create_element()));
                                pos++;
                                return true;
                            case 23:
                                state = 24;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S003", var6_const_), (new seq6_create_element()));
                                pos++;
                                return true;
                            case 24:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S004", var6_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0017", var6_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Lang.Right(Altova.Functions.Core.ToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.YearFromDatetime(Altova.Functions.Lang.Now())))), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(2m)))), (string)Altova.Functions.Core.First((new seq7_if_less()))), (string)Altova.Functions.Core.First((new seq8_if_less())))))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq4_create_element : IEnumerable
        {

            public seq4_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq4_create_element closure;
                string var1_const_;
                public Enumerator(seq4_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0001", var1_const_), Altova.Functions.Core.Box("UNOC"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0002", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(2m)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq5_create_element : IEnumerable
        {

            public seq5_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq5_create_element closure;
                string var1_const_;
                public Enumerator(seq5_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0004", var1_const_), Altova.Functions.Core.Box("CITYOCEANSO"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0007", var1_const_), Altova.Functions.Core.Box("ZZZ"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq6_create_element : IEnumerable
        {

            public seq6_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq6_create_element closure;
                string var1_const_;
                public Enumerator(seq6_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0010", var1_const_), Altova.Functions.Core.Box("INTTRA"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0007", var1_const_), Altova.Functions.Core.Box("ZZZ"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq7_if_less : IEnumerable
        {

            public seq7_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq7_if_less closure;
                int var2_month_from_datetime;
                decimal var1_cast;
                public Enumerator(seq7_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_month_from_datetime = (Altova.Functions.Lang.MonthFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_month_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_month_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq8_if_less : IEnumerable
        {

            public seq8_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq8_if_less closure;
                int var2_day_from_datetime;
                decimal var1_cast;
                public Enumerator(seq8_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_day_from_datetime = (Altova.Functions.Lang.DayFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_day_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_day_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq9_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_INTRRASO;

            public seq9_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_INTRRASO
                )
            {
                this.var1_INTRRASO = var1_INTRRASO;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq9_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                IEnumerator var5_map_filter_elements;
                public Enumerator(seq9_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_INTRRASO));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 13;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("BookInfo", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))).GetEnumerator();
                                goto case 13;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                            case 13:
                                state = 13;
                                if (!var5_map_filter_elements.MoveNext()) { state = 14; goto case 14; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Message_IFTMIN", ""), (new seq10_create_element(((Altova.Mapforce.IMFEnumerator)var5_map_filter_elements).Position, (Altova.Mapforce.IMFNode)(var5_map_filter_elements.Current), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current), closure.var1_INTRRASO)));
                                pos++;
                                return true;
                            case 14:
                                state = 9;
                                Altova.Mapforce.MFEnumerator.Dispose(var5_map_filter_elements); var5_map_filter_elements = null;
                                goto case 9;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var5_map_filter_elements); var5_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq10_create_element : IEnumerable
        {
            int var2_idx_filter_elements;
            Altova.Mapforce.IMFNode var3_cur_filter_elements;
            Altova.Mapforce.IMFNode var13_cur_filter_elements;
            Altova.Mapforce.IMFNode var16_INTRRASO;

            public seq10_create_element(
                int var2_idx_filter_elements,
                Altova.Mapforce.IMFNode var3_cur_filter_elements,
                Altova.Mapforce.IMFNode var13_cur_filter_elements,
                Altova.Mapforce.IMFNode var16_INTRRASO
                )
            {
                this.var2_idx_filter_elements = var2_idx_filter_elements;
                this.var3_cur_filter_elements = var3_cur_filter_elements;
                this.var13_cur_filter_elements = var13_cur_filter_elements;
                this.var16_INTRRASO = var16_INTRRASO;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq10_create_element closure;
                string var1_const_;
                Altova.Types.QName var12_create_qname;
                Altova.Types.QName var11_create_qname;
                Altova.Types.QName var10_create_qname;
                Altova.Types.QName var9_create_qname;
                Altova.Types.QName var8_create_qname;
                Altova.Types.QName var7_create_qname;
                Altova.Types.QName var6_create_qname;
                Altova.Types.QName var5_create_qname;
                Altova.Types.QName var4_create_qname;
                string var15_const_http___tempuri_org_E;
                IEnumerator var14_map_filter_elements;
                public Enumerator(seq10_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                var12_create_qname = (Altova.Functions.Core.CreateQName("NAD", var1_const_));
                                var11_create_qname = (Altova.Functions.Core.CreateQName("SG11", var1_const_));
                                var10_create_qname = (Altova.Functions.Core.CreateQName("C506", var1_const_));
                                var9_create_qname = (Altova.Functions.Core.CreateQName("RFF", var1_const_));
                                var8_create_qname = (Altova.Functions.Core.CreateQName("SG3", var1_const_));
                                var7_create_qname = (Altova.Functions.Core.CreateQName("LOC", var1_const_));
                                var6_create_qname = (Altova.Functions.Core.CreateQName("SG1", var1_const_));
                                var5_create_qname = (Altova.Functions.Core.CreateQName("C270", var1_const_));
                                var4_create_qname = (Altova.Functions.Core.CreateQName("CNT", var1_const_));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNH", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0062", var1_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq11_if_equal_or_greater(closure.var2_idx_filter_elements)))))));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("BGM", var1_const_), (new seq12_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTM", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C507", var1_const_), (new seq14_create_element()))));
                                pos++;
                                return true;
                            case 7:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TSR", var1_const_), (new seq17_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 8:
                                state = 9;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var1_const_), (new seq19_create_element()));
                                pos++;
                                return true;
                            case 9:
                                state = 10;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq20_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 10:
                                state = 11;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq21_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 11:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq22_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq23_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 13:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var7_create_qname, (new seq24_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 14:
                                state = 15;
                                current = Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var7_create_qname, (new seq27_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 15:
                                state = 16;
                                current = Altova.Functions.Core.CreateElement(var8_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var9_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var10_create_qname, (new seq29_cond_seq_(closure.var3_cur_filter_elements)))))));
                                pos++;
                                return true;
                            case 16:
                                state = 17;
                                current = Altova.Functions.Core.CreateElement(var8_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var9_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var10_create_qname, (new seq31_cond_seq_(closure.var3_cur_filter_elements)))))));
                                pos++;
                                return true;
                            case 17:
                                state = 18;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG6", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CPI", var1_const_), (new seq33_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 18:
                                state = 19;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG8", var1_const_), (new seq34_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 19:
                                state = 20;
                                current = Altova.Functions.Core.CreateElement(var11_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var12_create_qname, (new seq48_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 20:
                                state = 21;
                                current = Altova.Functions.Core.CreateElement(var11_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var12_create_qname, (new seq50_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 21:
                                state = 24;
                                current = Altova.Functions.Core.CreateElement(var11_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var12_create_qname, (new seq52_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 24:
                                state = 25;
                                current = Altova.Functions.Core.CreateElement(var11_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var12_create_qname, (new seq57_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 25:
                                state = 26;
                                current = Altova.Functions.Core.CreateElement(var11_create_qname, (new seq60_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 26:
                                state = 27;
                                current = Altova.Functions.Core.CreateElement(var11_create_qname, (new seq72_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 27:
                                state = 28;
                                current = Altova.Functions.Core.CreateElement(var11_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var12_create_qname, (new seq84_create_element(closure.var13_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 28:
                                state = 29;
                                current = Altova.Functions.Core.CreateElement(var11_create_qname, (new seq87_create_element()));
                                pos++;
                                return true;
                            case 29:
                                state = 31;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG18", var1_const_), (new seq92_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 31:
                                state = 33;
                                var15_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var14_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Container", var15_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var15_const_http___tempuri_org_E), closure.var16_INTRRASO)))).GetEnumerator();
                                goto case 33;
                            case 33:
                                state = 33;
                                if (!var14_map_filter_elements.MoveNext()) { state = 34; goto case 34; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG37", var1_const_), (new seq119_create_element((Altova.Mapforce.IMFNode)(var14_map_filter_elements.Current), closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 34:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var14_map_filter_elements); var14_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNT", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0062", var1_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq11_if_equal_or_greater(closure.var2_idx_filter_elements)))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var14_map_filter_elements); var14_map_filter_elements = null;
                }
            }

        }
        class seq11_if_equal_or_greater : IEnumerable
        {
            int var1_idx_filter_elements;

            public seq11_if_equal_or_greater(
                int var1_idx_filter_elements
                )
            {
                this.var1_idx_filter_elements = var1_idx_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq11_if_equal_or_greater closure;
                string var3_const_000;
                decimal var4_;
                string var2_string;
                decimal var5_;
                public Enumerator(seq11_if_equal_or_greater closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_000 = ("000");
                                var4_ = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.StringLength(var3_const_000))));
                                var2_string = (Altova.Functions.Core.ToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(closure.var1_idx_filter_elements))));
                                var5_ = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.StringLength(var2_string))));
                                if (!((var5_) >= (var4_))) { state = 11; goto case 11; }
                                current = var2_string;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.Functions.Core.Concat(Altova.Functions.Core.Substring(var3_const_000, Altova.CoreTypes.DecimalToDouble(1m), Altova.CoreTypes.DecimalToDouble(Altova.Functions.Core.Subtract(var4_, var5_))), var2_string);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq12_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq12_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq12_create_element closure;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq12_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Flag", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C002", var3_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1001", var3_const_), Altova.Functions.Core.Box("335"))));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C106", var3_const_), (new seq13_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq13_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq13_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq13_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq13_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("No", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1004", ""), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)), "SO")));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1060", ""), Altova.Functions.Core.Box("000001"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq14_create_element : IEnumerable
        {

            public seq14_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq14_create_element closure;
                int var3_;
                string var2_string;
                string var1_const_;
                public Enumerator(seq14_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_ = (Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(2m))));
                                var2_string = (Altova.Functions.Core.ToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.YearFromDatetime(Altova.Functions.Lang.Now())))));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2005", var1_const_), Altova.Functions.Core.Box("137"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2380", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Lang.Left(var2_string, var3_), Altova.Functions.Lang.Right(var2_string, var3_)), (string)Altova.Functions.Core.First((new seq7_if_less()))), (string)Altova.Functions.Core.First((new seq8_if_less()))), (string)Altova.Functions.Core.First((new seq15_if_less()))), (string)Altova.Functions.Core.First((new seq16_if_less())))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2379", var1_const_), Altova.Functions.Core.Box("203"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq15_if_less : IEnumerable
        {

            public seq15_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq15_if_less closure;
                int var2_hour_from_datetime;
                decimal var1_cast;
                public Enumerator(seq15_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_hour_from_datetime = (Altova.Functions.Lang.HourFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_hour_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_hour_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq16_if_less : IEnumerable
        {

            public seq16_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq16_if_less closure;
                int var2_minute_from_datetime;
                decimal var1_cast;
                public Enumerator(seq16_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_minute_from_datetime = (Altova.Functions.Lang.MinuteFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_minute_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_minute_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq17_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq17_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq17_create_element closure;
                string var2_const_;
                public Enumerator(seq17_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C536", var2_const_), (new seq18_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C233", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7273_1", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(2m)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq18_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq18_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq18_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq18_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryTerm", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4065", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq19_create_element : IEnumerable
        {

            public seq19_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq19_create_element closure;
                string var1_const_;
                public Enumerator(seq19_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var1_const_), Altova.Functions.Core.Box("AAI"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var1_const_), Altova.Functions.Core.Box("MOTHER BILL"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq20_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq20_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq20_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq20_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6069", var2_const_), Altova.Functions.Core.Box("7"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6066", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("KGM"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq21_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq21_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq21_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq21_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6069", var2_const_), Altova.Functions.Core.Box("11"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6066", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq22_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq22_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq22_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq22_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6069", var2_const_), Altova.Functions.Core.Box("15"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6066", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("MTQ"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq23_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq23_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq23_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq23_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Num", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6069", var2_const_), Altova.Functions.Core.Box("16"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6066", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements)))))))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq24_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq24_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq24_create_element closure;
                public Enumerator(seq24_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PayLocName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq25_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", ""), (new seq26_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq25_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq25_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq25_if_empty closure;
                public Enumerator(seq25_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PayLocName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "57";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq26_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq26_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq26_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq26_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PayLocName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq27_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq27_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq27_create_element closure;
                string var1_const_;
                public Enumerator(seq27_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("73"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq28_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq28_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq28_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq28_create_element closure;
                string var4_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq28_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueLocName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueLocCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var4_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq29_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq29_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq29_cond_seq_ closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq29_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RefNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1153", var2_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq30_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 9:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1154", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq30_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq30_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq30_if_empty closure;
                public Enumerator(seq30_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RefNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "FF";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq31_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq31_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq31_cond_seq_ closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq31_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContractNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1153", var2_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq32_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 9:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1154", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq32_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq32_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq32_if_empty closure;
                public Enumerator(seq32_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContractNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "CT";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq33_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq33_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq33_create_element closure;
                string var4_const_;
                System.Collections.IEnumerable var2_filter_elements;
                System.Collections.IEnumerable var3_vmf1_inputtoresult;
                public Enumerator(seq33_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PaymentTerm", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                var3_vmf1_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf.vmf1_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_vmf1_inputtoresult))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4237", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var3_vmf1_inputtoresult)));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C229", var4_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F5237", var4_const_), Altova.Functions.Core.Box("4"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq34_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq34_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq34_create_element closure;
                string var2_const_;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                public Enumerator(seq34_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("LOC", var2_const_));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("SG9", var2_const_));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TDT", var2_const_), (new seq35_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq38_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq40_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 7:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq42_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 8:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq44_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq35_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq35_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq35_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq35_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8051", var2_const_), Altova.Functions.Core.Box("20"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8028", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C220", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8067", var2_const_), Altova.Functions.Core.Box("1"))));
                                pos++;
                                return true;
                            case 13:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C040", var2_const_), (new seq36_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 14:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C222", var2_const_), (new seq37_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq36_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq36_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq36_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq36_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipOwnerCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3127", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", ""), Altova.Functions.Core.Box("172"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq37_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq37_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq37_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq37_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Vessel", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8212", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq38_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq38_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq38_create_element closure;
                string var1_const_;
                public Enumerator(seq38_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("7"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq39_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq39_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq39_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq39_create_element closure;
                string var4_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq39_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var4_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq40_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq40_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq40_create_element closure;
                string var1_const_;
                public Enumerator(seq40_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("9"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq41_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq41_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq41_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq41_create_element closure;
                string var4_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq41_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var4_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq42_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq42_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq42_create_element closure;
                string var1_const_;
                public Enumerator(seq42_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("11"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq43_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq43_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq43_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq43_create_element closure;
                string var4_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq43_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var4_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq44_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq44_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq44_create_element closure;
                public Enumerator(seq44_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq45_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", ""), (new seq46_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq45_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq45_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq45_if_empty closure;
                public Enumerator(seq45_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "88";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq46_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq46_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq46_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                string var4_const_;
                public Enumerator(seq46_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 14;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                goto case 14;
                            case 14:
                                state = 16;
                                var4_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var4_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq47_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 16:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq47_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq47_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq47_if_empty closure;
                public Enumerator(seq47_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "6";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq48_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq48_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq48_create_element closure;
                string var1_const_;
                public Enumerator(seq48_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("CZ"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C080", var1_const_), (new seq49_cond_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq49_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq49_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq49_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq49_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperStr", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3036", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq50_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq50_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq50_create_element closure;
                string var1_const_;
                public Enumerator(seq50_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("CN"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C080", var1_const_), (new seq51_cond_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq51_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq51_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq51_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq51_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeStr", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3036", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq52_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq52_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq52_create_element closure;
                string var1_const_;
                public Enumerator(seq52_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("NI"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C080", var1_const_), (new seq53_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq53_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq53_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq53_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq53_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCSCL");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq54_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCSCL"), "http://www.CityOcean.com/ICP3ParseCustomerToCSCL", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCSCLResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq54_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCSCL"), "http://www.CityOcean.com/ICP3ParseCustomerToCSCL", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCSCLResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3036", var7_const_), (new seq55_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq54_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq54_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq54_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq54_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NotifyInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal("35")))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal("1")))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box("ZH"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq55_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq55_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq55_if_if_exists closure;
                public Enumerator(seq55_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq56_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq56_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq56_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq56_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq56_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq57_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq57_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq57_create_element closure;
                string var1_const_;
                public Enumerator(seq57_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("CA"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C082", var1_const_), (new seq58_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C080", var1_const_), (new seq59_cond_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq58_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq58_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq58_create_element closure;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq58_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipOwnerCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3039", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var3_const_), Altova.Functions.Core.Box("160"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box("86"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq59_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq59_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq59_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq59_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipOwnerName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3036", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq60_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq60_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq60_create_element closure;
                string var2_const_;
                public Enumerator(seq60_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var2_const_), (new seq61_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG12", var2_const_), (new seq66_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq61_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq61_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq61_create_element closure;
                public Enumerator(seq61_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq62_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C080", ""), (new seq63_cond_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq62_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq62_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq62_if_empty closure;
                public Enumerator(seq62_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "SF";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq63_cond_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq63_cond_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq63_cond_cond_create_element closure;
                public Enumerator(seq63_cond_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 0; return false; }
                                if (!((bool)Altova.Functions.Core.First((new seq64_if_empty(closure.var1_cur_filter_elements))))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3036", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq65_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq64_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq64_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq64_if_empty closure;
                string var2_const_http___tempuri_org_E;
                public Enumerator(seq64_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperName", var2_const_http___tempuri_org_E), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean("true");
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperStr", var2_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq65_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq65_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq65_if_empty closure;
                string var3_const_http___tempuri_org_E;
                IEnumerator var2_map_filter_elements;
                public Enumerator(seq65_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 12;
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperStr", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements)).GetEnumerator();
                                goto case 12;
                            case 12:
                                state = 12;
                                if (!var2_map_filter_elements.MoveNext()) { state = 13; goto case 13; }
                                current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq66_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq66_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq66_create_element closure;
                string var2_const_;
                public Enumerator(seq66_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CTA", var2_const_), (new seq67_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("COM", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C076", var2_const_), (new seq70_cond_seq_(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq67_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq67_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq67_create_element closure;
                public Enumerator(seq67_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3139", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq68_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C056", ""), (new seq69_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq68_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq68_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq68_if_empty closure;
                public Enumerator(seq68_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "IC";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq69_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq69_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq69_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq69_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3412", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq70_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq70_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq70_cond_seq_ closure;
                System.Collections.IEnumerable var2_filter_elements;
                string var3_const_;
                public Enumerator(seq70_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperTel", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3148", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 9:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3155", var3_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq71_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq71_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq71_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq71_if_empty closure;
                public Enumerator(seq71_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperTel", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "TE";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq72_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq72_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq72_create_element closure;
                string var2_const_;
                public Enumerator(seq72_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var2_const_), (new seq73_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG12", var2_const_), (new seq78_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq73_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq73_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq73_create_element closure;
                public Enumerator(seq73_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq74_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C080", ""), (new seq75_cond_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq74_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq74_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq74_if_empty closure;
                public Enumerator(seq74_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "ST";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq75_cond_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq75_cond_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq75_cond_cond_create_element closure;
                public Enumerator(seq75_cond_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 0; return false; }
                                if (!((bool)Altova.Functions.Core.First((new seq76_if_empty(closure.var1_cur_filter_elements))))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3036", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq77_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq76_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq76_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq76_if_empty closure;
                string var2_const_http___tempuri_org_E;
                public Enumerator(seq76_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeName", var2_const_http___tempuri_org_E), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean("true");
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeStr", var2_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq77_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq77_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq77_if_empty closure;
                string var3_const_http___tempuri_org_E;
                IEnumerator var2_map_filter_elements;
                public Enumerator(seq77_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 12;
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeStr", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements)).GetEnumerator();
                                goto case 12;
                            case 12:
                                state = 12;
                                if (!var2_map_filter_elements.MoveNext()) { state = 13; goto case 13; }
                                current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq78_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq78_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq78_create_element closure;
                string var2_const_;
                public Enumerator(seq78_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CTA", var2_const_), (new seq79_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("COM", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C076", var2_const_), (new seq82_cond_seq_(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq79_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq79_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq79_create_element closure;
                public Enumerator(seq79_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3139", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq80_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C056", ""), (new seq81_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq80_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq80_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq80_if_empty closure;
                public Enumerator(seq80_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "IC";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq81_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq81_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq81_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq81_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3412", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq82_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq82_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq82_cond_seq_ closure;
                System.Collections.IEnumerable var2_filter_elements;
                string var3_const_;
                public Enumerator(seq82_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeTel", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3148", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 9:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3155", var3_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq83_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq83_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq83_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq83_if_empty closure;
                public Enumerator(seq83_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConsigneeTel", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "TE";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq84_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq84_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq84_create_element closure;
                string var1_const_;
                public Enumerator(seq84_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("HI"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C082", var1_const_), (new seq85_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C080", var1_const_), (new seq86_cond_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq85_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq85_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq85_create_element closure;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq85_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CompanyCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3039", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var3_const_), Altova.Functions.Core.Box("160"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box("86"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq86_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq86_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq86_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq86_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CompanyInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3036", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq87_create_element : IEnumerable
        {

            public seq87_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq87_create_element closure;
                string var1_const_;
                public Enumerator(seq87_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var1_const_), (new seq88_create_element()));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG12", var1_const_), (new seq89_create_element()));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq88_create_element : IEnumerable
        {

            public seq88_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq88_create_element closure;
                string var1_const_;
                public Enumerator(seq88_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("MR"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C080", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3036", var1_const_), Altova.Functions.Core.Box("MORE"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq89_create_element : IEnumerable
        {

            public seq89_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq89_create_element closure;
                string var1_const_;
                public Enumerator(seq89_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CTA", var1_const_), (new seq90_create_element()));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("COM", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C076", var1_const_), (new seq91_create_element()))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq90_create_element : IEnumerable
        {

            public seq90_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq90_create_element closure;
                string var1_const_;
                public Enumerator(seq90_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3139", var1_const_), Altova.Functions.Core.Box("NT"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C056", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3412", var1_const_), Altova.Functions.Core.Box("MORE"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq91_create_element : IEnumerable
        {

            public seq91_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq91_create_element closure;
                string var1_const_;
                public Enumerator(seq91_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3148", var1_const_), Altova.Functions.Core.Box("co-edi@cityocean.com"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3155", var1_const_), Altova.Functions.Core.Box("EM"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq92_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq92_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq92_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var3_const_http___schemas_xmlso;
                Altova.Types.QName var5_create_qname;
                Altova.Types.QName var4_create_qname;
                IEnumerator var2_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                Altova.Types.QName var14_create_qname;
                IEnumerator var11_map_filter_elements;
                Altova.Types.QName var13_create_qname;
                public Enumerator(seq92_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var3_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var5_create_qname = (Altova.Functions.Core.CreateQName("Body", var3_const_http___schemas_xmlso));
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var3_const_http___schemas_xmlso));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GID", var7_const_), (new seq93_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var3_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq95_create_element(closure.var1_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 6;
                            case 6:
                                state = 10;
                                if (!var2_map_filter_elements.MoveNext()) { state = 7; goto case 7; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))).GetEnumerator();
                                goto case 10;
                            case 7:
                                state = 20;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq95_create_element(closure.var1_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 20;
                            case 10:
                                state = 10;
                                if (!var8_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 10;
                            case 11:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 6;
                            case 20:
                                state = 28;
                                if (!var9_map_filter_elements.MoveNext()) { state = 21; goto case 21; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 20; goto case 20; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 28;
                            case 21:
                                state = 37;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                var14_create_qname = (Altova.Functions.Core.CreateQName("MEA", var7_const_));
                                var13_create_qname = (Altova.Functions.Core.CreateQName("SG20", var7_const_));
                                current = Altova.Functions.Core.CreateElement(var13_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var14_create_qname, (new seq100_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 28:
                                state = 28;
                                if (!var11_map_filter_elements.MoveNext()) { state = 29; goto case 29; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var7_const_), (new seq97_create_element((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 29:
                                state = 20;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 20;
                            case 37:
                                state = 38;
                                current = Altova.Functions.Core.CreateElement(var13_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var14_create_qname, (new seq102_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 38:
                                state = 41;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG23", var7_const_), (new seq104_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 41:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG32", var7_const_), (new seq108_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq93_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq93_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq93_create_element closure;
                string var1_const_;
                public Enumerator(seq93_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1496", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C213", var1_const_), (new seq94_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq94_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq94_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq94_create_element closure;
                string var5_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var6_filter_elements;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq94_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var5_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnit", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7224", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 13; goto case 13; }
                                goto case 15;
                            case 13:
                                state = 19;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var5_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 15:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7065", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                            case 19:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7064", var5_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq95_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq95_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq95_create_element closure;
                string var7_const_;
                string var6_const_ICP3GetGoodsInfo;
                string var2_const_http___www_w3_org_20;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                public Enumerator(seq95_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3GetGoodsInfo = ("ICP3GetGoodsInfo");
                                var2_const_http___www_w3_org_20 = ("http://www.w3.org/2003/05/soap-envelope");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___www_w3_org_20));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___www_w3_org_20));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___www_w3_org_20), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3GetGoodsInfo, "http://www.CityOcean.com/"), (new seq96_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3GetGoodsInfo, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3GetGoodsInfo"), "http://www.CityOcean.com/ICP3GetGoodsInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3GetGoodsInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3GetGoodsInfo, var10_const_http___www_CityOcean), (new seq96_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3GetGoodsInfo, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3GetGoodsInfo"), "http://www.CityOcean.com/ICP3GetGoodsInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3GetGoodsInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements))));
                                pos++;
                                return true;
                            case 20:
                                state = 30;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal("30")))))))));
                                pos++;
                                return true;
                            case 30:
                                state = 31;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(99m))))))));
                                pos++;
                                return true;
                            case 31:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box("ZH"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq96_cond_create_element_with_prefix : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq96_cond_create_element_with_prefix(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq96_cond_create_element_with_prefix closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq96_cond_create_element_with_prefix closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GoodsInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("val", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq97_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq97_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq97_create_element closure;
                string var1_const_;
                public Enumerator(seq97_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var1_const_), Altova.Functions.Core.Box("AAA"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var1_const_), (new seq98_if_if_exists(closure.var2_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq98_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq98_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq98_if_if_exists closure;
                public Enumerator(seq98_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq99_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq99_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq99_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq99_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq99_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq100_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq100_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq100_create_element closure;
                string var1_const_;
                public Enumerator(seq100_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("WT"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq101_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq101_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq101_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq101_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq101_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("KGM"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq102_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq102_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq102_create_element closure;
                string var1_const_;
                public Enumerator(seq102_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("AAW"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq103_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq103_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq103_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq103_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq103_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("MTQ"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq104_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq104_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq104_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq104_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PCI", var7_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C210", var7_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7102", var7_const_), (new seq106_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))))))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq105_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq105_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq105_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq105_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Marks", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(30m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(1m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box("ZH"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq106_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq106_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq106_if_if_exists closure;
                public Enumerator(seq106_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq107_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq107_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq107_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq107_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq107_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq108_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq108_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq108_create_element closure;
                string var2_const_;
                public Enumerator(seq108_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DGS", var2_const_), (new seq109_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG33", var2_const_), (new seq113_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq109_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq109_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq109_create_element closure;
                string var2_const_;
                public Enumerator(seq109_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var2_const_ = ("");
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Class", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8273", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq110_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C205", var2_const_), (new seq111_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C234", var2_const_), (new seq112_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq110_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq110_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq110_if_empty closure;
                public Enumerator(seq110_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Class", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "IMG";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq111_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq111_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq111_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq111_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Class", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8351", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq112_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq112_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq112_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq112_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("UNNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7124", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq113_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq113_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq113_create_element closure;
                string var2_const_;
                public Enumerator(seq113_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CTA", var2_const_), (new seq114_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("COM", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C076", var2_const_), (new seq117_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq114_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq114_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq114_create_element closure;
                public Enumerator(seq114_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Class", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3139", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq115_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C056", ""), (new seq116_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq115_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq115_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq115_if_empty closure;
                public Enumerator(seq115_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Class", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "HG";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq116_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq116_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq116_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq116_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DangerConsigneeName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3412", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq117_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq117_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq117_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq117_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DangerConsigneeTel", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3148", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Class", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements)))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3155", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq118_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq118_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq118_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq118_if_empty closure;
                public Enumerator(seq118_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Class", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "TE";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq119_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq119_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements,
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq119_create_element closure;
                string var2_const_;
                public Enumerator(seq119_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EQD", var2_const_), (new seq120_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EQN", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C523", var2_const_), (new seq122_cond_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TMP", var2_const_), (new seq123_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq120_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq120_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq120_create_element closure;
                string var1_const_;
                public Enumerator(seq120_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8053", var1_const_), Altova.Functions.Core.Box("CN"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C224", var1_const_), (new seq121_cond_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq121_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq121_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq121_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq121_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Type", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8155", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq122_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq122_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq122_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq122_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Num", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6350", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))))))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq123_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq123_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq123_create_element closure;
                public Enumerator(seq123_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("C", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6245", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq124_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C239", ""), (new seq125_cond_seq_(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq124_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq124_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq124_if_empty closure;
                public Enumerator(seq124_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("C", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "2";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq125_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq125_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq125_cond_seq_ closure;
                System.Collections.IEnumerable var2_filter_elements;
                string var3_const_;
                public Enumerator(seq125_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("C", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6246", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
                                pos++;
                                return true;
                            case 9:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var3_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq126_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq126_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq126_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq126_if_empty closure;
                public Enumerator(seq126_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("C", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "CEL";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }

        #endregion

    }
}
