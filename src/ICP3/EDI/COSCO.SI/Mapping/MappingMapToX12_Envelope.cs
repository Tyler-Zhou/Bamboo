////////////////////////////////////////////////////////////////////////
//
// MappingMapToX12_Envelope.cs
//
// This file was generated by MapForce 2011r2.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Xml;
using Altova.Xml;
using ICP.EDI.ServiceInterface;


namespace COSCO.SI
{
    public class MappingMapToX12_Envelope : Altova.TraceProvider, IMapping
    {
        private bool runDoesCloseAll = true;
        public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; } }




        #region Members
        // instances
        protected XmlNode m_COSCOSI2Instance;
        // members
        #endregion //Members


        public void Run(String COSCOSI2SourceFilename, string X12_EnvelopeTargetFilename)
        {
            // open source streams
            WriteTrace("Loading " + COSCOSI2SourceFilename + "...\n");
            Altova.IO.Input COSCOSI2Source = new Altova.IO.FileInput(COSCOSI2SourceFilename);
            // open target stream
            Altova.IO.Output X12_EnvelopeTarget = new Altova.IO.FileOutput(X12_EnvelopeTargetFilename);

            // run
            Run(COSCOSI2Source, X12_EnvelopeTarget);

            // close source streams
            COSCOSI2Source.Stream.Close();
            // close target stream
            WriteTrace("Saving " + X12_EnvelopeTargetFilename + "...\n");
            X12_EnvelopeTarget.Stream.Close();
        }

        public void Run(Altova.IO.Input COSCOSI2Source, Altova.IO.Output X12_EnvelopeTarget)
        {
            // Open the source(s)
            XmlDocument COSCOSI2DocSourceObject = XmlTreeOperations.LoadDocument(COSCOSI2Source);


            m_COSCOSI2Instance = COSCOSI2DocSourceObject;
            COSCOSI2Source.Close();
            // Create the target
            COSCO.SI.X12_EnvelopeDocument X12_EnvelopeTargetDoc = new COSCO.SI.X12_EnvelopeDocument();
            Altova.TextParser.ITextNode X12_EnvelopeTargetObject = X12_EnvelopeTargetDoc.Generator;

            // Execute mapping

            seq1_Main mapping = new seq1_Main(
new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_COSCOSI2Instance, COSCOSI2Source.Filename));

            Altova.Mapforce.MFTextWriter.Write(mapping, X12_EnvelopeTargetObject);

            // Close the target

            X12_EnvelopeTargetDoc.SetEncoding("ISO-8859-1", false, false);
            X12_EnvelopeTargetDoc.Save(X12_EnvelopeTarget);

            // Close the Source Library

            if (runDoesCloseAll)
            {
                COSCOSI2Source.Close();
                X12_EnvelopeTarget.Close();
            }
        }
        class seq1_Main : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_instance_COSCOSI;

            public seq1_Main(
                Altova.Mapforce.IMFNode var1_instance_COSCOSI
                )
            {
                this.var1_instance_COSCOSI = var1_instance_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq1_Main closure;
                string var2_const_;
                public Enumerator(seq1_Main closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Envelope", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Interchange", var2_const_), (new seq2_create_element(closure.var1_instance_COSCOSI)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq2_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_COSCOSI;

            public seq2_create_element(
                Altova.Mapforce.IMFNode var2_COSCOSI
                )
            {
                this.var2_COSCOSI = var2_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq2_create_element closure;
                string var1_const_;
                public Enumerator(seq2_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ISA", var1_const_), (new seq3_create_element()));
                                pos++;
                                return true;
                            case 5:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Group", var1_const_), (new seq4_create_element(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 8:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IEA", var1_const_), (new seq84_create_element()));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq3_create_element : IEnumerable
        {

            public seq3_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq3_create_element closure;
                System.Collections.IEnumerable var4_const_ZZ;
                System.Collections.IEnumerable var3_const___________;
                System.Collections.IEnumerable var2_const_00;
                string var1_const_;
                public Enumerator(seq3_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_ZZ = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("ZZ"));
                                var3_const___________ = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("          "));
                                var2_const_00 = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("00"));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI01", var1_const_), var2_const_00);
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI02", var1_const_), var3_const___________);
                                pos++;
                                return true;
                            case 6:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI03", var1_const_), var2_const_00);
                                pos++;
                                return true;
                            case 7:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI04", var1_const_), var3_const___________);
                                pos++;
                                return true;
                            case 8:
                                state = 9;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI05_1", var1_const_), var4_const_ZZ);
                                pos++;
                                return true;
                            case 9:
                                state = 10;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI06", var1_const_), Altova.Functions.Core.Box("CITYOCEAN      "));
                                pos++;
                                return true;
                            case 10:
                                state = 11;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI05_2", var1_const_), var4_const_ZZ);
                                pos++;
                                return true;
                            case 11:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI07", var1_const_), Altova.Functions.Core.Box("COSCONA        "));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI10", var1_const_), Altova.Functions.Core.Box("U"));
                                pos++;
                                return true;
                            case 13:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI11", var1_const_), Altova.Functions.Core.Box("00401"));
                                pos++;
                                return true;
                            case 14:
                                state = 15;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI12", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("000001469"))));
                                pos++;
                                return true;
                            case 15:
                                state = 16;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI13", var1_const_), Altova.Functions.Core.Box("0"));
                                pos++;
                                return true;
                            case 16:
                                state = 17;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI14", var1_const_), Altova.Functions.Core.Box("P"));
                                pos++;
                                return true;
                            case 17:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI15", var1_const_), Altova.Functions.Core.Box(">"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq4_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_COSCOSI;

            public seq4_create_element(
                Altova.Mapforce.IMFNode var2_COSCOSI
                )
            {
                this.var2_COSCOSI = var2_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq4_create_element closure;
                string var1_const_;
                public Enumerator(seq4_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GS", var1_const_), (new seq5_create_element()));
                                pos++;
                                return true;
                            case 5:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Message_304", var1_const_), (new seq6_create_element(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 8:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GE", var1_const_), (new seq83_create_element()));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq5_create_element : IEnumerable
        {

            public seq5_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq5_create_element closure;
                string var1_const_;
                public Enumerator(seq5_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F479", var1_const_), Altova.Functions.Core.Box("SO"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F142", var1_const_), Altova.Functions.Core.Box("CITYOCEAN      "));
                                pos++;
                                return true;
                            case 6:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F124", var1_const_), Altova.Functions.Core.Box("COSCONA        "));
                                pos++;
                                return true;
                            case 7:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F373", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DateToString(Altova.Functions.Lang.Now())));
                                pos++;
                                return true;
                            case 8:
                                state = 9;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F337", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.TimeToString(Altova.Functions.Lang.Now())));
                                pos++;
                                return true;
                            case 9:
                                state = 10;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F28", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1443"))));
                                pos++;
                                return true;
                            case 10:
                                state = 11;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F455", var1_const_), Altova.Functions.Core.Box("X"));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F480", var1_const_), Altova.Functions.Core.Box("004010"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq6_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_COSCOSI;

            public seq6_create_element(
                Altova.Mapforce.IMFNode var2_COSCOSI
                )
            {
                this.var2_COSCOSI = var2_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq6_create_element closure;
                string var1_const_;
                string var10_const_SplitString;
                string var7_const_http___schemas_xmlso;
                Altova.Types.QName var9_create_qname;
                Altova.Types.QName var8_create_qname;
                Altova.Types.QName var5_create_qname;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var6_map_filter_elements;
                IEnumerator var11_map_filter_elements;
                string var17_const_http___tempuri_org_C;
                System.Collections.IEnumerable var18_filter_elements;
                string var13_const_http___www_CityOcean;
                IEnumerator var12_map_filter_elements;
                System.Collections.IEnumerable var15_filter_elements;
                IEnumerator var14_map_filter_elements;
                IEnumerator var16_map_filter_elements;
                public Enumerator(seq6_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ST", var1_const_), (new seq7_create_element()));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("B2", var1_const_), (new seq8_create_element(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 6:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("B2A", var1_const_), (new seq9_create_element(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 7:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N9", var1_const_), (new seq10_create_element(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 8:
                                state = 9;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("V1", var1_const_), (new seq11_cond_seq_(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 9:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopN1", var1_const_), (new seq12_create_element(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 12:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopN1", var1_const_), (new seq30_create_element(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 14:
                                state = 16;
                                var10_const_SplitString = ("SplitString");
                                var7_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var9_create_qname = (Altova.Functions.Core.CreateQName("Body", var7_const_http___schemas_xmlso));
                                var8_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var7_const_http___schemas_xmlso));
                                var5_create_qname = (Altova.Functions.Core.CreateQName("R4", var1_const_));
                                var4_create_qname = (Altova.Functions.Core.CreateQName("LoopR4", var1_const_));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("LoopN1", var1_const_));
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N1", var1_const_), (new seq48_create_element()))));
                                pos++;
                                return true;
                            case 16:
                                state = 17;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq49_create_element(closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 17:
                                state = 18;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq57_create_element(closure.var2_COSCOSI)))));
                                pos++;
                                return true;
                            case 18:
                                state = 19;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq58_create_element(closure.var2_COSCOSI)))));
                                pos++;
                                return true;
                            case 19:
                                state = 20;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq59_create_element(closure.var2_COSCOSI)))));
                                pos++;
                                return true;
                            case 20:
                                state = 21;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq60_create_element(closure.var2_COSCOSI)))));
                                pos++;
                                return true;
                            case 21:
                                state = 22;
                                var6_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var7_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var9_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var8_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var8_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var9_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var10_const_SplitString, "http://www.CityOcean.com/"), (new seq61_create_element(closure.var2_COSCOSI))))))), "ICP3EDIService", var10_const_SplitString, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SplitString"), "http://www.CityOcean.com/SplitString", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var1_const_, var1_const_, 0, var1_const_, var1_const_, 1))))))).GetEnumerator();
                                goto case 22;
                            case 22:
                                state = 26;
                                if (!var6_map_filter_elements.MoveNext()) { state = 23; goto case 23; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var1_const_), (Altova.Mapforce.IMFNode)(var6_map_filter_elements.Current))).GetEnumerator();
                                goto case 26;
                            case 23:
                                state = 36;
                                Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
                                var17_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var18_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var17_const_http___tempuri_org_C), closure.var2_COSCOSI));
                                var13_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var12_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SplitStringResponse", var13_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var9_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var8_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var8_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var9_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var10_const_SplitString, var13_const_http___www_CityOcean), (new seq61_create_element(closure.var2_COSCOSI))))))), "ICP3EDIService", var10_const_SplitString, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SplitString"), "http://www.CityOcean.com/SplitString", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var1_const_, var1_const_, 0, var1_const_, var1_const_, 1))))))).GetEnumerator();
                                goto case 36;
                            case 26:
                                state = 26;
                                if (!var11_map_filter_elements.MoveNext()) { state = 27; goto case 27; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current)));
                                goto case 26;
                            case 27:
                                state = 22;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 22;
                            case 36:
                                state = 44;
                                if (!var12_map_filter_elements.MoveNext()) { state = 37; goto case 37; }
                                var15_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SplitStringResult", var13_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var12_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var15_filter_elements))) { state = 36; goto case 36; }
                                var14_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var13_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var15_filter_elements))).GetEnumerator();
                                goto case 44;
                            case 37:
                                state = 55;
                                Altova.Mapforce.MFEnumerator.Dispose(var12_map_filter_elements); var12_map_filter_elements = null;
                                if (!(Altova.Functions.Core.Exists(var18_filter_elements))) { state = 67; goto case 67; }
                                var16_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Container", var17_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var18_filter_elements))).GetEnumerator();
                                goto case 55;
                            case 44:
                                state = 44;
                                if (!var14_map_filter_elements.MoveNext()) { state = 45; goto case 45; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("K1", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F61", var1_const_), (new seq62_if_if_exists((Altova.Mapforce.IMFNode)(var14_map_filter_elements.Current))))));
                                pos++;
                                return true;
                            case 45:
                                state = 36;
                                Altova.Mapforce.MFEnumerator.Dispose(var14_map_filter_elements); var14_map_filter_elements = null;
                                goto case 36;
                            case 55:
                                state = 55;
                                if (!var16_map_filter_elements.MoveNext()) { state = 56; goto case 56; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopLX", var1_const_), (new seq64_create_element((Altova.Mapforce.IMFNode)(var16_map_filter_elements.Current), closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 56:
                                state = 67;
                                Altova.Mapforce.MFEnumerator.Dispose(var16_map_filter_elements); var16_map_filter_elements = null;
                                goto case 67;
                            case 67:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SE", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F329", var1_const_), Altova.Functions.Core.Box("000001443"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var14_map_filter_elements); var14_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var12_map_filter_elements); var12_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var16_map_filter_elements); var16_map_filter_elements = null;
                }
            }

        }
        class seq7_create_element : IEnumerable
        {

            public seq7_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq7_create_element closure;
                string var1_const_;
                public Enumerator(seq7_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F143", var1_const_), Altova.Functions.Core.Box("304"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F329", var1_const_), Altova.Functions.Core.Box("000001443"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq8_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq8_create_element(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq8_create_element closure;
                string var10_const_;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                bool var7_exists;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var6_vmf1_inputtoresult;
                System.Collections.IEnumerable var13_filter_elements;
                IEnumerator var8_map_filter_elements;
                System.Collections.IEnumerable var9_filter_elements;
                IEnumerator var12_map_filter_elements;
                System.Collections.IEnumerable var11_vmf2_inputtoresult;
                System.Collections.IEnumerable var14_filter_elements;
                System.Collections.IEnumerable var15_vmf3_inputtoresult;
                public Enumerator(seq8_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var10_const_ = ("");
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                var7_exists = (Altova.Functions.Core.Exists(var4_filter_elements));
                                if (!(var7_exists)) { state = 6; goto case 6; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 28;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F140", var10_const_), Altova.Functions.Core.Box("COSU"));
                                pos++;
                                return true;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryTerm", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                var6_vmf1_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf.vmf1_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var6_vmf1_inputtoresult))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F375", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var6_vmf1_inputtoresult)));
                                pos++;
                                return true;
                            case 10:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 6;
                            case 28:
                                state = 33;
                                if (!(var7_exists)) { state = 0; return false; }
                                var13_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements)));
                                var8_map_filter_elements = (var13_filter_elements).GetEnumerator();
                                goto case 33;
                            case 33:
                                state = 33;
                                if (!var8_map_filter_elements.MoveNext()) { state = 34; goto case 34; }
                                var9_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PaymentTerm", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var9_filter_elements))) { state = 33; goto case 33; }
                                var11_vmf2_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf.vmf2_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var9_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var11_vmf2_inputtoresult))) { state = 33; goto case 33; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F146", var10_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var11_vmf2_inputtoresult)));
                                pos++;
                                return true;
                            case 34:
                                state = 50;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                var12_map_filter_elements = (var13_filter_elements).GetEnumerator();
                                goto case 50;
                            case 50:
                                state = 50;
                                if (!var12_map_filter_elements.MoveNext()) { state = 51; goto case 51; }
                                var14_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReleaseType", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var12_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var14_filter_elements))) { state = 50; goto case 50; }
                                var15_vmf3_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf.vmf3_inputtoresult.Create(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var14_filter_elements)))))))))));
                                if (!(Altova.Functions.Core.Exists(var15_vmf3_inputtoresult))) { state = 50; goto case 50; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F147", var10_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var15_vmf3_inputtoresult)));
                                pos++;
                                return true;
                            case 51:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var12_map_filter_elements); var12_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var12_map_filter_elements); var12_map_filter_elements = null;
                }
            }

        }
        class seq9_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq9_create_element(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq9_create_element closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var6_vmf4_inputtoresult;
                public Enumerator(seq9_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 6; goto case 6; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F346", ""), Altova.Functions.Core.Box("BL"));
                                pos++;
                                return true;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Flag", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                var6_vmf4_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf.vmf4_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var6_vmf4_inputtoresult))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F353", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var6_vmf4_inputtoresult)));
                                pos++;
                                return true;
                            case 10:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 6;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq10_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq10_create_element(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq10_create_element closure;
                string var5_const_;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                public Enumerator(seq10_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var5_const_ = ("");
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F128", var5_const_), Altova.Functions.Core.Box("BN"));
                                pos++;
                                return true;
                            case 5:
                                state = 10;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 10;
                            case 10:
                                state = 10;
                                if (!var2_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("BookingNo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 10; goto case 10; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F127", var5_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq11_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq11_cond_seq_(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq11_cond_seq_ closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var7_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                IEnumerator var6_map_filter_elements;
                System.Collections.IEnumerable var8_filter_elements;
                public Enumerator(seq11_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var7_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements)));
                                var2_map_filter_elements = (var7_filter_elements).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Vessel", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F182", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 20;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                var6_map_filter_elements = (var7_filter_elements).GetEnumerator();
                                goto case 20;
                            case 20:
                                state = 20;
                                if (!var6_map_filter_elements.MoveNext()) { state = 21; goto case 21; }
                                var8_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var6_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var8_filter_elements))) { state = 20; goto case 20; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F55", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var8_filter_elements))));
                                pos++;
                                return true;
                            case 21:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
                }
            }

        }
        class seq12_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq12_create_element(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq12_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var3_const_http___schemas_xmlso;
                Altova.Types.QName var5_create_qname;
                Altova.Types.QName var4_create_qname;
                IEnumerator var2_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                int var23_const_1;
                int var22_const_0;
                string var21_const_document;
                string var20_const_http___app_cityocean;
                string var19_const_http___www_CityOcean;
                Altova.Types.QName var18_const__http___www_CityOcea;
                string var17_const_ICP3EDIService;
                string var10_const_http___www_CityOcean;
                Altova.Types.QName var16_create_qname;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                IEnumerator var15_map_filter_elements;
                Altova.Mapforce.IMFNode var12_filter_elements;
                System.Collections.IEnumerable var13_filter_elements;
                IEnumerator var24_map_filter_elements;
                IEnumerator var25_map_filter_elements;
                System.Collections.IEnumerable var14_filter_elements;
                IEnumerator var26_map_filter_elements;
                IEnumerator var27_map_filter_elements;
                IEnumerator var28_map_filter_elements;
                public Enumerator(seq12_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N1", ""), (new seq13_create_element(closure.var1_COSCOSI)));
                                pos++;
                                return true;
                            case 7:
                                state = 10;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N2", ""), (new seq16_create_element(closure.var1_COSCOSI)));
                                pos++;
                                return true;
                            case 10:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N3", ""), (new seq19_create_element(closure.var1_COSCOSI)));
                                pos++;
                                return true;
                            case 12:
                                state = 14;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
                                var3_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var5_create_qname = (Altova.Functions.Core.CreateQName("Body", var3_const_http___schemas_xmlso));
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var3_const_http___schemas_xmlso));
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var3_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq22_cond_map_filter_elements(closure.var1_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 14;
                            case 14:
                                state = 18;
                                if (!var2_map_filter_elements.MoveNext()) { state = 15; goto case 15; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))).GetEnumerator();
                                goto case 18;
                            case 15:
                                state = 28;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                var23_const_1 = (1);
                                var22_const_0 = (0);
                                var21_const_document = ("document");
                                var20_const_http___app_cityocean = ("http://app.cityocean.com:83/ICP3EDIService.asmx");
                                var19_const_http___www_CityOcean = ("http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo");
                                var18_const__http___www_CityOcea = (Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"));
                                var17_const_ICP3EDIService = ("ICP3EDIService");
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var16_create_qname = (Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean));
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq22_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 28;
                            case 18:
                                state = 18;
                                if (!var8_map_filter_elements.MoveNext()) { state = 19; goto case 19; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 18;
                            case 19:
                                state = 14;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 14;
                            case 28:
                                state = 28;
                                if (!var9_map_filter_elements.MoveNext()) { state = 29; goto case 29; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 28; goto case 28; }
                                var12_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements));
                                var13_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var10_const_http___www_CityOcean), var12_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var13_filter_elements))) { state = 28; goto case 28; }
                                var14_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", var10_const_http___www_CityOcean), var12_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var14_filter_elements))) { state = 28; goto case 28; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.StringLength(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var13_filter_elements)), ","), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var14_filter_elements))))))) > (70m))) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N3", var7_const_), (new seq23_create_element((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 29:
                                state = 57;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                var15_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var3_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq24_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 57;
                            case 57:
                                state = 61;
                                if (!var15_map_filter_elements.MoveNext()) { state = 58; goto case 58; }
                                var24_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var15_map_filter_elements.Current))).GetEnumerator();
                                goto case 61;
                            case 58:
                                state = 71;
                                Altova.Mapforce.MFEnumerator.Dispose(var15_map_filter_elements); var15_map_filter_elements = null;
                                var25_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq24_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 71;
                            case 61:
                                state = 61;
                                if (!var24_map_filter_elements.MoveNext()) { state = 62; goto case 62; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_map_filter_elements.Current)));
                                goto case 61;
                            case 62:
                                state = 57;
                                Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                                goto case 57;
                            case 71:
                                state = 71;
                                if (!var25_map_filter_elements.MoveNext()) { state = 72; goto case 72; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current))))) { state = 71; goto case 71; }
                                if (!((bool)Altova.Functions.Core.First((new seq25_if_exists((Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current)))))) { state = 84; goto case 84; }
                                goto case 71;
                            case 72:
                                state = 88;
                                Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                                var26_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var3_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq27_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 88;
                            case 84:
                                state = 71;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("G61", var7_const_), (new seq26_create_element((Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 88:
                                state = 92;
                                if (!var26_map_filter_elements.MoveNext()) { state = 89; goto case 89; }
                                var27_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var26_map_filter_elements.Current))).GetEnumerator();
                                goto case 92;
                            case 89:
                                state = 102;
                                Altova.Mapforce.MFEnumerator.Dispose(var26_map_filter_elements); var26_map_filter_elements = null;
                                var28_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq27_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 102;
                            case 92:
                                state = 92;
                                if (!var27_map_filter_elements.MoveNext()) { state = 93; goto case 93; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var27_map_filter_elements.Current)));
                                goto case 92;
                            case 93:
                                state = 88;
                                Altova.Mapforce.MFEnumerator.Dispose(var27_map_filter_elements); var27_map_filter_elements = null;
                                goto case 88;
                            case 102:
                                state = 102;
                                if (!var28_map_filter_elements.MoveNext()) { state = 103; goto case 103; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var28_map_filter_elements.Current))))) { state = 102; goto case 102; }
                                if (!((bool)Altova.Functions.Core.First((new seq28_if_exists((Altova.Mapforce.IMFNode)(var28_map_filter_elements.Current)))))) { state = 115; goto case 115; }
                                goto case 102;
                            case 103:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var28_map_filter_elements); var28_map_filter_elements = null;
                                return false;
                            case 115:
                                state = 102;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("G61", var7_const_), (new seq29_create_element((Altova.Mapforce.IMFNode)(var28_map_filter_elements.Current))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var15_map_filter_elements); var15_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var27_map_filter_elements); var27_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var26_map_filter_elements); var26_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var28_map_filter_elements); var28_map_filter_elements = null;
                }
            }

        }
        class seq13_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq13_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq13_create_element closure;
                string var7_const_;
                string var6_const_SeparationCustomerNm;
                string var2_const_http___www_w3_org_20;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                public Enumerator(seq13_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_SeparationCustomerNm = ("SeparationCustomerNmae");
                                var2_const_http___www_w3_org_20 = ("http://www.w3.org/2003/05/soap-envelope");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___www_w3_org_20));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___www_w3_org_20));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F98_1", var7_const_), Altova.Functions.Core.Box("SH"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___www_w3_org_20), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_SeparationCustomerNm, "http://www.CityOcean.com/"), (new seq14_create_element(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_SeparationCustomerNm, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SeparationCustomerNmae"), "http://www.CityOcean.com/SeparationCustomerNmae", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 6;
                            case 6:
                                state = 10;
                                if (!var1_map_filter_elements.MoveNext()) { state = 7; goto case 7; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 10;
                            case 7:
                                state = 20;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeparationCustomerNmaeResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_SeparationCustomerNm, var10_const_http___www_CityOcean), (new seq14_create_element(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_SeparationCustomerNm, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SeparationCustomerNmae"), "http://www.CityOcean.com/SeparationCustomerNmae", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 20;
                            case 10:
                                state = 10;
                                if (!var8_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 10;
                            case 11:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 6;
                            case 20:
                                state = 20;
                                if (!var9_map_filter_elements.MoveNext()) { state = 21; goto case 21; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeparationCustomerNmaeResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name1", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 20; goto case 20; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var7_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
                                pos++;
                                return true;
                            case 21:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq14_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq14_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq14_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                public Enumerator(seq14_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq15_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq15_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("val", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq15_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq15_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq15_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq15_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq16_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq16_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq16_create_element closure;
                string var7_const_;
                string var6_const_SeparationCustomerNm;
                string var2_const_http___www_w3_org_20;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                public Enumerator(seq16_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_SeparationCustomerNm = ("SeparationCustomerNmae");
                                var2_const_http___www_w3_org_20 = ("http://www.w3.org/2003/05/soap-envelope");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___www_w3_org_20));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___www_w3_org_20));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___www_w3_org_20), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_SeparationCustomerNm, "http://www.CityOcean.com/"), (new seq17_create_element(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_SeparationCustomerNm, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SeparationCustomerNmae"), "http://www.CityOcean.com/SeparationCustomerNmae", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeparationCustomerNmaeResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_SeparationCustomerNm, var10_const_http___www_CityOcean), (new seq17_create_element(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_SeparationCustomerNm, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SeparationCustomerNmae"), "http://www.CityOcean.com/SeparationCustomerNmae", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeparationCustomerNmaeResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Nmae2", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var7_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq17_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq17_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq17_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                public Enumerator(seq17_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq18_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq18_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("val", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq18_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq18_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq18_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq18_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq19_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq19_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq19_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                int var23_const_1;
                int var22_const_0;
                string var21_const_document;
                string var20_const_http___app_cityocean;
                string var19_const_http___www_CityOcean;
                Altova.Types.QName var18_const__http___www_CityOcea;
                string var17_const_ICP3EDIService;
                string var10_const_http___www_CityOcean;
                Altova.Types.QName var16_create_qname;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                IEnumerator var15_map_filter_elements;
                Altova.Mapforce.IMFNode var12_filter_elements;
                System.Collections.IEnumerable var13_filter_elements;
                IEnumerator var24_map_filter_elements;
                IEnumerator var25_map_filter_elements;
                System.Collections.IEnumerable var14_filter_elements;
                System.Collections.IEnumerable var26_filter_elements;
                Altova.Mapforce.IMFNode var27_filter_elements;
                System.Collections.IEnumerable var28_filter_elements;
                System.Collections.IEnumerable var29_filter_elements;
                int var31_;
                string var30_concat;
                public Enumerator(seq19_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq20_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var23_const_1 = (1);
                                var22_const_0 = (0);
                                var21_const_document = ("document");
                                var20_const_http___app_cityocean = ("http://app.cityocean.com:83/ICP3EDIService.asmx");
                                var19_const_http___www_CityOcean = ("http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo");
                                var18_const__http___www_CityOcea = (Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"));
                                var17_const_ICP3EDIService = ("ICP3EDIService");
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var16_create_qname = (Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean));
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq20_cond_map_filter_elements(closure.var5_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                var12_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements));
                                var13_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var10_const_http___www_CityOcean), var12_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var13_filter_elements))) { state = 19; goto case 19; }
                                var14_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", var10_const_http___www_CityOcean), var12_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var14_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F166", var7_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var13_filter_elements)), ","), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var14_filter_elements))), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 20:
                                state = 42;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                var15_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq21_cond_map_filter_elements(closure.var5_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 42;
                            case 42:
                                state = 46;
                                if (!var15_map_filter_elements.MoveNext()) { state = 43; goto case 43; }
                                var24_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var15_map_filter_elements.Current))).GetEnumerator();
                                goto case 46;
                            case 43:
                                state = 56;
                                Altova.Mapforce.MFEnumerator.Dispose(var15_map_filter_elements); var15_map_filter_elements = null;
                                var25_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq21_cond_map_filter_elements(closure.var5_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 56;
                            case 46:
                                state = 46;
                                if (!var24_map_filter_elements.MoveNext()) { state = 47; goto case 47; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_map_filter_elements.Current)));
                                goto case 46;
                            case 47:
                                state = 42;
                                Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                                goto case 42;
                            case 56:
                                state = 56;
                                if (!var25_map_filter_elements.MoveNext()) { state = 57; goto case 57; }
                                var26_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var26_filter_elements))) { state = 56; goto case 56; }
                                var27_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var26_filter_elements));
                                var28_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var10_const_http___www_CityOcean), var27_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var28_filter_elements))) { state = 56; goto case 56; }
                                var29_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", var10_const_http___www_CityOcean), var27_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var29_filter_elements))) { state = 56; goto case 56; }
                                var31_ = (Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))));
                                var30_concat = (Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var28_filter_elements)), ","), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var29_filter_elements))));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F166", var7_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.Functions.Core.SubstringAfter(var30_concat, Altova.Functions.Lang.Left(var30_concat, var31_)), var31_)));
                                pos++;
                                return true;
                            case 57:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var15_map_filter_elements); var15_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                }
            }

        }
        class seq20_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq20_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq20_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq20_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq21_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq21_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq21_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq21_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq22_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq22_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq22_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq22_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq23_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq23_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq23_create_element closure;
                double var6_;
                Altova.Types.QName var4_create_qname;
                string var1_const_http___www_CityOcean;
                Altova.Mapforce.IMFNode var3_filter_elements;
                string var5_concat;
                public Enumerator(seq23_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var6_ = (Altova.CoreTypes.DecimalToDouble(35m));
                                var4_create_qname = (Altova.Functions.Core.CreateQName("F166", ""));
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var3_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements)));
                                var5_concat = (Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var1_const_http___www_CityOcean), var3_filter_elements))), ","), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", var1_const_http___www_CityOcean), var3_filter_elements)))));
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.Substring(var5_concat, Altova.CoreTypes.DecimalToDouble(71m), var6_)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.Substring(var5_concat, Altova.CoreTypes.DecimalToDouble(106m), var6_)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq24_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq24_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq24_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq24_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq25_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq25_if_exists(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq25_if_exists closure;
                string var1_const_http___www_CityOcean;
                System.Collections.IEnumerable var3_filter_elements;
                public Enumerator(seq25_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Tel", var1_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq26_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq26_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq26_create_element closure;
                string var3_const_;
                string var1_const_http___www_CityOcean;
                Altova.Mapforce.IMFNode var5_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                System.Collections.IEnumerable var4_filter_elements;
                public Enumerator(seq26_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_const_ = ("");
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var5_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements)));
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Tel", var1_const_http___www_CityOcean), var5_filter_elements));
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var1_const_http___www_CityOcean), var5_filter_elements));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var3_const_), Altova.Functions.Core.Box("IC"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var3_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements)), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var3_const_), Altova.Functions.Core.Box("TE"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq27_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq27_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq27_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq27_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq28_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq28_if_exists(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq28_if_exists closure;
                string var1_const_http___www_CityOcean;
                System.Collections.IEnumerable var3_filter_elements;
                public Enumerator(seq28_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fax", var1_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq29_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq29_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq29_create_element closure;
                string var3_const_;
                string var1_const_http___www_CityOcean;
                Altova.Mapforce.IMFNode var5_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                System.Collections.IEnumerable var4_filter_elements;
                public Enumerator(seq29_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_const_ = ("");
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var5_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements)));
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fax", var1_const_http___www_CityOcean), var5_filter_elements));
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var1_const_http___www_CityOcean), var5_filter_elements));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var3_const_), Altova.Functions.Core.Box("IC"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var3_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements)), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var3_const_), Altova.Functions.Core.Box("FX"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq30_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq30_create_element(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq30_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var3_const_http___schemas_xmlso;
                Altova.Types.QName var5_create_qname;
                Altova.Types.QName var4_create_qname;
                IEnumerator var2_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                int var23_const_1;
                int var22_const_0;
                string var21_const_document;
                string var20_const_http___app_cityocean;
                string var19_const_http___www_CityOcean;
                Altova.Types.QName var18_const__http___www_CityOcea;
                string var17_const_ICP3EDIService;
                string var10_const_http___www_CityOcean;
                Altova.Types.QName var16_create_qname;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                IEnumerator var15_map_filter_elements;
                Altova.Mapforce.IMFNode var12_filter_elements;
                System.Collections.IEnumerable var13_filter_elements;
                IEnumerator var24_map_filter_elements;
                IEnumerator var25_map_filter_elements;
                System.Collections.IEnumerable var14_filter_elements;
                IEnumerator var26_map_filter_elements;
                IEnumerator var27_map_filter_elements;
                IEnumerator var28_map_filter_elements;
                public Enumerator(seq30_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N1", ""), (new seq31_create_element(closure.var1_COSCOSI)));
                                pos++;
                                return true;
                            case 7:
                                state = 10;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N2", ""), (new seq34_create_element(closure.var1_COSCOSI)));
                                pos++;
                                return true;
                            case 10:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N3", ""), (new seq37_create_element(closure.var1_COSCOSI)));
                                pos++;
                                return true;
                            case 12:
                                state = 14;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
                                var3_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var5_create_qname = (Altova.Functions.Core.CreateQName("Body", var3_const_http___schemas_xmlso));
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var3_const_http___schemas_xmlso));
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var3_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq40_cond_map_filter_elements(closure.var1_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 14;
                            case 14:
                                state = 18;
                                if (!var2_map_filter_elements.MoveNext()) { state = 15; goto case 15; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))).GetEnumerator();
                                goto case 18;
                            case 15:
                                state = 28;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                var23_const_1 = (1);
                                var22_const_0 = (0);
                                var21_const_document = ("document");
                                var20_const_http___app_cityocean = ("http://app.cityocean.com:83/ICP3EDIService.asmx");
                                var19_const_http___www_CityOcean = ("http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo");
                                var18_const__http___www_CityOcea = (Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"));
                                var17_const_ICP3EDIService = ("ICP3EDIService");
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var16_create_qname = (Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean));
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq40_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 28;
                            case 18:
                                state = 18;
                                if (!var8_map_filter_elements.MoveNext()) { state = 19; goto case 19; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 18;
                            case 19:
                                state = 14;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 14;
                            case 28:
                                state = 28;
                                if (!var9_map_filter_elements.MoveNext()) { state = 29; goto case 29; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 28; goto case 28; }
                                var12_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements));
                                var13_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var10_const_http___www_CityOcean), var12_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var13_filter_elements))) { state = 28; goto case 28; }
                                var14_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", var10_const_http___www_CityOcean), var12_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var14_filter_elements))) { state = 28; goto case 28; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.StringLength(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var13_filter_elements)), ","), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var14_filter_elements))))))) > (70m))) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N3", var7_const_), (new seq41_create_element((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 29:
                                state = 57;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                var15_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var3_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq42_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 57;
                            case 57:
                                state = 61;
                                if (!var15_map_filter_elements.MoveNext()) { state = 58; goto case 58; }
                                var24_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var15_map_filter_elements.Current))).GetEnumerator();
                                goto case 61;
                            case 58:
                                state = 71;
                                Altova.Mapforce.MFEnumerator.Dispose(var15_map_filter_elements); var15_map_filter_elements = null;
                                var25_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq42_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 71;
                            case 61:
                                state = 61;
                                if (!var24_map_filter_elements.MoveNext()) { state = 62; goto case 62; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_map_filter_elements.Current)));
                                goto case 61;
                            case 62:
                                state = 57;
                                Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                                goto case 57;
                            case 71:
                                state = 71;
                                if (!var25_map_filter_elements.MoveNext()) { state = 72; goto case 72; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current))))) { state = 71; goto case 71; }
                                if (!((bool)Altova.Functions.Core.First((new seq43_if_exists((Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current)))))) { state = 84; goto case 84; }
                                goto case 71;
                            case 72:
                                state = 88;
                                Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                                var26_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var3_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq45_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 88;
                            case 84:
                                state = 71;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("G61", var7_const_), (new seq44_create_element((Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 88:
                                state = 92;
                                if (!var26_map_filter_elements.MoveNext()) { state = 89; goto case 89; }
                                var27_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var26_map_filter_elements.Current))).GetEnumerator();
                                goto case 92;
                            case 89:
                                state = 102;
                                Altova.Mapforce.MFEnumerator.Dispose(var26_map_filter_elements); var26_map_filter_elements = null;
                                var28_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq45_cond_map_filter_elements(closure.var1_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 102;
                            case 92:
                                state = 92;
                                if (!var27_map_filter_elements.MoveNext()) { state = 93; goto case 93; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var27_map_filter_elements.Current)));
                                goto case 92;
                            case 93:
                                state = 88;
                                Altova.Mapforce.MFEnumerator.Dispose(var27_map_filter_elements); var27_map_filter_elements = null;
                                goto case 88;
                            case 102:
                                state = 102;
                                if (!var28_map_filter_elements.MoveNext()) { state = 103; goto case 103; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var28_map_filter_elements.Current))))) { state = 102; goto case 102; }
                                if (!((bool)Altova.Functions.Core.First((new seq46_if_exists((Altova.Mapforce.IMFNode)(var28_map_filter_elements.Current)))))) { state = 115; goto case 115; }
                                goto case 102;
                            case 103:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var28_map_filter_elements); var28_map_filter_elements = null;
                                return false;
                            case 115:
                                state = 102;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("G61", var7_const_), (new seq47_create_element((Altova.Mapforce.IMFNode)(var28_map_filter_elements.Current))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var15_map_filter_elements); var15_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var27_map_filter_elements); var27_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var26_map_filter_elements); var26_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var28_map_filter_elements); var28_map_filter_elements = null;
                }
            }

        }
        class seq31_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq31_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq31_create_element closure;
                string var7_const_;
                string var6_const_SeparationCustomerNm;
                string var2_const_http___www_w3_org_20;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                public Enumerator(seq31_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_SeparationCustomerNm = ("SeparationCustomerNmae");
                                var2_const_http___www_w3_org_20 = ("http://www.w3.org/2003/05/soap-envelope");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___www_w3_org_20));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___www_w3_org_20));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F98_1", var7_const_), Altova.Functions.Core.Box("CN"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___www_w3_org_20), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_SeparationCustomerNm, "http://www.CityOcean.com/"), (new seq32_create_element(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_SeparationCustomerNm, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SeparationCustomerNmae"), "http://www.CityOcean.com/SeparationCustomerNmae", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 6;
                            case 6:
                                state = 10;
                                if (!var1_map_filter_elements.MoveNext()) { state = 7; goto case 7; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 10;
                            case 7:
                                state = 20;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeparationCustomerNmaeResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_SeparationCustomerNm, var10_const_http___www_CityOcean), (new seq32_create_element(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_SeparationCustomerNm, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SeparationCustomerNmae"), "http://www.CityOcean.com/SeparationCustomerNmae", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 20;
                            case 10:
                                state = 10;
                                if (!var8_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 10;
                            case 11:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 6;
                            case 20:
                                state = 20;
                                if (!var9_map_filter_elements.MoveNext()) { state = 21; goto case 21; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeparationCustomerNmaeResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name1", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 20; goto case 20; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var7_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
                                pos++;
                                return true;
                            case 21:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq32_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq32_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq32_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                public Enumerator(seq32_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq33_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq33_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("val", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq33_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq33_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq33_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq33_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq34_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq34_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq34_create_element closure;
                string var7_const_;
                string var6_const_SeparationCustomerNm;
                string var2_const_http___www_w3_org_20;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                public Enumerator(seq34_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_SeparationCustomerNm = ("SeparationCustomerNmae");
                                var2_const_http___www_w3_org_20 = ("http://www.w3.org/2003/05/soap-envelope");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___www_w3_org_20));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___www_w3_org_20));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___www_w3_org_20), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_SeparationCustomerNm, "http://www.CityOcean.com/"), (new seq35_create_element(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_SeparationCustomerNm, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SeparationCustomerNmae"), "http://www.CityOcean.com/SeparationCustomerNmae", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeparationCustomerNmaeResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_SeparationCustomerNm, var10_const_http___www_CityOcean), (new seq35_create_element(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_SeparationCustomerNm, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SeparationCustomerNmae"), "http://www.CityOcean.com/SeparationCustomerNmae", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 2))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SeparationCustomerNmaeResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Nmae2", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var7_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq35_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq35_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq35_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                public Enumerator(seq35_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq36_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq36_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("val", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq36_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq36_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq36_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq36_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq37_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_COSCOSI;

            public seq37_create_element(
                Altova.Mapforce.IMFNode var5_COSCOSI
                )
            {
                this.var5_COSCOSI = var5_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq37_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToC;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                int var23_const_1;
                int var22_const_0;
                string var21_const_document;
                string var20_const_http___app_cityocean;
                string var19_const_http___www_CityOcean;
                Altova.Types.QName var18_const__http___www_CityOcea;
                string var17_const_ICP3EDIService;
                string var10_const_http___www_CityOcean;
                Altova.Types.QName var16_create_qname;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var11_filter_elements;
                IEnumerator var15_map_filter_elements;
                Altova.Mapforce.IMFNode var12_filter_elements;
                System.Collections.IEnumerable var13_filter_elements;
                IEnumerator var24_map_filter_elements;
                IEnumerator var25_map_filter_elements;
                System.Collections.IEnumerable var14_filter_elements;
                System.Collections.IEnumerable var26_filter_elements;
                Altova.Mapforce.IMFNode var27_filter_elements;
                System.Collections.IEnumerable var28_filter_elements;
                System.Collections.IEnumerable var29_filter_elements;
                int var31_;
                string var30_concat;
                public Enumerator(seq37_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq38_cond_map_filter_elements(closure.var5_COSCOSI))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var23_const_1 = (1);
                                var22_const_0 = (0);
                                var21_const_document = ("document");
                                var20_const_http___app_cityocean = ("http://app.cityocean.com:83/ICP3EDIService.asmx");
                                var19_const_http___www_CityOcean = ("http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo");
                                var18_const__http___www_CityOcea = (Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"));
                                var17_const_ICP3EDIService = ("ICP3EDIService");
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var16_create_qname = (Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean));
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq38_cond_map_filter_elements(closure.var5_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19; }
                                var12_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements));
                                var13_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var10_const_http___www_CityOcean), var12_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var13_filter_elements))) { state = 19; goto case 19; }
                                var14_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", var10_const_http___www_CityOcean), var12_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var14_filter_elements))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F166", var7_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var13_filter_elements)), ","), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var14_filter_elements))), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 20:
                                state = 42;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                var15_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq39_cond_map_filter_elements(closure.var5_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 42;
                            case 42:
                                state = 46;
                                if (!var15_map_filter_elements.MoveNext()) { state = 43; goto case 43; }
                                var24_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var15_map_filter_elements.Current))).GetEnumerator();
                                goto case 46;
                            case 43:
                                state = 56;
                                Altova.Mapforce.MFEnumerator.Dispose(var15_map_filter_elements); var15_map_filter_elements = null;
                                var25_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var16_create_qname, (new seq39_cond_map_filter_elements(closure.var5_COSCOSI))))))), var17_const_ICP3EDIService, var6_const_ICP3ParseCustomerToC, var18_const__http___www_CityOcea, var19_const_http___www_CityOcean, var20_const_http___app_cityocean, var21_const_document, var7_const_, var7_const_, var22_const_0, var7_const_, var7_const_, var23_const_1))))))).GetEnumerator();
                                goto case 56;
                            case 46:
                                state = 46;
                                if (!var24_map_filter_elements.MoveNext()) { state = 47; goto case 47; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var24_map_filter_elements.Current)));
                                goto case 46;
                            case 47:
                                state = 42;
                                Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                                goto case 42;
                            case 56:
                                state = 56;
                                if (!var25_map_filter_elements.MoveNext()) { state = 57; goto case 57; }
                                var26_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var26_filter_elements))) { state = 56; goto case 56; }
                                var27_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var26_filter_elements));
                                var28_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var10_const_http___www_CityOcean), var27_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var28_filter_elements))) { state = 56; goto case 56; }
                                var29_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", var10_const_http___www_CityOcean), var27_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var29_filter_elements))) { state = 56; goto case 56; }
                                var31_ = (Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))));
                                var30_concat = (Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var28_filter_elements)), ","), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var29_filter_elements))));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F166", var7_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.Functions.Core.SubstringAfter(var30_concat, Altova.Functions.Lang.Left(var30_concat, var31_)), var31_)));
                                pos++;
                                return true;
                            case 57:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var15_map_filter_elements); var15_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                }
            }

        }
        class seq38_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq38_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq38_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq38_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq39_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq39_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq39_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq39_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq40_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq40_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq40_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq40_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq41_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq41_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq41_create_element closure;
                double var6_;
                Altova.Types.QName var4_create_qname;
                string var1_const_http___www_CityOcean;
                Altova.Mapforce.IMFNode var3_filter_elements;
                string var5_concat;
                public Enumerator(seq41_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var6_ = (Altova.CoreTypes.DecimalToDouble(35m));
                                var4_create_qname = (Altova.Functions.Core.CreateQName("F166", ""));
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var3_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements)));
                                var5_concat = (Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var1_const_http___www_CityOcean), var3_filter_elements))), ","), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Country", var1_const_http___www_CityOcean), var3_filter_elements)))));
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.Substring(var5_concat, Altova.CoreTypes.DecimalToDouble(71m), var6_)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.Substring(var5_concat, Altova.CoreTypes.DecimalToDouble(106m), var6_)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq42_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq42_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq42_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq42_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq43_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq43_if_exists(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq43_if_exists closure;
                string var1_const_http___www_CityOcean;
                System.Collections.IEnumerable var3_filter_elements;
                public Enumerator(seq43_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Tel", var1_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq44_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq44_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq44_create_element closure;
                string var3_const_;
                string var1_const_http___www_CityOcean;
                Altova.Mapforce.IMFNode var5_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                System.Collections.IEnumerable var4_filter_elements;
                public Enumerator(seq44_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_const_ = ("");
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var5_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements)));
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Tel", var1_const_http___www_CityOcean), var5_filter_elements));
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var1_const_http___www_CityOcean), var5_filter_elements));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var3_const_), Altova.Functions.Core.Box("IC"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var3_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements)), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var3_const_), Altova.Functions.Core.Box("TE"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq45_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq45_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq45_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq45_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq46_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq46_if_exists(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq46_if_exists closure;
                string var1_const_http___www_CityOcean;
                System.Collections.IEnumerable var3_filter_elements;
                public Enumerator(seq46_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fax", var1_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq47_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq47_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq47_create_element closure;
                string var3_const_;
                string var1_const_http___www_CityOcean;
                Altova.Mapforce.IMFNode var5_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                System.Collections.IEnumerable var4_filter_elements;
                public Enumerator(seq47_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_const_ = ("");
                                var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var5_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements)));
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fax", var1_const_http___www_CityOcean), var5_filter_elements));
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var1_const_http___www_CityOcean), var5_filter_elements));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var3_const_), Altova.Functions.Core.Box("IC"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var3_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements)), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var3_const_), Altova.Functions.Core.Box("FX"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq48_create_element : IEnumerable
        {

            public seq48_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq48_create_element closure;
                string var1_const_;
                public Enumerator(seq48_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F98_1", var1_const_), Altova.Functions.Core.Box("N1"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var1_const_), Altova.Functions.Core.Box("SAME AS CONSIGNEE"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq49_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq49_create_element(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq49_create_element closure;
                string var5_const_;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var7_filter_elements;
                IEnumerator var2_map_filter_elements;
                IEnumerator var6_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                public Enumerator(seq49_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var5_const_ = ("");
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N1", var5_const_), (new seq50_create_element(closure.var1_COSCOSI)));
                                pos++;
                                return true;
                            case 5:
                                state = 10;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var7_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements)));
                                var2_map_filter_elements = (var7_filter_elements).GetEnumerator();
                                goto case 10;
                            case 10:
                                state = 10;
                                if (!var2_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
                                if (!((bool)Altova.Functions.Core.First((new seq51_if_exists((Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)))))) { state = 19; goto case 19; }
                                goto case 10;
                            case 11:
                                state = 21;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                var6_map_filter_elements = (var7_filter_elements).GetEnumerator();
                                goto case 21;
                            case 19:
                                state = 10;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("G61", var5_const_), (new seq52_create_element((Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 21:
                                state = 21;
                                if (!var6_map_filter_elements.MoveNext()) { state = 22; goto case 22; }
                                if (!((bool)Altova.Functions.Core.First((new seq53_if_exists((Altova.Mapforce.IMFNode)(var6_map_filter_elements.Current)))))) { state = 30; goto case 30; }
                                goto case 21;
                            case 22:
                                state = 32;
                                Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
                                var8_map_filter_elements = (var7_filter_elements).GetEnumerator();
                                goto case 32;
                            case 30:
                                state = 21;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("G61", var5_const_), (new seq54_create_element((Altova.Mapforce.IMFNode)(var6_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 32:
                                state = 32;
                                if (!var8_map_filter_elements.MoveNext()) { state = 33; goto case 33; }
                                if (!((bool)Altova.Functions.Core.First((new seq55_if_exists((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)))))) { state = 41; goto case 41; }
                                goto case 32;
                            case 33:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                return false;
                            case 41:
                                state = 32;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("G61", var5_const_), (new seq56_create_element((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                }
            }

        }
        class seq50_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq50_create_element(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq50_create_element closure;
                string var5_const_;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                public Enumerator(seq50_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var5_const_ = ("");
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F98_1", var5_const_), Altova.Functions.Core.Box("41"));
                                pos++;
                                return true;
                            case 5:
                                state = 10;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 7; goto case 7; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 10;
                            case 7:
                                state = 23;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F66", var5_const_), Altova.Functions.Core.Box("25"));
                                pos++;
                                return true;
                            case 10:
                                state = 10;
                                if (!var2_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByName", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 10; goto case 10; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var5_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements)), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 11:
                                state = 7;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 7;
                            case 23:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F67", var5_const_), Altova.Functions.Core.Box("CITYOCEAN"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq51_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq51_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq51_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq51_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByTel", "http://tempuri.org/COSCOSI.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq52_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq52_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq52_create_element closure;
                string var4_const_http___tempuri_org_C;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq52_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByTel", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByName", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var2_const_), Altova.Functions.Core.Box("IC"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements)), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var2_const_), Altova.Functions.Core.Box("TE"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq53_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq53_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq53_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq53_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByFax", "http://tempuri.org/COSCOSI.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq54_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq54_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq54_create_element closure;
                string var4_const_http___tempuri_org_C;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq54_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByFax", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByName", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var2_const_), Altova.Functions.Core.Box("IC"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements)), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var2_const_), Altova.Functions.Core.Box("FX"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq55_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq55_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq55_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq55_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByEMail", "http://tempuri.org/COSCOSI.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq56_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq56_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq56_create_element closure;
                string var4_const_http___tempuri_org_C;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq56_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByEMail", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByName", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var2_const_), Altova.Functions.Core.Box("IC"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements)), Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var2_const_), Altova.Functions.Core.Box("EM"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements)), ";zhangbiao@cityocean.com")));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq57_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_COSCOSI;

            public seq57_create_element(
                Altova.Mapforce.IMFNode var2_COSCOSI
                )
            {
                this.var2_COSCOSI = var2_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq57_create_element closure;
                string var4_const_http___tempuri_org_C;
                System.Collections.IEnumerable var5_filter_elements;
                string var1_const_;
                System.Collections.IEnumerable var8_filter_elements;
                IEnumerator var3_map_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                IEnumerator var7_map_filter_elements;
                System.Collections.IEnumerable var9_filter_elements;
                public Enumerator(seq57_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var4_const_http___tempuri_org_C), closure.var2_COSCOSI));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F115", var1_const_), Altova.Functions.Core.Box("R"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F309", var1_const_), Altova.Functions.Core.Box("UN"));
                                pos++;
                                return true;
                            case 6:
                                state = 11;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                var8_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements)));
                                var3_map_filter_elements = (var8_filter_elements).GetEnumerator();
                                goto case 11;
                            case 11:
                                state = 11;
                                if (!var3_map_filter_elements.MoveNext()) { state = 12; goto case 12; }
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocCode", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var3_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F310", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                            case 12:
                                state = 22;
                                Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                                var7_map_filter_elements = (var8_filter_elements).GetEnumerator();
                                goto case 22;
                            case 22:
                                state = 22;
                                if (!var7_map_filter_elements.MoveNext()) { state = 23; goto case 23; }
                                var9_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var7_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var9_filter_elements))) { state = 22; goto case 22; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F114", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var9_filter_elements))));
                                pos++;
                                return true;
                            case 23:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                }
            }

        }
        class seq58_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_COSCOSI;

            public seq58_create_element(
                Altova.Mapforce.IMFNode var2_COSCOSI
                )
            {
                this.var2_COSCOSI = var2_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq58_create_element closure;
                string var4_const_http___tempuri_org_C;
                System.Collections.IEnumerable var5_filter_elements;
                string var1_const_;
                System.Collections.IEnumerable var8_filter_elements;
                IEnumerator var3_map_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                IEnumerator var7_map_filter_elements;
                System.Collections.IEnumerable var9_filter_elements;
                public Enumerator(seq58_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var4_const_http___tempuri_org_C), closure.var2_COSCOSI));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F115", var1_const_), Altova.Functions.Core.Box("L"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F309", var1_const_), Altova.Functions.Core.Box("UN"));
                                pos++;
                                return true;
                            case 6:
                                state = 11;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                var8_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements)));
                                var3_map_filter_elements = (var8_filter_elements).GetEnumerator();
                                goto case 11;
                            case 11:
                                state = 11;
                                if (!var3_map_filter_elements.MoveNext()) { state = 12; goto case 12; }
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolCode", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var3_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F310", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                            case 12:
                                state = 22;
                                Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                                var7_map_filter_elements = (var8_filter_elements).GetEnumerator();
                                goto case 22;
                            case 22:
                                state = 22;
                                if (!var7_map_filter_elements.MoveNext()) { state = 23; goto case 23; }
                                var9_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolName", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var7_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var9_filter_elements))) { state = 22; goto case 22; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F114", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var9_filter_elements))));
                                pos++;
                                return true;
                            case 23:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                }
            }

        }
        class seq59_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_COSCOSI;

            public seq59_create_element(
                Altova.Mapforce.IMFNode var2_COSCOSI
                )
            {
                this.var2_COSCOSI = var2_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq59_create_element closure;
                string var4_const_http___tempuri_org_C;
                System.Collections.IEnumerable var5_filter_elements;
                string var1_const_;
                System.Collections.IEnumerable var8_filter_elements;
                IEnumerator var3_map_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                IEnumerator var7_map_filter_elements;
                System.Collections.IEnumerable var9_filter_elements;
                public Enumerator(seq59_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var4_const_http___tempuri_org_C), closure.var2_COSCOSI));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F115", var1_const_), Altova.Functions.Core.Box("D"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F309", var1_const_), Altova.Functions.Core.Box("UN"));
                                pos++;
                                return true;
                            case 6:
                                state = 11;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                var8_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements)));
                                var3_map_filter_elements = (var8_filter_elements).GetEnumerator();
                                goto case 11;
                            case 11:
                                state = 11;
                                if (!var3_map_filter_elements.MoveNext()) { state = 12; goto case 12; }
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodCode", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var3_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F310", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                            case 12:
                                state = 22;
                                Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                                var7_map_filter_elements = (var8_filter_elements).GetEnumerator();
                                goto case 22;
                            case 22:
                                state = 22;
                                if (!var7_map_filter_elements.MoveNext()) { state = 23; goto case 23; }
                                var9_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodName", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var7_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var9_filter_elements))) { state = 22; goto case 22; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F114", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var9_filter_elements))));
                                pos++;
                                return true;
                            case 23:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                }
            }

        }
        class seq60_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_COSCOSI;

            public seq60_create_element(
                Altova.Mapforce.IMFNode var2_COSCOSI
                )
            {
                this.var2_COSCOSI = var2_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq60_create_element closure;
                string var4_const_http___tempuri_org_C;
                System.Collections.IEnumerable var5_filter_elements;
                string var1_const_;
                System.Collections.IEnumerable var8_filter_elements;
                IEnumerator var3_map_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                IEnumerator var7_map_filter_elements;
                System.Collections.IEnumerable var9_filter_elements;
                public Enumerator(seq60_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var4_const_http___tempuri_org_C), closure.var2_COSCOSI));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F115", var1_const_), Altova.Functions.Core.Box("E"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F309", var1_const_), Altova.Functions.Core.Box("UN"));
                                pos++;
                                return true;
                            case 6:
                                state = 11;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                var8_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements)));
                                var3_map_filter_elements = (var8_filter_elements).GetEnumerator();
                                goto case 11;
                            case 11:
                                state = 11;
                                if (!var3_map_filter_elements.MoveNext()) { state = 12; goto case 12; }
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryCode", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var3_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F310", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))));
                                pos++;
                                return true;
                            case 12:
                                state = 22;
                                Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                                var7_map_filter_elements = (var8_filter_elements).GetEnumerator();
                                goto case 22;
                            case 22:
                                state = 22;
                                if (!var7_map_filter_elements.MoveNext()) { state = 23; goto case 23; }
                                var9_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryName", var4_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var7_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var9_filter_elements))) { state = 22; goto case 22; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F114", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var9_filter_elements))));
                                pos++;
                                return true;
                            case 23:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                }
            }

        }
        class seq61_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_COSCOSI;

            public seq61_create_element(
                Altova.Mapforce.IMFNode var1_COSCOSI
                )
            {
                this.var1_COSCOSI = var1_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq61_create_element closure;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq61_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var1_COSCOSI));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 6; goto case 6; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(30m))))))));
                                pos++;
                                return true;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Remark", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("val", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 6;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq62_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq62_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq62_if_if_exists closure;
                public Enumerator(seq62_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq63_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq63_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq63_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq63_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq63_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq64_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;
            Altova.Mapforce.IMFNode var3_COSCOSI;

            public seq64_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements,
                Altova.Mapforce.IMFNode var3_COSCOSI
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
                this.var3_COSCOSI = var3_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq64_create_element closure;
                string var2_const_;
                public Enumerator(seq64_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LX", var2_const_), (new seq65_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Y2", var2_const_), (new seq66_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopN7", var2_const_), (new seq67_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopL0", var2_const_), (new seq72_create_element(closure.var1_cur_filter_elements, closure.var3_COSCOSI)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq65_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq65_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq65_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq65_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NUM", "http://tempuri.org/COSCOSI.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F554", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq66_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq66_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq66_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var1_const_;
                public Enumerator(seq66_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContainerTypeISOCode", "http://tempuri.org/COSCOSI.xsd"), closure.var2_cur_filter_elements));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F95", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F56", var1_const_), Altova.Functions.Core.Box("HH"));
                                pos++;
                                return true;
                            case 6:
                                state = 8;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 8; goto case 8; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F24", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
                                pos++;
                                return true;
                            case 8:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F91", var1_const_), Altova.Functions.Core.Box("S"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq67_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq67_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq67_create_element closure;
                string var2_const_;
                public Enumerator(seq67_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N7", var2_const_), (new seq68_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("QTY", var2_const_), (new seq69_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("M7", var2_const_), (new seq71_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq68_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq68_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq68_create_element closure;
                string var4_const_http___tempuri_org_C;
                System.Collections.IEnumerable var7_filter_elements;
                System.Collections.IEnumerable var6_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                string var3_cast;
                string var2_const_;
                public Enumerator(seq68_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var7_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContainerTypeISOCode", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var3_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("No", var4_const_http___tempuri_org_C), closure.var1_cur_filter_elements))));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F206", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Lang.Left(var3_cast, Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(4m))))));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F207", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.Substring(var3_cast, Altova.CoreTypes.DecimalToDouble(5m), Altova.CoreTypes.DecimalToDouble(6m))));
                                pos++;
                                return true;
                            case 6:
                                state = 8;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 8; goto case 8; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F81", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))))));
                                pos++;
                                return true;
                            case 8:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F187", var2_const_), Altova.Functions.Core.Box("G"));
                                pos++;
                                return true;
                            case 14:
                                state = 16;
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 16; goto case 16; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F183", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))))));
                                pos++;
                                return true;
                            case 16:
                                state = 22;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F184", var2_const_), Altova.Functions.Core.Box("X"));
                                pos++;
                                return true;
                            case 22:
                                state = 23;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F188", var2_const_), Altova.Functions.Core.Box("K"));
                                pos++;
                                return true;
                            case 23:
                                state = 24;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F761", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.Functions.Lang.Right(var3_cast, Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(1m))))))));
                                pos++;
                                return true;
                            case 24:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var7_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F24", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var7_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq69_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq69_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq69_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq69_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", "http://tempuri.org/COSCOSI.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F673", var2_const_), Altova.Functions.Core.Box("39"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F380", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C001", var2_const_), (new seq70_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq70_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq70_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq70_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq70_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", "http://tempuri.org/COSCOSI.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F355_1", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq71_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq71_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq71_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq71_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SealNo", "http://tempuri.org/COSCOSI.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq72_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;
            Altova.Mapforce.IMFNode var2_COSCOSI;

            public seq72_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements,
                Altova.Mapforce.IMFNode var2_COSCOSI
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
                this.var2_COSCOSI = var2_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq72_create_element closure;
                string var8_const_;
                string var7_const_SplitString;
                string var4_const_http___schemas_xmlso;
                Altova.Types.QName var6_create_qname;
                Altova.Types.QName var5_create_qname;
                IEnumerator var3_map_filter_elements;
                IEnumerator var9_map_filter_elements;
                int var22_const_1;
                int var21_const_0;
                string var20_const_document;
                string var19_const_http___app_cityocean;
                string var18_const_http___www_CityOcean;
                Altova.Types.QName var17_const__http___www_CityOcea;
                string var16_const_ICP3EDIService;
                string var11_const_http___www_CityOcean;
                Altova.Types.QName var15_create_qname;
                IEnumerator var10_map_filter_elements;
                System.Collections.IEnumerable var13_filter_elements;
                IEnumerator var14_map_filter_elements;
                IEnumerator var12_map_filter_elements;
                IEnumerator var23_map_filter_elements;
                IEnumerator var24_map_filter_elements;
                System.Collections.IEnumerable var26_filter_elements;
                IEnumerator var25_map_filter_elements;
                public Enumerator(seq72_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("L0", ""), (new seq73_create_element(closure.var1_cur_filter_elements, closure.var2_COSCOSI)));
                                pos++;
                                return true;
                            case 6:
                                state = 8;
                                var8_const_ = ("");
                                var7_const_SplitString = ("SplitString");
                                var4_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var6_create_qname = (Altova.Functions.Core.CreateQName("Body", var4_const_http___schemas_xmlso));
                                var5_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var4_const_http___schemas_xmlso));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("QTY", var8_const_), (new seq69_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 8:
                                state = 9;
                                var3_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var4_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var6_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var7_const_SplitString, "http://www.CityOcean.com/"), (new seq74_create_element(closure.var2_COSCOSI))))))), "ICP3EDIService", var7_const_SplitString, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SplitString"), "http://www.CityOcean.com/SplitString", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var8_const_, var8_const_, 0, var8_const_, var8_const_, 1))))))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 13;
                                if (!var3_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var8_const_), (Altova.Mapforce.IMFNode)(var3_map_filter_elements.Current))).GetEnumerator();
                                goto case 13;
                            case 10:
                                state = 23;
                                Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                                var22_const_1 = (1);
                                var21_const_0 = (0);
                                var20_const_document = ("document");
                                var19_const_http___app_cityocean = ("http://app.cityocean.com:83/ICP3EDIService.asmx");
                                var18_const_http___www_CityOcean = ("http://www.CityOcean.com/SplitString");
                                var17_const__http___www_CityOcea = (Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}SplitString"));
                                var16_const_ICP3EDIService = ("ICP3EDIService");
                                var11_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var15_create_qname = (Altova.Functions.Core.CreateQName(var7_const_SplitString, var11_const_http___www_CityOcean));
                                var10_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SplitStringResponse", var11_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var6_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var15_create_qname, (new seq74_create_element(closure.var2_COSCOSI))))))), var16_const_ICP3EDIService, var7_const_SplitString, var17_const__http___www_CityOcea, var18_const_http___www_CityOcean, var19_const_http___app_cityocean, var20_const_document, var8_const_, var8_const_, var21_const_0, var8_const_, var8_const_, var22_const_1))))))).GetEnumerator();
                                goto case 23;
                            case 13:
                                state = 13;
                                if (!var9_map_filter_elements.MoveNext()) { state = 14; goto case 14; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                goto case 13;
                            case 14:
                                state = 9;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                goto case 9;
                            case 23:
                                state = 31;
                                if (!var10_map_filter_elements.MoveNext()) { state = 24; goto case 24; }
                                var13_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SplitStringResult", var11_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var10_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var13_filter_elements))) { state = 23; goto case 23; }
                                var12_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var11_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var13_filter_elements))).GetEnumerator();
                                goto case 31;
                            case 24:
                                state = 38;
                                Altova.Mapforce.MFEnumerator.Dispose(var10_map_filter_elements); var10_map_filter_elements = null;
                                var14_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var4_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var6_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var15_create_qname, (new seq78_create_element(closure.var2_COSCOSI))))))), var16_const_ICP3EDIService, var7_const_SplitString, var17_const__http___www_CityOcea, var18_const_http___www_CityOcean, var19_const_http___app_cityocean, var20_const_document, var8_const_, var8_const_, var21_const_0, var8_const_, var8_const_, var22_const_1))))))).GetEnumerator();
                                goto case 38;
                            case 31:
                                state = 31;
                                if (!var12_map_filter_elements.MoveNext()) { state = 32; goto case 32; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("L5", var8_const_), (new seq75_create_element((Altova.Mapforce.IMFNode)(var12_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 32:
                                state = 23;
                                Altova.Mapforce.MFEnumerator.Dispose(var12_map_filter_elements); var12_map_filter_elements = null;
                                goto case 23;
                            case 38:
                                state = 42;
                                if (!var14_map_filter_elements.MoveNext()) { state = 39; goto case 39; }
                                var23_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var8_const_), (Altova.Mapforce.IMFNode)(var14_map_filter_elements.Current))).GetEnumerator();
                                goto case 42;
                            case 39:
                                state = 52;
                                Altova.Mapforce.MFEnumerator.Dispose(var14_map_filter_elements); var14_map_filter_elements = null;
                                var24_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SplitStringResponse", var11_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var6_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var15_create_qname, (new seq78_create_element(closure.var2_COSCOSI))))))), var16_const_ICP3EDIService, var7_const_SplitString, var17_const__http___www_CityOcea, var18_const_http___www_CityOcean, var19_const_http___app_cityocean, var20_const_document, var8_const_, var8_const_, var21_const_0, var8_const_, var8_const_, var22_const_1))))))).GetEnumerator();
                                goto case 52;
                            case 42:
                                state = 42;
                                if (!var23_map_filter_elements.MoveNext()) { state = 43; goto case 43; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var23_map_filter_elements.Current)));
                                goto case 42;
                            case 43:
                                state = 38;
                                Altova.Mapforce.MFEnumerator.Dispose(var23_map_filter_elements); var23_map_filter_elements = null;
                                goto case 38;
                            case 52:
                                state = 60;
                                if (!var24_map_filter_elements.MoveNext()) { state = 53; goto case 53; }
                                var26_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SplitStringResult", var11_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var24_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var26_filter_elements))) { state = 52; goto case 52; }
                                var25_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var11_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var26_filter_elements))).GetEnumerator();
                                goto case 60;
                            case 53:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                                return false;
                            case 60:
                                state = 60;
                                if (!var25_map_filter_elements.MoveNext()) { state = 61; goto case 61; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("L5", var8_const_), (new seq79_create_element((Altova.Mapforce.IMFNode)(var25_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 61:
                                state = 52;
                                Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                                goto case 52;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var12_map_filter_elements); var12_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var10_map_filter_elements); var10_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var23_map_filter_elements); var23_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var14_map_filter_elements); var14_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var25_map_filter_elements); var25_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var24_map_filter_elements); var24_map_filter_elements = null;
                }
            }

        }
        class seq73_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;
            Altova.Mapforce.IMFNode var8_COSCOSI;

            public seq73_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements,
                Altova.Mapforce.IMFNode var8_COSCOSI
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
                this.var8_COSCOSI = var8_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq73_create_element closure;
                string var4_const_;
                string var3_const_http___tempuri_org_C;
                System.Collections.IEnumerable var6_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                IEnumerator var7_map_filter_elements;
                System.Collections.IEnumerable var9_filter_elements;
                string var10_cast;
                public Enumerator(seq73_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var6_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", var3_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", var3_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", var3_const_http___tempuri_org_C), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F81", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F187", var4_const_), Altova.Functions.Core.Box("G"));
                                pos++;
                                return true;
                            case 12:
                                state = 14;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 14; goto case 14; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F183", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))))));
                                pos++;
                                return true;
                            case 14:
                                state = 20;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F184", var4_const_), Altova.Functions.Core.Box("X"));
                                pos++;
                                return true;
                            case 20:
                                state = 22;
                                if (!(Altova.Functions.Core.Exists(var6_filter_elements))) { state = 22; goto case 22; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F80", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var6_filter_elements))))));
                                pos++;
                                return true;
                            case 22:
                                state = 28;
                                var7_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var3_const_http___tempuri_org_C), closure.var8_COSCOSI)))).GetEnumerator();
                                goto case 28;
                            case 28:
                                state = 28;
                                if (!var7_map_filter_elements.MoveNext()) { state = 29; goto case 29; }
                                var9_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitAMSCode", var3_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var7_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var9_filter_elements))) { state = 28; goto case 28; }
                                var10_cast = (Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var9_filter_elements)));
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.StringLength(var10_cast)))) == (3m))) { state = 41; goto case 41; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F211_1", var4_const_), Altova.Functions.Core.Box(var10_cast));
                                pos++;
                                return true;
                            case 29:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F188", var4_const_), Altova.Functions.Core.Box("K"));
                                pos++;
                                return true;
                            case 41:
                                state = 28;
                                Altova.Functions.Core.ThrowUserException("LO F211_2[QtyUnitAMSCode]\u4EE3\u7801\u4E0D\u6B63\u786E");
                                goto case 28;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var7_map_filter_elements); var7_map_filter_elements = null;
                }
            }

        }
        class seq74_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_COSCOSI;

            public seq74_create_element(
                Altova.Mapforce.IMFNode var3_COSCOSI
                )
            {
                this.var3_COSCOSI = var3_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq74_create_element closure;
                string var2_const_http___tempuri_org_C;
                IEnumerator var1_map_filter_elements;
                System.Collections.IEnumerable var4_filter_elements;
                public Enumerator(seq74_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var2_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var2_const_http___tempuri_org_C), closure.var3_COSCOSI)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GoodsInfo", var2_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 5; goto case 5; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("val", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(30m))))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq75_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq75_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq75_create_element closure;
                string var1_const_;
                public Enumerator(seq75_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F213", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F79", var1_const_), (new seq76_if_if_exists(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq76_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq76_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq76_if_if_exists closure;
                public Enumerator(seq76_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq77_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq77_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq77_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq77_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq77_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq78_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_COSCOSI;

            public seq78_create_element(
                Altova.Mapforce.IMFNode var3_COSCOSI
                )
            {
                this.var3_COSCOSI = var3_COSCOSI;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq78_create_element closure;
                string var2_const_http___tempuri_org_C;
                IEnumerator var1_map_filter_elements;
                System.Collections.IEnumerable var4_filter_elements;
                public Enumerator(seq78_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___tempuri_org_C = ("http://tempuri.org/COSCOSI.xsd");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var2_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("COSCOSI", var2_const_http___tempuri_org_C), closure.var3_COSCOSI)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Marks", var2_const_http___tempuri_org_C), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 5; goto case 5; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("val", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(30m))))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq79_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq79_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq79_create_element closure;
                string var1_const_;
                public Enumerator(seq79_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F213", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F87", var1_const_), (new seq80_if_if_exists(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq81_if_exists(closure.var2_cur_filter_elements))))) { state = 12; goto case 12; }
                                return false;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F88", var1_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq82_if_empty(closure.var2_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq80_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq80_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq80_if_if_exists closure;
                public Enumerator(seq80_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq81_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq81_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq81_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq81_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq81_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq82_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq82_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq82_if_empty closure;
                public Enumerator(seq82_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty((string)Altova.Functions.Core.First(Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "L";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq83_create_element : IEnumerable
        {

            public seq83_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq83_create_element closure;
                string var1_const_;
                public Enumerator(seq83_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F97", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F28", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1443"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq84_create_element : IEnumerable
        {

            public seq84_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq84_create_element closure;
                string var1_const_;
                public Enumerator(seq84_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI16", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI12", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("000001469"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }

    }
}
