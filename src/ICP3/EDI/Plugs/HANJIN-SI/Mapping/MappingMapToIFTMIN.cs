////////////////////////////////////////////////////////////////////////
//
// MappingMapToIFTMIN.cs
//
// This file was generated by MapForce 2010.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Xml;
using Altova.Xml;

using ICP.EDI.ServiceInterface;



namespace HANJIN.SI
{

    public class MappingMapToIFTMIN : Altova.TraceProvider, IMapping
    {
        private bool runDoesCloseAll = true;
        public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; } }




        #region Members
        // instances
        protected XmlNode m_mbl2Instance;
        // members
        #endregion //Members


        public void Run(String mbl2SourceFilename, string EnvelopeTargetFilename)
        {
            // open source streams
            WriteTrace("Loading " + mbl2SourceFilename + "...\n");
            Altova.IO.Input mbl2Source = new Altova.IO.FileInput(mbl2SourceFilename);
            // open target stream
            Altova.IO.Output EnvelopeTarget = new Altova.IO.FileOutput(EnvelopeTargetFilename);

            // run
            Run(mbl2Source, EnvelopeTarget);

            // close source streams
            mbl2Source.Stream.Close();
            // close target stream
            WriteTrace("Saving " + EnvelopeTargetFilename + "...\n");
            EnvelopeTarget.Stream.Close();
        }

        public void Run(Altova.IO.Input mbl2Source, Altova.IO.Output EnvelopeTarget)
        {
            // Open the source(s)
            XmlDocument mbl2DocSourceObject = XmlTreeOperations.LoadDocument(mbl2Source);


            m_mbl2Instance = mbl2DocSourceObject;
            mbl2Source.Close();
            // Create the target
            HANJIN.SI.IFTMINDocument EnvelopeTargetDoc = new HANJIN.SI.IFTMINDocument();
            Altova.TextParser.ITextNode EnvelopeTargetObject = EnvelopeTargetDoc.Generator;

            // Execute mapping

            seq1_Main mapping = new seq1_Main(
new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_mbl2Instance, mbl2Source.Filename));

            Altova.Mapforce.MFTextWriter.Write(mapping, EnvelopeTargetObject);

            // Close the target

            EnvelopeTargetDoc.SetEncoding("ISO-8859-1", false, false);
            EnvelopeTargetDoc.Save(EnvelopeTarget);

            // Close the Source Library

            if (runDoesCloseAll)
            {
                mbl2Source.Close();
                EnvelopeTarget.Close();
            }
        }
        class seq1_Main : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_instance_mbl;

            public seq1_Main(
                Altova.Mapforce.IMFNode var1_instance_mbl
                )
            {
                this.var1_instance_mbl = var1_instance_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq1_Main closure;
                string var2_const_;
                public Enumerator(seq1_Main closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Envelope", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Interchange", var2_const_), (new seq2_create_element(closure.var1_instance_mbl)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq2_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_mbl;

            public seq2_create_element(
                Altova.Mapforce.IMFNode var1_mbl
                )
            {
                this.var1_mbl = var1_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq2_create_element closure;
                string var2_const_;
                public Enumerator(seq2_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNB", var2_const_), (new seq3_create_element(closure.var1_mbl)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Group", var2_const_), (new seq7_cond_map_filter_elements(closure.var1_mbl)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq3_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_mbl;

            public seq3_create_element(
                Altova.Mapforce.IMFNode var1_mbl
                )
            {
                this.var1_mbl = var1_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq3_create_element closure;
                string var6_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq3_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var6_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_mbl));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 6; goto case 6; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 22;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S001", var6_const_), (new seq4_create_element()));
                                pos++;
                                return true;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DocumentNo", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0020", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 6;
                            case 22:
                                state = 23;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S002", var6_const_), (new seq5_create_element(closure.var1_mbl)));
                                pos++;
                                return true;
                            case 23:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S003", var6_const_), (new seq6_create_element()));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq4_create_element : IEnumerable
        {

            public seq4_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq4_create_element closure;
                string var1_const_;
                public Enumerator(seq4_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0001", var1_const_), Altova.Functions.Core.Box("UNOA"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0002", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(1m)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq5_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_mbl;

            public seq5_create_element(
                Altova.Mapforce.IMFNode var1_mbl
                )
            {
                this.var1_mbl = var1_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq5_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq5_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_mbl));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 6; goto case 6; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0007", ""), Altova.Functions.Core.Box("ZZ"));
                                pos++;
                                return true;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CompanyCode", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0004", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 6;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq6_create_element : IEnumerable
        {

            public seq6_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq6_create_element closure;
                string var1_const_;
                public Enumerator(seq6_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0010", var1_const_), Altova.Functions.Core.Box("SMLM"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0007", var1_const_), Altova.Functions.Core.Box("ZZ"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq7_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_mbl;

            public seq7_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_mbl
                )
            {
                this.var1_mbl = var1_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq7_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                IEnumerator var5_map_filter_elements;
                public Enumerator(seq7_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_mbl));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 13;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))).GetEnumerator();
                                goto case 13;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                            case 13:
                                state = 13;
                                if (!var5_map_filter_elements.MoveNext()) { state = 14; goto case 14; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Message_IFTMIN", ""), (new seq8_create_element(((Altova.Mapforce.IMFEnumerator)var5_map_filter_elements).Position, (Altova.Mapforce.IMFNode)(var5_map_filter_elements.Current), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 14:
                                state = 9;
                                Altova.Mapforce.MFEnumerator.Dispose(var5_map_filter_elements); var5_map_filter_elements = null;
                                goto case 9;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var5_map_filter_elements); var5_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq8_create_element : IEnumerable
        {
            int var2_idx_filter_elements;
            Altova.Mapforce.IMFNode var3_cur_filter_elements;
            Altova.Mapforce.IMFNode var6_cur_filter_elements;

            public seq8_create_element(
                int var2_idx_filter_elements,
                Altova.Mapforce.IMFNode var3_cur_filter_elements,
                Altova.Mapforce.IMFNode var6_cur_filter_elements
                )
            {
                this.var2_idx_filter_elements = var2_idx_filter_elements;
                this.var3_cur_filter_elements = var3_cur_filter_elements;
                this.var6_cur_filter_elements = var6_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq8_create_element closure;
                string var1_const_;
                Altova.Types.QName var5_create_qname;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var7_create_qname;
                IEnumerator var8_map_filter_elements;
                IEnumerator var9_map_filter_elements;
                public Enumerator(seq8_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                var5_create_qname = (Altova.Functions.Core.CreateQName("C076", var1_const_));
                                var4_create_qname = (Altova.Functions.Core.CreateQName("COM", var1_const_));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNH", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0062", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(closure.var2_idx_filter_elements)))))));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("BGM", var1_const_), (new seq9_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CTA", var1_const_), (new seq11_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 7:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq13_cond_seq_(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 8:
                                state = 9;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq15_cond_seq_(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 9:
                                state = 10;
                                current = Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var5_create_qname, (new seq17_cond_seq_(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 10:
                                state = 11;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTM", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C507", var1_const_), (new seq19_create_element()))));
                                pos++;
                                return true;
                            case 11:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TSR", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C536", var1_const_), (new seq24_cond_cond_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var1_const_), (new seq25_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 13:
                                state = 24;
                                if (!((bool)Altova.Functions.Core.First((new seq27_if_exists(closure.var3_cur_filter_elements))))) { state = 21; goto case 21; }
                                Altova.Functions.Core.ThrowUserException("Weight must input");
                                goto case 24;
                            case 21:
                                state = 24;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CNT", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C270", var1_const_), (new seq28_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 24:
                                state = 43;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DocumentNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var6_cur_filter_elements)))) { state = 43; goto case 43; }
                                if (!((bool)Altova.Functions.Core.First((new seq29_if_exists(closure.var3_cur_filter_elements))))) { state = 36; goto case 36; }
                                Altova.Functions.Core.ThrowUserException("Volume must input");
                                goto case 43;
                            case 36:
                                state = 43;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CNT", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C270", var1_const_), (new seq30_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 43:
                                state = 46;
                                if (!((bool)Altova.Functions.Core.First((new seq31_if_exists(closure.var3_cur_filter_elements))))) { state = 51; goto case 51; }
                                goto case 46;
                            case 46:
                                state = 55;
                                Altova.Functions.Core.ThrowUserException("Qty must input");
                                goto case 55;
                            case 51:
                                state = 55;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CNT", var1_const_), (new seq32_if_if_exists(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 55:
                                state = 57;
                                var7_create_qname = (Altova.Functions.Core.CreateQName("SG1", var1_const_));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CNT", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C270", var1_const_), (new seq35_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 57:
                                state = 58;
                                current = Altova.Functions.Core.CreateElement(var7_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LOC", var1_const_), (new seq37_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 58:
                                state = 59;
                                current = Altova.Functions.Core.CreateElement(var7_create_qname, (new seq41_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 59:
                                state = 60;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG3", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RFF", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C506", var1_const_), (new seq47_create_element(closure.var3_cur_filter_elements)))))));
                                pos++;
                                return true;
                            case 60:
                                state = 61;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG6", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CPI", var1_const_), (new seq48_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 61:
                                state = 64;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG8", var1_const_), (new seq49_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 64:
                                state = 67;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG11", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var1_const_), (new seq73_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 67:
                                state = 70;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG11", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var1_const_), (new seq78_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 70:
                                state = 73;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG11", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var1_const_), (new seq83_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 73:
                                state = 76;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG11", var1_const_), (new seq88_create_element(closure.var6_cur_filter_elements, closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 76:
                                state = 79;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG11", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var1_const_), (new seq96_create_element(closure.var6_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 79:
                                state = 82;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG18", var1_const_), (new seq100_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 82:
                                state = 83;
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Container", "http://tempuri.org/EDI-MBL.xsd"), closure.var3_cur_filter_elements)).GetEnumerator();
                                goto case 83;
                            case 83:
                                state = 83;
                                if (!var8_map_filter_elements.MoveNext()) { state = 84; goto case 84; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG37", var1_const_), (new seq136_create_element((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 84:
                                state = 92;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Container", "http://tempuri.org/EDI-MBL.xsd"), closure.var3_cur_filter_elements)).GetEnumerator();
                                goto case 92;
                            case 92:
                                state = 92;
                                if (!var9_map_filter_elements.MoveNext()) { state = 93; goto case 93; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG37", var1_const_), (new seq149_create_element((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 93:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNT", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0062", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(closure.var2_idx_filter_elements)))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq9_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq9_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq9_create_element closure;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq9_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Flag", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C002", var3_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1001", var3_const_), Altova.Functions.Core.Box("340"))));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C106", var3_const_), (new seq10_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq10_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq10_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq10_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq10_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SoNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1004", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq11_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq11_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq11_create_element closure;
                string var1_const_;
                public Enumerator(seq11_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3139", var1_const_), Altova.Functions.Core.Box("IC"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C056", var1_const_), (new seq12_cond_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq12_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq12_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq12_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq12_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueBy", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3412", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq13_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq13_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq13_cond_seq_ closure;
                System.Collections.IEnumerable var2_filter_elements;
                string var3_const_;
                public Enumerator(seq13_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueByEmail", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3148", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 9:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3155", var3_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq14_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq14_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq14_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq14_if_empty closure;
                public Enumerator(seq14_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueByEmail", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "EM";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq15_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq15_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq15_cond_seq_ closure;
                System.Collections.IEnumerable var2_filter_elements;
                string var3_const_;
                public Enumerator(seq15_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueByFax", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3148", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 9:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3155", var3_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq16_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq16_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq16_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq16_if_empty closure;
                public Enumerator(seq16_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueByFax", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "FX";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq17_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq17_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq17_cond_seq_ closure;
                System.Collections.IEnumerable var2_filter_elements;
                string var3_const_;
                public Enumerator(seq17_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueByTel", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3148", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 9:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3155", var3_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq18_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq18_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq18_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq18_if_empty closure;
                public Enumerator(seq18_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueByTel", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "TE";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq19_create_element : IEnumerable
        {

            public seq19_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq19_create_element closure;
                int var3_;
                string var2_string;
                string var1_const_;
                public Enumerator(seq19_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_ = (Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(2m))));
                                var2_string = (Altova.Functions.Core.ToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.YearFromDatetime(Altova.Functions.Lang.Now())))));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2005", var1_const_), Altova.Functions.Core.Box("137"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2380", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Lang.Left(var2_string, var3_), Altova.Functions.Lang.Right(var2_string, var3_)), (string)Altova.Functions.Core.First((new seq20_if_less()))), (string)Altova.Functions.Core.First((new seq21_if_less()))), (string)Altova.Functions.Core.First((new seq22_if_less()))), (string)Altova.Functions.Core.First((new seq23_if_less())))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2379", var1_const_), Altova.Functions.Core.Box("203"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq20_if_less : IEnumerable
        {

            public seq20_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq20_if_less closure;
                int var2_month_from_datetime;
                decimal var1_cast;
                public Enumerator(seq20_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_month_from_datetime = (Altova.Functions.Lang.MonthFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_month_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_month_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq21_if_less : IEnumerable
        {

            public seq21_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq21_if_less closure;
                int var2_day_from_datetime;
                decimal var1_cast;
                public Enumerator(seq21_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_day_from_datetime = (Altova.Functions.Lang.DayFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_day_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_day_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq22_if_less : IEnumerable
        {

            public seq22_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq22_if_less closure;
                int var2_hour_from_datetime;
                decimal var1_cast;
                public Enumerator(seq22_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_hour_from_datetime = (Altova.Functions.Lang.HourFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_hour_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_hour_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq23_if_less : IEnumerable
        {

            public seq23_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq23_if_less closure;
                int var2_minute_from_datetime;
                decimal var1_cast;
                public Enumerator(seq23_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_minute_from_datetime = (Altova.Functions.Lang.MinuteFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_minute_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_minute_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq24_cond_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq24_cond_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq24_cond_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                System.Collections.IEnumerable var3_vmf1_inputtoresult;
                public Enumerator(seq24_cond_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryTerm", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_vmf1_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf1_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_vmf1_inputtoresult))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4065", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var3_vmf1_inputtoresult)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq25_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq25_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq25_create_element closure;
                string var1_const_;
                public Enumerator(seq25_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var1_const_), Altova.Functions.Core.Box("AAI"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var1_const_), (new seq26_cond_cond_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq26_cond_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq26_cond_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq26_cond_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                System.Collections.IEnumerable var3_vmf2_inputtoresult;
                public Enumerator(seq26_cond_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IsWoodPack", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_vmf2_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf2_inputtoresult.Create(Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))));
                                if (!(Altova.Functions.Core.Exists(var3_vmf2_inputtoresult))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var3_vmf2_inputtoresult)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq27_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq27_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq27_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq27_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = (Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))) == (0m);
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq28_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq28_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq28_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq28_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6069", var2_const_), Altova.Functions.Core.Box("7"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6066", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("KGM"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq29_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq29_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq29_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq29_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = (Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))) == (0m);
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq30_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq30_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq30_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq30_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6069", var2_const_), Altova.Functions.Core.Box("26"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6066", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("MTQ"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq31_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq31_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq31_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq31_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = (Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))) == (0m);
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq32_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq32_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq32_if_if_exists closure;
                public Enumerator(seq32_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq33_if_exists(closure.var1_cur_filter_elements))))) { state = 12; goto case 12; }
                                Altova.Functions.Core.ThrowUserException("Packaging unit is incorrect, please contact the computer staff.");
                                return false;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C270", ""), (new seq34_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq33_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq33_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq33_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq33_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq34_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq34_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq34_create_element closure;
                string var4_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq34_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6069", var2_const_), Altova.Functions.Core.Box("11"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6066", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                            case 7:
                                state = 16;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                goto case 16;
                            case 16:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq35_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq35_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq35_create_element closure;
                string var1_const_;
                public Enumerator(seq35_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6069", var1_const_), Altova.Functions.Core.Box("16"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6066", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.Count((new seq36_map_filter_elements(closure.var2_cur_filter_elements))))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq36_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq36_map_filter_elements(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq36_map_filter_elements closure;
                IEnumerator var1_map_filter_elements;
                public Enumerator(seq36_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Container", "http://tempuri.org/EDI-MBL.xsd"), closure.var2_cur_filter_elements)).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                current = var1_map_filter_elements.Current;
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq37_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq37_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq37_create_element closure;
                public Enumerator(seq37_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PayLocCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq38_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", ""), (new seq39_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq38_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq38_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq38_if_empty closure;
                public Enumerator(seq38_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PayLocCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "57";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq39_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq39_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq39_create_element closure;
                string var4_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                string var3_const_;
                public Enumerator(seq39_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PayLocName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PayLocCode", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                var3_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 16;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                goto case 16;
                            case 9:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq40_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 16:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq40_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq40_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq40_if_empty closure;
                public Enumerator(seq40_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PayLocCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "6";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq41_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq41_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq41_create_element closure;
                string var2_const_;
                public Enumerator(seq41_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LOC", var2_const_), (new seq42_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTM", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C507", var2_const_), (new seq44_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq42_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq42_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq42_create_element closure;
                string var1_const_;
                public Enumerator(seq42_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("73"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq43_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq43_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq43_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq43_create_element closure;
                string var4_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq43_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueLocName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueLocCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var4_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq44_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq44_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq44_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                int var5_;
                string var4_string;
                public Enumerator(seq44_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueDate", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2005", var2_const_), Altova.Functions.Core.Box("95"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                var5_ = (Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(2m))));
                                var4_string = (Altova.Functions.Core.ToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.YearFromDatetime(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))))));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2380", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Lang.Left(var4_string, var5_), Altova.Functions.Lang.Right(var4_string, var5_)), (string)Altova.Functions.Core.First((new seq45_if_less(closure.var1_cur_filter_elements)))), (string)Altova.Functions.Core.First((new seq46_if_less(closure.var1_cur_filter_elements))))));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2379", var2_const_), Altova.Functions.Core.Box("102"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq45_if_less : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq45_if_less(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq45_if_less closure;
                int var3_month_from_datetime;
                decimal var2_cast;
                public Enumerator(seq45_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_month_from_datetime = (Altova.Functions.Lang.MonthFromDatetime(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueDate", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))))));
                                var2_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var3_month_from_datetime)));
                                if (!((var2_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var2_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var3_month_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq46_if_less : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq46_if_less(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq46_if_less closure;
                int var3_day_from_datetime;
                decimal var2_cast;
                public Enumerator(seq46_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_day_from_datetime = (Altova.Functions.Lang.DayFromDatetime(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("IssueDate", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))))));
                                var2_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var3_day_from_datetime)));
                                if (!((var2_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var2_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var3_day_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq47_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq47_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq47_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq47_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SoNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1153", var2_const_), Altova.Functions.Core.Box("BN"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1154", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq48_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq48_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq48_create_element closure;
                string var4_const_;
                System.Collections.IEnumerable var2_filter_elements;
                System.Collections.IEnumerable var3_vmf3_inputtoresult;
                public Enumerator(seq48_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PaymentTerm", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                var3_vmf3_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf3_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_vmf3_inputtoresult))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4237", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var3_vmf3_inputtoresult)));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C229", var4_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F5237", var4_const_), Altova.Functions.Core.Box("4"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq49_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq49_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq49_create_element closure;
                string var2_const_;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                public Enumerator(seq49_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 14;
                                if (!((bool)Altova.Functions.Core.First((new seq50_if_exists(closure.var1_cur_filter_elements))))) { state = 12; goto case 12; }
                                Altova.Functions.Core.ThrowUserException("error:voyage no format error.");
                                goto case 14;
                            case 12:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TDT", ""), (new seq57_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 14:
                                state = 16;
                                var2_const_ = ("");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("LOC", var2_const_));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("SG9", var2_const_));
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq60_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 16:
                                state = 17;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq63_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 17:
                                state = 18;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq69_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 18:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq71_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq50_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq50_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq50_if_exists closure;
                public Enumerator(seq50_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Contains((string)Altova.Functions.Core.First((new seq51_if_equal_or_less(closure.var1_cur_filter_elements))), "error:");
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq51_if_equal_or_less : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq51_if_equal_or_less(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq51_if_equal_or_less closure;
                string var2_const__;
                int var3_string_length;
                public Enumerator(seq51_if_equal_or_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const__ = (">");
                                var3_string_length = (Altova.Functions.Core.StringLength(Altova.Functions.Core.SubstringBefore(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat((string)Altova.Functions.Core.First((new seq52_if_logical_and(closure.var1_cur_filter_elements))), (string)Altova.Functions.Core.First((new seq53_if_logical_and(closure.var1_cur_filter_elements)))), (string)Altova.Functions.Core.First((new seq54_if_logical_and(closure.var1_cur_filter_elements)))), (string)Altova.Functions.Core.First((new seq55_if_logical_and(closure.var1_cur_filter_elements)))), (string)Altova.Functions.Core.First((new seq56_if_logical_and(closure.var1_cur_filter_elements)))), var2_const__), var2_const__)));
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var3_string_length))) <= (4m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat((string)Altova.Functions.Core.First(vmf4_inputtoresult.Create(var3_string_length)), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "error:voyage no error";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq52_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq52_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq52_if_logical_and closure;
                decimal var4_const_0;
                double var2_;
                string var3_substring;
                public Enumerator(seq52_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var4_const_0 = (0m);
                                var2_ = (Altova.CoreTypes.DecimalToDouble(1m));
                                var3_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), var2_, var2_));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var3_substring, "0")))) >= (var4_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var3_substring)))) >= (var4_const_0)))) { state = 11; goto case 11; }
                                current = var3_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq53_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq53_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq53_if_logical_and closure;
                decimal var3_const_0;
                string var2_substring;
                public Enumerator(seq53_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_0 = (0m);
                                var2_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), Altova.CoreTypes.DecimalToDouble(2m), Altova.CoreTypes.DecimalToDouble(1m)));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var2_substring, "0")))) >= (var3_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var2_substring)))) >= (var3_const_0)))) { state = 11; goto case 11; }
                                current = var2_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq54_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq54_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq54_if_logical_and closure;
                decimal var3_const_0;
                string var2_substring;
                public Enumerator(seq54_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_0 = (0m);
                                var2_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), Altova.CoreTypes.DecimalToDouble(3m), Altova.CoreTypes.DecimalToDouble(1m)));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var2_substring, "0")))) >= (var3_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var2_substring)))) >= (var3_const_0)))) { state = 11; goto case 11; }
                                current = var2_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq55_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq55_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq55_if_logical_and closure;
                decimal var3_const_0;
                string var2_substring;
                public Enumerator(seq55_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_0 = (0m);
                                var2_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), Altova.CoreTypes.DecimalToDouble(4m), Altova.CoreTypes.DecimalToDouble(1m)));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var2_substring, "0")))) >= (var3_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var2_substring)))) >= (var3_const_0)))) { state = 11; goto case 11; }
                                current = var2_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq56_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq56_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq56_if_logical_and closure;
                decimal var3_const_0;
                string var2_substring;
                public Enumerator(seq56_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_0 = (0m);
                                var2_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), Altova.CoreTypes.DecimalToDouble(5m), Altova.CoreTypes.DecimalToDouble(1m)));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var2_substring, "0")))) >= (var3_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var2_substring)))) >= (var3_const_0)))) { state = 11; goto case 11; }
                                current = var2_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq57_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq57_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq57_create_element closure;
                string var2_const_;
                public Enumerator(seq57_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8051", var2_const_), Altova.Functions.Core.Box("20"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8028", var2_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq51_if_equal_or_less(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C220", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8067", var2_const_), Altova.Functions.Core.Box("1"))));
                                pos++;
                                return true;
                            case 13:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C040", var2_const_), (new seq58_create_element()));
                                pos++;
                                return true;
                            case 14:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C222", var2_const_), (new seq59_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq58_create_element : IEnumerable
        {

            public seq58_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq58_create_element closure;
                string var1_const_;
                public Enumerator(seq58_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3127", var1_const_), Altova.Functions.Core.Box("SMLM"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var1_const_), Altova.Functions.Core.Box("172"));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var1_const_), Altova.Functions.Core.Box("182"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq59_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq59_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq59_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq59_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Vessel", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VesselCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8213", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8212", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq60_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq60_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq60_create_element closure;
                string var2_const_http___tempuri_org_E;
                public Enumerator(seq60_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var2_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocCode", var2_const_http___tempuri_org_E), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", var2_const_http___tempuri_org_E), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq61_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", ""), (new seq62_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq61_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq61_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq61_if_empty closure;
                string var2_const_http___tempuri_org_E;
                public Enumerator(seq61_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                if (!(Altova.Functions.Lang.Empty(Altova.Functions.Core.Concat(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocCode", var2_const_http___tempuri_org_E), closure.var1_cur_filter_elements))), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", var2_const_http___tempuri_org_E), closure.var1_cur_filter_elements))))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "88";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq62_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq62_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq62_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq62_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq63_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq63_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq63_create_element closure;
                string var2_const_;
                public Enumerator(seq63_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LOC", var2_const_), (new seq64_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTM", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C507", var2_const_), (new seq66_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq64_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq64_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq64_create_element closure;
                string var1_const_;
                public Enumerator(seq64_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("9"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq65_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq65_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq65_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq65_create_element closure;
                string var4_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq65_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolCode", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var3_const_), Altova.Functions.Core.Box("139"));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq66_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq66_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq66_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                int var5_;
                string var4_string;
                public Enumerator(seq66_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETD", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2005", var2_const_), Altova.Functions.Core.Box("133"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7; }
                                var5_ = (Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(2m))));
                                var4_string = (Altova.Functions.Core.ToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.YearFromDatetime(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))))));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2380", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Lang.Left(var4_string, var5_), Altova.Functions.Lang.Right(var4_string, var5_)), (string)Altova.Functions.Core.First((new seq67_if_less(closure.var1_cur_filter_elements)))), (string)Altova.Functions.Core.First((new seq68_if_less(closure.var1_cur_filter_elements))))));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2379", var2_const_), Altova.Functions.Core.Box("102"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq67_if_less : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq67_if_less(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq67_if_less closure;
                int var3_month_from_datetime;
                decimal var2_cast;
                public Enumerator(seq67_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_month_from_datetime = (Altova.Functions.Lang.MonthFromDatetime(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETD", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))))));
                                var2_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var3_month_from_datetime)));
                                if (!((var2_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var2_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var3_month_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq68_if_less : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq68_if_less(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq68_if_less closure;
                int var3_day_from_datetime;
                decimal var2_cast;
                public Enumerator(seq68_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_day_from_datetime = (Altova.Functions.Lang.DayFromDatetime(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETD", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))))));
                                var2_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var3_day_from_datetime)));
                                if (!((var2_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var2_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var3_day_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq69_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq69_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq69_create_element closure;
                string var1_const_;
                public Enumerator(seq69_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("11"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq70_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq70_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq70_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq70_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq70_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq71_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq71_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq71_create_element closure;
                string var1_const_;
                public Enumerator(seq71_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("7"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq72_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq72_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq72_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq72_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq72_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq73_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq73_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq73_create_element closure;
                string var1_const_;
                public Enumerator(seq73_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("CZ"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C058", var1_const_), (new seq74_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq74_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq74_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq74_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToL;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq74_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToL = ("ICP3ParseCustomerToList");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, "http://www.CityOcean.com/"), (new seq75_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, var10_const_http___www_CityOcean), (new seq75_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3124", var7_const_), (new seq76_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq75_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq75_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq75_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq75_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(5m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq76_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq76_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq76_if_if_exists closure;
                public Enumerator(seq76_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq77_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq77_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq77_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq77_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq77_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq78_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq78_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq78_create_element closure;
                string var1_const_;
                public Enumerator(seq78_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("CN"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C058", var1_const_), (new seq79_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq79_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq79_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq79_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToL;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq79_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToL = ("ICP3ParseCustomerToList");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, "http://www.CityOcean.com/"), (new seq80_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, var10_const_http___www_CityOcean), (new seq80_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3124", var7_const_), (new seq81_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq80_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq80_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq80_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq80_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(5m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq81_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq81_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq81_if_if_exists closure;
                public Enumerator(seq81_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq82_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq82_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq82_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq82_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq82_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq83_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq83_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq83_create_element closure;
                string var1_const_;
                public Enumerator(seq83_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("N1"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C058", var1_const_), (new seq84_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq84_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq84_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq84_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToL;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq84_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToL = ("ICP3ParseCustomerToList");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, "http://www.CityOcean.com/"), (new seq85_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, var10_const_http___www_CityOcean), (new seq85_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3124", var7_const_), (new seq86_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq85_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq85_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq85_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq85_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NotifyInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(5m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq86_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq86_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq86_if_if_exists closure;
                public Enumerator(seq86_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq87_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq87_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq87_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq87_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq87_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq88_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq88_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements,
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq88_create_element closure;
                string var2_const_;
                public Enumerator(seq88_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", ""), (new seq89_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG13", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DOC", var2_const_), (new seq94_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq89_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq89_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq89_create_element closure;
                string var1_const_;
                public Enumerator(seq89_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("FW"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C082", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3039", var1_const_), Altova.Functions.Core.Box("CN183868"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C058", var1_const_), (new seq90_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq90_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq90_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq90_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq90_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq91_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq91_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3124", var7_const_), (new seq92_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq91_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq91_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq91_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq91_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CompanyInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(5m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq92_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq92_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq92_if_if_exists closure;
                public Enumerator(seq92_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq93_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq93_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq93_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq93_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq93_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq94_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq94_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq94_create_element closure;
                string var1_const_;
                public Enumerator(seq94_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C002", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1001", var1_const_), Altova.Functions.Core.Box("705"))));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C503", var1_const_), (new seq95_cond_seq_(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq95_cond_seq_ : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq95_cond_seq_(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq95_cond_seq_ closure;
                System.Collections.IEnumerable var2_filter_elements;
                int var4_cast;
                System.Collections.IEnumerable var5_vmf6_inputtoresult;
                System.Collections.IEnumerable var3_vmf5_inputtoresult;
                public Enumerator(seq95_cond_seq_ closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 10;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReleaseType", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var4_cast = (Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))))));
                                var5_vmf6_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf6_inputtoresult.Create(var4_cast));
                                var3_vmf5_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf5_inputtoresult.Create(var4_cast));
                                if (!(Altova.Functions.Core.Exists(var3_vmf5_inputtoresult))) { state = 10; goto case 10; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1373", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var3_vmf5_inputtoresult)));
                                pos++;
                                return true;
                            case 10:
                                state = 19;
                                if (!(Altova.Functions.Core.Exists(var5_vmf6_inputtoresult))) { state = 0; return false; }
                                goto case 19;
                            case 19:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1366", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var5_vmf6_inputtoresult)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq96_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq96_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq96_create_element closure;
                string var1_const_;
                public Enumerator(seq96_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("EX"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C058", var1_const_), (new seq97_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq97_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq97_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq97_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq97_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq91_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq91_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3124", var7_const_), (new seq98_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq98_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq98_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq98_if_if_exists closure;
                public Enumerator(seq98_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq99_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq99_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq99_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq99_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq99_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq100_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq100_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq100_create_element closure;
                string var2_const_;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                public Enumerator(seq100_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GID", var2_const_), (new seq101_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var2_const_), (new seq103_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 8:
                                state = 11;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var2_const_), (new seq108_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var2_const_), (new seq114_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 14:
                                state = 16;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var2_const_), (new seq120_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 16:
                                state = 18;
                                var4_create_qname = (Altova.Functions.Core.CreateQName("MEA", var2_const_));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("SG20", var2_const_));
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq126_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 18:
                                state = 19;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq128_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 19:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG23", var2_const_), (new seq130_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq101_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq101_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq101_create_element closure;
                string var1_const_;
                public Enumerator(seq101_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1496", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C213", var1_const_), (new seq102_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq102_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq102_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq102_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq102_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7224", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7065", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq103_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq103_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq103_create_element closure;
                string var1_const_;
                public Enumerator(seq103_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var1_const_), Altova.Functions.Core.Box("AAA"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var1_const_), (new seq104_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq104_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq104_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq104_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq104_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var7_const_), (new seq106_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq105_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq105_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq105_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq105_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GoodsInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(50m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(0m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq106_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq106_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq106_if_if_exists closure;
                public Enumerator(seq106_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq107_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq107_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq107_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq107_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq107_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq108_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq108_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq108_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                public Enumerator(seq108_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var7_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq109_if_equal((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var7_const_), (new seq111_create_element(closure.var5_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq109_if_equal : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq109_if_equal(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq109_if_equal closure;
                public Enumerator(seq109_if_equal closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.Count((new seq110_map_filter_elements(closure.var1_cur_filter_elements)))))) == (0m))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "AAA";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq110_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq110_map_filter_elements(
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq110_map_filter_elements closure;
                string var2_const_http___www_CityOcean;
                IEnumerator var1_map_filter_elements;
                public Enumerator(seq110_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var2_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var2_const_http___www_CityOcean), closure.var3_cur_filter_elements)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var1_map_filter_elements).Position))) > (5m))) { state = 5; goto case 5; }
                                current = var1_map_filter_elements.Current;
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq111_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq111_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq111_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq111_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var11_map_filter_elements).Position))) > (5m))) { state = 27; goto case 27; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var7_const_), (new seq112_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq112_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq112_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq112_if_if_exists closure;
                public Enumerator(seq112_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq113_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq113_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq113_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq113_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq113_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq114_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq114_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq114_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                public Enumerator(seq114_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var7_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq115_if_equal((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var7_const_), (new seq117_create_element(closure.var5_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq115_if_equal : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq115_if_equal(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq115_if_equal closure;
                public Enumerator(seq115_if_equal closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.Count((new seq116_map_filter_elements(closure.var1_cur_filter_elements)))))) == (0m))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "AAA";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq116_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq116_map_filter_elements(
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq116_map_filter_elements closure;
                string var2_const_http___www_CityOcean;
                IEnumerator var1_map_filter_elements;
                public Enumerator(seq116_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var2_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var2_const_http___www_CityOcean), closure.var3_cur_filter_elements)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var1_map_filter_elements).Position))) > (10m))) { state = 5; goto case 5; }
                                current = var1_map_filter_elements.Current;
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq117_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq117_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq117_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq117_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var11_map_filter_elements).Position))) > (10m))) { state = 27; goto case 27; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var7_const_), (new seq118_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq118_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq118_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq118_if_if_exists closure;
                public Enumerator(seq118_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq119_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq119_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq119_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq119_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq119_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq120_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq120_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq120_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                public Enumerator(seq120_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var7_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq121_if_equal((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var7_const_), (new seq123_create_element(closure.var5_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq121_if_equal : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq121_if_equal(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq121_if_equal closure;
                public Enumerator(seq121_if_equal closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.Count((new seq122_map_filter_elements(closure.var1_cur_filter_elements)))))) == (0m))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "AAA";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq122_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq122_map_filter_elements(
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq122_map_filter_elements closure;
                string var2_const_http___www_CityOcean;
                IEnumerator var1_map_filter_elements;
                public Enumerator(seq122_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var2_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var2_const_http___www_CityOcean), closure.var3_cur_filter_elements)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var1_map_filter_elements).Position))) > (15m))) { state = 5; goto case 5; }
                                current = var1_map_filter_elements.Current;
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq123_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq123_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq123_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq123_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq105_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var11_map_filter_elements).Position))) > (15m))) { state = 27; goto case 27; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var7_const_), (new seq124_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq124_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq124_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq124_if_if_exists closure;
                public Enumerator(seq124_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq125_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq125_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq125_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq125_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq125_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq126_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq126_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq126_create_element closure;
                string var1_const_;
                public Enumerator(seq126_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("G"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq127_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq127_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq127_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq127_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq127_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("KGM"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq128_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq128_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq128_create_element closure;
                string var1_const_;
                public Enumerator(seq128_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("VOL"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq129_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq129_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq129_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq129_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq129_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("MTQ"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq130_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq130_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq130_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                public Enumerator(seq130_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq131_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq131_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("PCI", var7_const_), (new seq132_create_element((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq131_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq131_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq131_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq131_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Marks", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(0m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq132_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq132_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq132_create_element closure;
                string var1_const_;
                public Enumerator(seq132_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4233", var1_const_), Altova.Functions.Core.Box("23"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C210", var1_const_), (new seq133_map_filter_elements(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq133_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq133_map_filter_elements(
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq133_map_filter_elements closure;
                string var2_const_http___www_CityOcean;
                IEnumerator var1_map_filter_elements;
                public Enumerator(seq133_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var2_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var2_const_http___www_CityOcean), closure.var3_cur_filter_elements)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7102", ""), (new seq134_if_if_exists((Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq134_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq134_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq134_if_if_exists closure;
                public Enumerator(seq134_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq135_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq135_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq135_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq135_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq135_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq136_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq136_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq136_create_element closure;
                string var2_const_;
                Altova.Types.QName var3_create_qname;
                public Enumerator(seq136_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                var3_create_qname = (Altova.Functions.Core.CreateQName("MEA", var2_const_));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EQD", var2_const_), (new seq137_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq139_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 9;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq141_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 9:
                                state = 22;
                                if (!((bool)Altova.Functions.Core.First((new seq144_if_exists(closure.var1_cur_filter_elements))))) { state = 17; goto case 17; }
                                Altova.Functions.Core.ThrowUserException("Packaging unit is incorrect, please contact the computer staff.");
                                goto case 22;
                            case 17:
                                state = 22;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq145_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 22:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SEL", var2_const_), (new seq148_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq137_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq137_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq137_create_element closure;
                string var1_const_;
                public Enumerator(seq137_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8053", var1_const_), Altova.Functions.Core.Box("CN"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C237", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8260", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("No", "http://tempuri.org/EDI-MBL.xsd"), closure.var2_cur_filter_elements)))))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C224", var1_const_), (new seq138_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq138_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq138_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq138_create_element closure;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq138_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContainerTypeISOCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8155", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var3_const_), Altova.Functions.Core.Box("102"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box("5"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq139_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq139_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq139_create_element closure;
                string var1_const_;
                public Enumerator(seq139_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("G"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq140_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq140_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq140_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq140_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq140_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("KGM"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq141_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq141_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq141_create_element closure;
                string var1_const_;
                public Enumerator(seq141_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("VOL"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq142_if_exists(closure.var2_cur_filter_elements))))) { state = 14; goto case 14; }
                                Altova.Functions.Core.ThrowUserException("Volume must input");
                                return false;
                            case 14:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq143_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq142_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq142_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq142_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq142_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = (Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))) == (0m);
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq143_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq143_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq143_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq143_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("MTQ"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq144_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq144_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq144_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq144_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq145_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq145_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq145_create_element closure;
                string var1_const_;
                public Enumerator(seq145_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("PKG"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq146_if_exists(closure.var2_cur_filter_elements))))) { state = 14; goto case 14; }
                                Altova.Functions.Core.ThrowUserException("Weight must input");
                                return false;
                            case 14:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq147_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq146_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq146_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq146_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq146_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = (Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))) == (0m);
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq147_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq147_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq147_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq147_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq148_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq148_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq148_create_element closure;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq148_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SealNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F9308", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C215", var3_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F9303", var3_const_), Altova.Functions.Core.Box("CA"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq149_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq149_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq149_create_element closure;
                string var2_const_;
                Altova.Types.QName var3_create_qname;
                public Enumerator(seq149_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                var3_create_qname = (Altova.Functions.Core.CreateQName("MEA", var2_const_));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EQD", var2_const_), (new seq150_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq152_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 9;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq154_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 9:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq157_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var2_const_), (new seq160_create_element()));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq150_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq150_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq150_create_element closure;
                string var1_const_;
                public Enumerator(seq150_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8053", var1_const_), Altova.Functions.Core.Box("CM"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C237", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8260", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("No", "http://tempuri.org/EDI-MBL.xsd"), closure.var2_cur_filter_elements)))))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C224", var1_const_), (new seq151_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq151_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq151_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq151_create_element closure;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq151_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContainerTypeISOCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8155", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var3_const_), Altova.Functions.Core.Box("102"));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box("5"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq152_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq152_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq152_create_element closure;
                string var1_const_;
                public Enumerator(seq152_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("G"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq153_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq153_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq153_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq153_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq153_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("KGM"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq154_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq154_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq154_create_element closure;
                string var1_const_;
                public Enumerator(seq154_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("VOL"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq155_if_exists(closure.var2_cur_filter_elements))))) { state = 14; goto case 14; }
                                Altova.Functions.Core.ThrowUserException("Volume must input");
                                return false;
                            case 14:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq156_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq155_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq155_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq155_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq155_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = (Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))) == (0m);
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq156_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq156_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq156_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq156_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("MTQ"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq157_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq157_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq157_create_element closure;
                string var1_const_;
                public Enumerator(seq157_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("PKG"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq158_if_exists(closure.var2_cur_filter_elements))))) { state = 14; goto case 14; }
                                Altova.Functions.Core.ThrowUserException("Weight must input");
                                return false;
                            case 14:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq159_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq158_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq158_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq158_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq158_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = (Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)))) == (0m);
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq159_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq159_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq159_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq159_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContainerTypeISOCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq160_create_element : IEnumerable
        {

            public seq160_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq160_create_element closure;
                string var1_const_;
                public Enumerator(seq160_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var1_const_), Altova.Functions.Core.Box("01"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var1_const_), Altova.Functions.Core.Box(" "))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
    }
}
