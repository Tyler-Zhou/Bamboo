////////////////////////////////////////////////////////////////////////
//
// MappingMapToIFTMBF.cs
//
// This file was generated by MapForce 2010.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Xml;
using Altova.Xml;

using ICP.EDI.ServiceInterface;



namespace HANJIN.Booking
{

    public class MappingMapToEnvelope : Altova.TraceProvider, IMapping
    {
        private bool runDoesCloseAll = true;
        public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; } }




        #region Members
        // instances
        protected XmlNode m_mbl2Instance;
        // members
        #endregion //Members


        public void Run(String mbl2SourceFilename, string EnvelopeTargetFilename)
        {
            // open source streams
            WriteTrace("Loading " + mbl2SourceFilename + "...\n");
            Altova.IO.Input mbl2Source = new Altova.IO.FileInput(mbl2SourceFilename);
            // open target stream
            Altova.IO.Output EnvelopeTarget = new Altova.IO.FileOutput(EnvelopeTargetFilename);

            // run
            Run(mbl2Source, EnvelopeTarget);

            // close source streams
            mbl2Source.Stream.Close();
            // close target stream
            WriteTrace("Saving " + EnvelopeTargetFilename + "...\n");
            EnvelopeTarget.Stream.Close();
        }

        public void Run(Altova.IO.Input mbl2Source, Altova.IO.Output EnvelopeTarget)
        {
            // Open the source(s)
            XmlDocument mbl2DocSourceObject = XmlTreeOperations.LoadDocument(mbl2Source);


            m_mbl2Instance = mbl2DocSourceObject;
            mbl2Source.Close();
            // Create the target
            Envelope.EnvelopeDocument EnvelopeTargetDoc = new Envelope.EnvelopeDocument();
            Altova.TextParser.ITextNode EnvelopeTargetObject = EnvelopeTargetDoc.Generator;

            // Execute mapping

            seq1_Main mapping = new seq1_Main(
new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_mbl2Instance, mbl2Source.Filename));

            Altova.Mapforce.MFTextWriter.Write(mapping, EnvelopeTargetObject);

            // Close the target

            EnvelopeTargetDoc.SetEncoding("ISO-8859-1", false, false);
            EnvelopeTargetDoc.Save(EnvelopeTarget);

            // Close the Source Library

            if (runDoesCloseAll)
            {
                mbl2Source.Close();
                EnvelopeTarget.Close();
            }
        }
        class seq1_Main : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_instance_mbl;

            public seq1_Main(
                Altova.Mapforce.IMFNode var1_instance_mbl
                )
            {
                this.var1_instance_mbl = var1_instance_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq1_Main closure;
                string var2_const_;
                public Enumerator(seq1_Main closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Envelope", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Interchange", var2_const_), (new seq2_create_element(closure.var1_instance_mbl)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq2_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_mbl;

            public seq2_create_element(
                Altova.Mapforce.IMFNode var1_mbl
                )
            {
                this.var1_mbl = var1_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq2_create_element closure;
                string var2_const_;
                public Enumerator(seq2_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNB", var2_const_), (new seq3_create_element(closure.var1_mbl)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Group", var2_const_), (new seq7_cond_map_filter_elements(closure.var1_mbl)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq3_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_mbl;

            public seq3_create_element(
                Altova.Mapforce.IMFNode var1_mbl
                )
            {
                this.var1_mbl = var1_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq3_create_element closure;
                string var6_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq3_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var6_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_mbl));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 6; goto case 6; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 22;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S001", var6_const_), (new seq4_create_element()));
                                pos++;
                                return true;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DocumentNo", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0020", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 6;
                            case 22:
                                state = 23;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S002", var6_const_), (new seq5_create_element(closure.var1_mbl)));
                                pos++;
                                return true;
                            case 23:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("S003", var6_const_), (new seq6_create_element()));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq4_create_element : IEnumerable
        {

            public seq4_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq4_create_element closure;
                string var1_const_;
                public Enumerator(seq4_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0001", var1_const_), Altova.Functions.Core.Box("UNOA"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0002", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(1m)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq5_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_mbl;

            public seq5_create_element(
                Altova.Mapforce.IMFNode var1_mbl
                )
            {
                this.var1_mbl = var1_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq5_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                System.Collections.IEnumerable var5_filter_elements;
                public Enumerator(seq5_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_mbl));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 6; goto case 6; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0007", ""), Altova.Functions.Core.Box("ZZ"));
                                pos++;
                                return true;
                            case 9:
                                state = 9;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CompanyCode", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0004", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                            case 10:
                                state = 6;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                goto case 6;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq6_create_element : IEnumerable
        {

            public seq6_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq6_create_element closure;
                string var1_const_;
                public Enumerator(seq6_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0010", var1_const_), Altova.Functions.Core.Box("SMLM"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0007", var1_const_), Altova.Functions.Core.Box("ZZ"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq7_cond_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_mbl;

            public seq7_cond_map_filter_elements(
                Altova.Mapforce.IMFNode var1_mbl
                )
            {
                this.var1_mbl = var1_mbl;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq7_cond_map_filter_elements closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                IEnumerator var2_map_filter_elements;
                IEnumerator var5_map_filter_elements;
                public Enumerator(seq7_cond_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 9;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_mbl));
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
                                goto case 9;
                            case 9:
                                state = 13;
                                if (!var2_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                var5_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))).GetEnumerator();
                                goto case 13;
                            case 10:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                                return false;
                            case 13:
                                state = 13;
                                if (!var5_map_filter_elements.MoveNext()) { state = 14; goto case 14; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Message_IFTMBF", ""), (new seq8_create_element(((Altova.Mapforce.IMFEnumerator)var5_map_filter_elements).Position, (Altova.Mapforce.IMFNode)(var5_map_filter_elements.Current), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 14:
                                state = 9;
                                Altova.Mapforce.MFEnumerator.Dispose(var5_map_filter_elements); var5_map_filter_elements = null;
                                goto case 9;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var5_map_filter_elements); var5_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
                }
            }

        }
        class seq8_create_element : IEnumerable
        {
            int var2_idx_filter_elements;
            Altova.Mapforce.IMFNode var3_cur_filter_elements;
            Altova.Mapforce.IMFNode var4_cur_filter_elements;

            public seq8_create_element(
                int var2_idx_filter_elements,
                Altova.Mapforce.IMFNode var3_cur_filter_elements,
                Altova.Mapforce.IMFNode var4_cur_filter_elements
                )
            {
                this.var2_idx_filter_elements = var2_idx_filter_elements;
                this.var3_cur_filter_elements = var3_cur_filter_elements;
                this.var4_cur_filter_elements = var4_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq8_create_element closure;
                string var1_const_;
                IEnumerator var5_map_group_by;
                public Enumerator(seq8_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNH", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0062", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(closure.var2_idx_filter_elements)))))));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("BGM", var1_const_), (new seq9_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 6:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTM", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C507", var1_const_), (new seq11_create_element()))));
                                pos++;
                                return true;
                            case 7:
                                state = 8;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TSR", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C536", var1_const_), (new seq16_cond_cond_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 8:
                                state = 11;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var1_const_), (new seq17_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var1_const_), (new seq22_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 14:
                                state = 17;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var1_const_), (new seq28_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 17:
                                state = 20;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FTX", var1_const_), (new seq34_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 20:
                                state = 23;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG3", var1_const_), (new seq40_if_if_exists(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 23:
                                state = 26;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG7", var1_const_), (new seq43_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 26:
                                state = 29;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG10", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var1_const_), (new seq64_create_element(closure.var3_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 29:
                                state = 32;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG10", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", var1_const_), (new seq69_create_element(closure.var4_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 32:
                                state = 35;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG10", var1_const_), (new seq74_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 35:
                                state = 46;
                                if (!((bool)Altova.Functions.Core.First((new seq83_if_exists(closure.var3_cur_filter_elements))))) { state = 43; goto case 43; }
                                Altova.Functions.Core.ThrowUserException("Packaging unit is incorrect, please contact the computer staff.");
                                goto case 46;
                            case 43:
                                state = 46;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG16", var1_const_), (new seq84_create_element(closure.var3_cur_filter_elements)));
                                pos++;
                                return true;
                            case 46:
                                state = 47;
                                var5_map_group_by = (Altova.Functions.Core.GroupBy(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Container", "http://tempuri.org/EDI-MBL.xsd"), closure.var3_cur_filter_elements), new Altova.Mapforce.MFInvoke(seq91_lambda.Invoke))).GetEnumerator();
                                goto case 47;
                            case 47:
                                state = 47;
                                if (!var5_map_group_by.MoveNext()) { state = 48; goto case 48; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG32", var1_const_), (new seq92_create_element((Altova.Mapforce.Group)(var5_map_group_by.Current))));
                                pos++;
                                return true;
                            case 48:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var5_map_group_by); var5_map_group_by = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("UNT", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F0062", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(closure.var2_idx_filter_elements)))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var5_map_group_by); var5_map_group_by = null;
                }
            }

        }
        class seq9_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq9_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq9_create_element closure;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq9_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Flag", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C002", var3_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1001", var3_const_), Altova.Functions.Core.Box("335"))));
                                pos++;
                                return true;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C106", var3_const_), (new seq10_cond_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq10_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq10_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq10_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq10_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SoNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1004", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq11_create_element : IEnumerable
        {

            public seq11_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq11_create_element closure;
                int var3_;
                string var2_string;
                string var1_const_;
                public Enumerator(seq11_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_ = (Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(2m))));
                                var2_string = (Altova.Functions.Core.ToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.YearFromDatetime(Altova.Functions.Lang.Now())))));
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2005", var1_const_), Altova.Functions.Core.Box("137"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2380", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Lang.Left(var2_string, var3_), Altova.Functions.Lang.Right(var2_string, var3_)), (string)Altova.Functions.Core.First((new seq12_if_less()))), (string)Altova.Functions.Core.First((new seq13_if_less()))), (string)Altova.Functions.Core.First((new seq14_if_less()))), (string)Altova.Functions.Core.First((new seq15_if_less())))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F2379", var1_const_), Altova.Functions.Core.Box("203"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq12_if_less : IEnumerable
        {

            public seq12_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq12_if_less closure;
                int var2_month_from_datetime;
                decimal var1_cast;
                public Enumerator(seq12_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_month_from_datetime = (Altova.Functions.Lang.MonthFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_month_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_month_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq13_if_less : IEnumerable
        {

            public seq13_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq13_if_less closure;
                int var2_day_from_datetime;
                decimal var1_cast;
                public Enumerator(seq13_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_day_from_datetime = (Altova.Functions.Lang.DayFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_day_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_day_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq14_if_less : IEnumerable
        {

            public seq14_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq14_if_less closure;
                int var2_hour_from_datetime;
                decimal var1_cast;
                public Enumerator(seq14_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_hour_from_datetime = (Altova.Functions.Lang.HourFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_hour_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_hour_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq15_if_less : IEnumerable
        {

            public seq15_if_less(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq15_if_less closure;
                int var2_minute_from_datetime;
                decimal var1_cast;
                public Enumerator(seq15_if_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_minute_from_datetime = (Altova.Functions.Lang.MinuteFromDatetime(Altova.Functions.Lang.Now()));
                                var1_cast = (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var2_minute_from_datetime)));
                                if (!((var1_cast) < (10m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat("0", Altova.Functions.Core.ToString(var1_cast));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong((int)Altova.Functions.Core.First(Altova.Functions.Core.Box(var2_minute_from_datetime)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq16_cond_cond_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq16_cond_cond_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq16_cond_cond_create_element closure;
                System.Collections.IEnumerable var2_filter_elements;
                System.Collections.IEnumerable var3_vmf1_inputtoresult;
                public Enumerator(seq16_cond_cond_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryTerm", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                var3_vmf1_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf.vmf1_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_vmf1_inputtoresult))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4065", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var3_vmf1_inputtoresult)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq17_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq17_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq17_create_element closure;
                string var1_const_;
                public Enumerator(seq17_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var1_const_), Altova.Functions.Core.Box("AAA"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var1_const_), (new seq18_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq18_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq18_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq18_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq18_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var7_const_), (new seq20_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq19_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq19_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq19_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq19_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("GoodsInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(50m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(0m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq20_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq20_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq20_if_if_exists closure;
                public Enumerator(seq20_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq21_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq21_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq21_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq21_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq21_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq22_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq22_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq22_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                public Enumerator(seq22_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var7_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq23_if_equal((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var7_const_), (new seq25_create_element(closure.var5_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq23_if_equal : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq23_if_equal(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq23_if_equal closure;
                public Enumerator(seq23_if_equal closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.Count((new seq24_map_filter_elements(closure.var1_cur_filter_elements)))))) == (0m))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "AAI";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq24_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq24_map_filter_elements(
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq24_map_filter_elements closure;
                string var2_const_http___www_CityOcean;
                IEnumerator var1_map_filter_elements;
                public Enumerator(seq24_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var2_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var2_const_http___www_CityOcean), closure.var3_cur_filter_elements)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var1_map_filter_elements).Position))) > (5m))) { state = 5; goto case 5; }
                                current = var1_map_filter_elements.Current;
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq25_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq25_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq25_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq25_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var11_map_filter_elements).Position))) > (5m))) { state = 27; goto case 27; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var7_const_), (new seq26_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq26_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq26_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq26_if_if_exists closure;
                public Enumerator(seq26_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq27_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq27_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq27_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq27_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq27_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq28_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq28_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq28_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                public Enumerator(seq28_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var7_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq29_if_equal((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var7_const_), (new seq31_create_element(closure.var5_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq29_if_equal : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq29_if_equal(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq29_if_equal closure;
                public Enumerator(seq29_if_equal closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.Count((new seq30_map_filter_elements(closure.var1_cur_filter_elements)))))) == (0m))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "AAI";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq30_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq30_map_filter_elements(
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq30_map_filter_elements closure;
                string var2_const_http___www_CityOcean;
                IEnumerator var1_map_filter_elements;
                public Enumerator(seq30_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var2_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var2_const_http___www_CityOcean), closure.var3_cur_filter_elements)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var1_map_filter_elements).Position))) > (10m))) { state = 5; goto case 5; }
                                current = var1_map_filter_elements.Current;
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq31_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq31_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq31_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq31_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var11_map_filter_elements).Position))) > (10m))) { state = 27; goto case 27; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var7_const_), (new seq32_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq32_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq32_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq32_if_if_exists closure;
                public Enumerator(seq32_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq33_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq33_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq33_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq33_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq33_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq34_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq34_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq34_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                public Enumerator(seq34_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 19;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))) { state = 19; goto case 19; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4451", var7_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq35_if_equal((Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current))))));
                                pos++;
                                return true;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C108", var7_const_), (new seq37_create_element(closure.var5_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq35_if_equal : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq35_if_equal(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq35_if_equal closure;
                public Enumerator(seq35_if_equal closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Core.Count((new seq36_map_filter_elements(closure.var1_cur_filter_elements)))))) == (0m))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "AAI";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq36_map_filter_elements : IEnumerable
        {
            Altova.Mapforce.IMFNode var3_cur_filter_elements;

            public seq36_map_filter_elements(
                Altova.Mapforce.IMFNode var3_cur_filter_elements
                )
            {
                this.var3_cur_filter_elements = var3_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq36_map_filter_elements closure;
                string var2_const_http___www_CityOcean;
                IEnumerator var1_map_filter_elements;
                public Enumerator(seq36_map_filter_elements closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var2_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var2_const_http___www_CityOcean), closure.var3_cur_filter_elements)))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var1_map_filter_elements).Position))) > (15m))) { state = 5; goto case 5; }
                                current = var1_map_filter_elements.Current;
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                }
            }

        }
        class seq37_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq37_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq37_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq37_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq19_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(((Altova.Mapforce.IMFEnumerator)var11_map_filter_elements).Position))) > (15m))) { state = 27; goto case 27; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4440", var7_const_), (new seq38_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq38_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq38_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq38_if_if_exists closure;
                public Enumerator(seq38_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq39_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq39_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq39_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq39_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq39_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq40_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq40_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq40_if_if_exists closure;
                public Enumerator(seq40_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq41_if_exists(closure.var1_cur_filter_elements))))) { state = 12; goto case 12; }
                                Altova.Functions.Core.ThrowUserException("RefNo must input");
                                return false;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("RFF", ""), (new seq42_create_element()));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq41_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq41_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq41_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq41_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RefNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq42_create_element : IEnumerable
        {

            public seq42_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq42_create_element closure;
                public Enumerator(seq42_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq43_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq43_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq43_create_element closure;
                string var2_const_;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                public Enumerator(seq43_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 14;
                                if (!((bool)Altova.Functions.Core.First((new seq44_if_exists(closure.var1_cur_filter_elements))))) { state = 12; goto case 12; }
                                Altova.Functions.Core.ThrowUserException("error:voyage no format error.");
                                goto case 14;
                            case 12:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("TDT", ""), (new seq51_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 14:
                                state = 16;
                                var2_const_ = ("");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("LOC", var2_const_));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("SG8", var2_const_));
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq54_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 16:
                                state = 17;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq57_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 17:
                                state = 18;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq59_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 18:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq61_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq44_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq44_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq44_if_exists closure;
                public Enumerator(seq44_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Contains((string)Altova.Functions.Core.First((new seq45_if_equal_or_less(closure.var1_cur_filter_elements))), "error:");
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq45_if_equal_or_less : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq45_if_equal_or_less(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq45_if_equal_or_less closure;
                string var2_const__;
                int var3_string_length;
                public Enumerator(seq45_if_equal_or_less closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_const__ = (">");
                                var3_string_length = (Altova.Functions.Core.StringLength(Altova.Functions.Core.SubstringBefore(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat(Altova.Functions.Core.Concat((string)Altova.Functions.Core.First((new seq46_if_logical_and(closure.var1_cur_filter_elements))), (string)Altova.Functions.Core.First((new seq47_if_logical_and(closure.var1_cur_filter_elements)))), (string)Altova.Functions.Core.First((new seq48_if_logical_and(closure.var1_cur_filter_elements)))), (string)Altova.Functions.Core.First((new seq49_if_logical_and(closure.var1_cur_filter_elements)))), (string)Altova.Functions.Core.First((new seq50_if_logical_and(closure.var1_cur_filter_elements)))), var2_const__), var2_const__)));
                                if (!((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(var3_string_length))) <= (4m))) { state = 11; goto case 11; }
                                current = Altova.Functions.Core.Concat((string)Altova.Functions.Core.First(vmf.vmf2_inputtoresult.Create(var3_string_length)), Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "error:voyage no error";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq46_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq46_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq46_if_logical_and closure;
                decimal var4_const_0;
                double var2_;
                string var3_substring;
                public Enumerator(seq46_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var4_const_0 = (0m);
                                var2_ = (Altova.CoreTypes.DecimalToDouble(1m));
                                var3_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), var2_, var2_));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var3_substring, "0")))) >= (var4_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var3_substring)))) >= (var4_const_0)))) { state = 11; goto case 11; }
                                current = var3_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq47_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq47_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq47_if_logical_and closure;
                decimal var3_const_0;
                string var2_substring;
                public Enumerator(seq47_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_0 = (0m);
                                var2_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), Altova.CoreTypes.DecimalToDouble(2m), Altova.CoreTypes.DecimalToDouble(1m)));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var2_substring, "0")))) >= (var3_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var2_substring)))) >= (var3_const_0)))) { state = 11; goto case 11; }
                                current = var2_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq48_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq48_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq48_if_logical_and closure;
                decimal var3_const_0;
                string var2_substring;
                public Enumerator(seq48_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_0 = (0m);
                                var2_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), Altova.CoreTypes.DecimalToDouble(3m), Altova.CoreTypes.DecimalToDouble(1m)));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var2_substring, "0")))) >= (var3_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var2_substring)))) >= (var3_const_0)))) { state = 11; goto case 11; }
                                current = var2_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq49_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq49_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq49_if_logical_and closure;
                decimal var3_const_0;
                string var2_substring;
                public Enumerator(seq49_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_0 = (0m);
                                var2_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), Altova.CoreTypes.DecimalToDouble(4m), Altova.CoreTypes.DecimalToDouble(1m)));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var2_substring, "0")))) >= (var3_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var2_substring)))) >= (var3_const_0)))) { state = 11; goto case 11; }
                                current = var2_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq50_if_logical_and : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq50_if_logical_and(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq50_if_logical_and closure;
                decimal var3_const_0;
                string var2_substring;
                public Enumerator(seq50_if_logical_and closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var3_const_0 = (0m);
                                var2_substring = (Altova.Functions.Core.Substring(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements))), Altova.CoreTypes.DecimalToDouble(5m), Altova.CoreTypes.DecimalToDouble(1m)));
                                if (!(Altova.Functions.Core.LogicalAnd((Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare(var2_substring, "0")))) >= (var3_const_0), (Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.Functions.Lang.StringCompare("9", var2_substring)))) >= (var3_const_0)))) { state = 11; goto case 11; }
                                current = var2_substring;
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = ">";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq51_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq51_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq51_create_element closure;
                string var2_const_;
                public Enumerator(seq51_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8051", var2_const_), Altova.Functions.Core.Box("20"));
                                pos++;
                                return true;
                            case 5:
                                state = 7;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Voyage", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 7; goto case 7; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8028", var2_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq45_if_equal_or_less(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 7:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C220", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8067", var2_const_), Altova.Functions.Core.Box("1"))));
                                pos++;
                                return true;
                            case 13:
                                state = 14;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C040", var2_const_), (new seq52_create_element()));
                                pos++;
                                return true;
                            case 14:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C222", var2_const_), (new seq53_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq52_create_element : IEnumerable
        {

            public seq52_create_element(
                )
            {
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq52_create_element closure;
                string var1_const_;
                public Enumerator(seq52_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3127", var1_const_), Altova.Functions.Core.Box("SMLM"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var1_const_), Altova.Functions.Core.Box("172"));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var1_const_), Altova.Functions.Core.Box("182"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq53_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq53_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq53_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq53_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Vessel", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("VesselCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8213", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8212", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq54_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq54_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq54_create_element closure;
                public Enumerator(seq54_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq55_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", ""), (new seq56_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq55_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq55_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq55_if_empty closure;
                public Enumerator(seq55_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "88";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq56_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq56_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq56_create_element closure;
                string var4_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq56_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocCode", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var3_const_), Altova.Functions.Core.Box("139"));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq57_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq57_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq57_create_element closure;
                string var1_const_;
                public Enumerator(seq57_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("9"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq58_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq58_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq58_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq58_create_element closure;
                string var4_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq58_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolCode", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var3_const_), Altova.Functions.Core.Box("139"));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq59_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq59_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq59_create_element closure;
                string var1_const_;
                public Enumerator(seq59_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("11"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq60_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq60_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq60_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq60_create_element closure;
                string var4_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                string var3_const_;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq60_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var3_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodCode", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var3_const_), Altova.Functions.Core.Box("139"));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var3_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq61_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq61_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq61_create_element closure;
                string var1_const_;
                public Enumerator(seq61_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3227", var1_const_), Altova.Functions.Core.Box("7"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C517", var1_const_), (new seq62_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq62_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq62_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq62_create_element closure;
                string var4_const_;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var5_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq62_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3225", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements)))) { state = 13; goto case 13; }
                                goto case 15;
                            case 13:
                                state = 19;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var4_const_), Altova.Functions.Core.Box("6"));
                                pos++;
                                return true;
                            case 15:
                                state = 13;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First((new seq63_if_empty(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 19:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3224", var4_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq63_if_empty : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq63_if_empty(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq63_if_empty closure;
                public Enumerator(seq63_if_empty closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!(Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ReceiveLocName", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements)))))) { state = 11; goto case 11; }
                                current = "";
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = "139";
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq64_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq64_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq64_create_element closure;
                string var1_const_;
                public Enumerator(seq64_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("CZ"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C058", var1_const_), (new seq65_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq65_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq65_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq65_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToL;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq65_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToL = ("ICP3ParseCustomerToList");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, "http://www.CityOcean.com/"), (new seq66_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, var10_const_http___www_CityOcean), (new seq66_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3124", var7_const_), (new seq67_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq66_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq66_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq66_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq66_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ShipperInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(0m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq67_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq67_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq67_if_if_exists closure;
                public Enumerator(seq67_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq68_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq68_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq68_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq68_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq68_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq69_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq69_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq69_create_element closure;
                string var1_const_;
                public Enumerator(seq69_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("FW"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C082", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3039", var1_const_), Altova.Functions.Core.Box("CN183868"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C058", var1_const_), (new seq70_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq70_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq70_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq70_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseStringToXml;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq70_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseStringToXml = ("ICP3ParseStringToXml");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, "http://www.CityOcean.com/"), (new seq71_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToXml, var10_const_http___www_CityOcean), (new seq71_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToXml, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToXml"), "http://www.CityOcean.com/ICP3ParseStringToXml", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToXmlResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3124", var7_const_), (new seq72_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq71_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq71_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq71_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq71_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("CompanyInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(0m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq72_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq72_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq72_if_if_exists closure;
                public Enumerator(seq72_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq73_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq73_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq73_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq73_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq73_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq74_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq74_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq74_create_element closure;
                public Enumerator(seq74_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 7;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("NAD", ""), (new seq75_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 7:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SG14", ""), (new seq80_if_if_exists(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq75_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq75_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq75_create_element closure;
                string var1_const_;
                public Enumerator(seq75_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3035", var1_const_), Altova.Functions.Core.Box("CN"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C058", var1_const_), (new seq76_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq76_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var5_cur_filter_elements;

            public seq76_create_element(
                Altova.Mapforce.IMFNode var5_cur_filter_elements
                )
            {
                this.var5_cur_filter_elements = var5_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq76_create_element closure;
                string var7_const_;
                string var6_const_ICP3ParseCustomerToL;
                string var2_const_http___schemas_xmlso;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                IEnumerator var1_map_filter_elements;
                IEnumerator var8_map_filter_elements;
                string var10_const_http___www_CityOcean;
                IEnumerator var9_map_filter_elements;
                System.Collections.IEnumerable var12_filter_elements;
                IEnumerator var11_map_filter_elements;
                public Enumerator(seq76_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var7_const_ = ("");
                                var6_const_ICP3ParseCustomerToL = ("ICP3ParseCustomerToList");
                                var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
                                var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, "http://www.CityOcean.com/"), (new seq77_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 9;
                                if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
                                var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
                                goto case 9;
                            case 6:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                                var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToL, var10_const_http___www_CityOcean), (new seq77_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToL, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToList"), "http://www.CityOcean.com/ICP3ParseCustomerToList", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
                                goto case 19;
                            case 9:
                                state = 9;
                                if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
                                Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
                                goto case 9;
                            case 10:
                                state = 5;
                                Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                                goto case 5;
                            case 19:
                                state = 27;
                                if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
                                var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToListResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
                                if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19; }
                                var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("string", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))).GetEnumerator();
                                goto case 27;
                            case 20:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                                return false;
                            case 27:
                                state = 27;
                                if (!var11_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3124", var7_const_), (new seq78_if_if_exists((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
                                pos++;
                                return true;
                            case 28:
                                state = 19;
                                Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                                goto case 19;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
                    Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
                }
            }

        }
        class seq77_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq77_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq77_create_element closure;
                string var4_const_;
                string var3_const_http___www_CityOcean;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq77_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var3_const_http___www_CityOcean = ("http://www.CityOcean.com/");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ConisgneeInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                pos++;
                                return true;
                            case 6:
                                state = 12;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("rowLength", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(35m))))))));
                                pos++;
                                return true;
                            case 12:
                                state = 13;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("maxRow", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(0m))))))));
                                pos++;
                                return true;
                            case 13:
                                state = 0;
                                current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("style", var3_const_http___www_CityOcean), var4_const_, Altova.Functions.Core.Box(var4_const_));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq78_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq78_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq78_if_if_exists closure;
                public Enumerator(seq78_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq79_if_exists(closure.var1_cur_filter_elements))))) { state = 10; goto case 10; }
                                return false;
                            case 10:
                                state = 0;
                                current = Altova.CoreTypes.NodeToString(closure.var1_cur_filter_elements);
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq79_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq79_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq79_if_exists closure;
                Altova.Types.QName var2_create_qname;
                public Enumerator(seq79_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_create_qname = (Altova.Functions.Core.CreateQName("nil", "http://www.w3.org/2001/XMLSchema-instance"));
                                if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements)))) { state = 11; goto case 11; }
                                current = Altova.CoreTypes.ParseBoolean(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterAttributes(var2_create_qname, closure.var1_cur_filter_elements))));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq80_if_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq80_if_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq80_if_if_exists closure;
                public Enumerator(seq80_if_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                if (!((bool)Altova.Functions.Core.First((new seq81_if_exists(closure.var1_cur_filter_elements))))) { state = 12; goto case 12; }
                                Altova.Functions.Core.ThrowUserException("PREPAID/COLLECT must input");
                                return false;
                            case 12:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("CPI", ""), (new seq82_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq81_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq81_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq81_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq81_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PaymentTerm", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq82_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq82_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq82_create_element closure;
                string var4_const_;
                System.Collections.IEnumerable var2_filter_elements;
                System.Collections.IEnumerable var3_vmf3_inputtoresult;
                public Enumerator(seq82_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var4_const_ = ("");
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PaymentTerm", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                var3_vmf3_inputtoresult = new Altova.Functions.Core.SequenceCache(vmf.vmf3_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
                                if (!(Altova.Functions.Core.Exists(var3_vmf3_inputtoresult))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F4237", ""), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var3_vmf3_inputtoresult)));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C229", var4_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F5237", var4_const_), Altova.Functions.Core.Box("4"))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq83_if_exists : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq83_if_exists(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq83_if_exists closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq83_if_exists closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 11; goto case 11; }
                                current = Altova.Functions.Lang.Empty(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements)));
                                pos++;
                                return true;
                            case 11:
                                state = 0;
                                current = Altova.CoreTypes.ParseBoolean("false");
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq84_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq84_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq84_create_element closure;
                string var2_const_;
                Altova.Types.QName var4_create_qname;
                Altova.Types.QName var3_create_qname;
                public Enumerator(seq84_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                var4_create_qname = (Altova.Functions.Core.CreateQName("MEA", var2_const_));
                                var3_create_qname = (Altova.Functions.Core.CreateQName("SG18", var2_const_));
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GID", var2_const_), (new seq85_create_element(closure.var1_cur_filter_elements)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq87_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, (new seq89_create_element(closure.var1_cur_filter_elements)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq85_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq85_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq85_create_element closure;
                string var1_const_;
                public Enumerator(seq85_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1496", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(1m)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C213", var1_const_), (new seq86_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq86_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq86_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq86_create_element closure;
                string var3_const_http___tempuri_org_E;
                System.Collections.IEnumerable var4_filter_elements;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq86_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 6;
                                var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
                                var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("QtyUnitISOCode", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", var3_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7224", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
                                pos++;
                                return true;
                            case 6:
                                state = 15;
                                if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 0; return false; }
                                goto case 15;
                            case 15:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F7065", ""), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq87_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq87_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq87_create_element closure;
                string var1_const_;
                public Enumerator(seq87_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("AAW"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq88_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq88_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq88_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq88_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq88_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Volume", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("CBM"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq89_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var2_cur_filter_elements;

            public seq89_create_element(
                Altova.Mapforce.IMFNode var2_cur_filter_elements
                )
            {
                this.var2_cur_filter_elements = var2_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq89_create_element closure;
                string var1_const_;
                public Enumerator(seq89_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6311", var1_const_), Altova.Functions.Core.Box("AAE"));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C502", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6313", var1_const_), Altova.Functions.Core.Box("G"))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C174", var1_const_), (new seq90_create_element(closure.var2_cur_filter_elements)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq90_create_element : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_cur_filter_elements;

            public seq90_create_element(
                Altova.Mapforce.IMFNode var1_cur_filter_elements
                )
            {
                this.var1_cur_filter_elements = var1_cur_filter_elements;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq90_create_element closure;
                System.Collections.IEnumerable var3_filter_elements;
                string var2_const_;
                public Enumerator(seq90_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Weight", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6411", var2_const_), Altova.Functions.Core.Box("KGM"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6314", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq91_lambda : IEnumerable
        {
            Altova.Mapforce.IMFNode var1_l0;

            public seq91_lambda(
                Altova.Mapforce.IMFNode var1_l0
                )
            {
                this.var1_l0 = var1_l0;
            }

            public static IEnumerable Invoke(object o1)
            {
                return new seq91_lambda((Altova.Mapforce.IMFNode)o1);
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq91_lambda closure;
                System.Collections.IEnumerable var2_filter_elements;
                public Enumerator(seq91_lambda closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 0;
                                var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContainerTypeISOCode", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_l0));
                                if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
                                current = Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq92_create_element : IEnumerable
        {
            Altova.Mapforce.Group var1_cur_group_by;

            public seq92_create_element(
                Altova.Mapforce.Group var1_cur_group_by
                )
            {
                this.var1_cur_group_by = var1_cur_group_by;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq92_create_element closure;
                string var2_const_;
                public Enumerator(seq92_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EQD", var2_const_), (new seq93_create_element(closure.var1_cur_group_by)));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EQN", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C523", var2_const_), (new seq95_map_group_items(closure.var1_cur_group_by)))));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq93_create_element : IEnumerable
        {
            Altova.Mapforce.Group var2_cur_group_by;

            public seq93_create_element(
                Altova.Mapforce.Group var2_cur_group_by
                )
            {
                this.var2_cur_group_by = var2_cur_group_by;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq93_create_element closure;
                string var1_const_;
                public Enumerator(seq93_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8053", var1_const_), Altova.Functions.Core.Box("CN"));
                                pos++;
                                return true;
                            case 5:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("C224", var1_const_), (new seq94_create_element(closure.var2_cur_group_by)));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq94_create_element : IEnumerable
        {
            Altova.Mapforce.Group var1_cur_group_by;

            public seq94_create_element(
                Altova.Mapforce.Group var1_cur_group_by
                )
            {
                this.var1_cur_group_by = var1_cur_group_by;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq94_create_element closure;
                string var2_const_;
                public Enumerator(seq94_create_element closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var2_const_ = ("");
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F8155", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.GroupingKey(closure.var1_cur_group_by)));
                                pos++;
                                return true;
                            case 5:
                                state = 6;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1131", var2_const_), Altova.Functions.Core.Box("102"));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F3055", var2_const_), Altova.Functions.Core.Box("5"));
                                pos++;
                                return true;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                }
            }

        }
        class seq95_map_group_items : IEnumerable
        {
            Altova.Mapforce.Group var2_cur_group_by;

            public seq95_map_group_items(
                Altova.Mapforce.Group var2_cur_group_by
                )
            {
                this.var2_cur_group_by = var2_cur_group_by;
            }

            public IEnumerator GetEnumerator() { return new Enumerator(this); }

            class Enumerator : Altova.Mapforce.IMFEnumerator
            {
                int state = 1;
                object current = null;
                int pos = 0;
                seq95_map_group_items closure;
                IEnumerator var1_map_group_items;
                System.Collections.IEnumerable var3_filter_elements;
                public Enumerator(seq95_map_group_items closure)
                {
                    this.closure = closure;
                }

                public void Reset() { state = 0; pos = 0; }
                public int Position { get { return pos; } }
                public object Current { get { return current; } }

                public bool MoveNext()
                {
                    while (state != 0)
                    {
                        switch (state)
                        {
                            case 1:
                                state = 5;
                                var1_map_group_items = (Altova.Functions.Core.GroupItems(closure.var2_cur_group_by)).GetEnumerator();
                                goto case 5;
                            case 5:
                                state = 5;
                                if (!var1_map_group_items.MoveNext()) { state = 6; goto case 6; }
                                var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", "http://tempuri.org/EDI-MBL.xsd"), (Altova.Mapforce.IMFNode)(var1_map_group_items.Current)));
                                if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 5; goto case 5; }
                                current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F6350", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
                                pos++;
                                return true;
                            case 6:
                                state = 0;
                                Altova.Mapforce.MFEnumerator.Dispose(var1_map_group_items); var1_map_group_items = null;
                                return false;
                        }
                    }
                    return false;
                }

                public void Dispose()
                {
                    Altova.Mapforce.MFEnumerator.Dispose(var1_map_group_items); var1_map_group_items = null;
                }
            }

        }

    }
}
