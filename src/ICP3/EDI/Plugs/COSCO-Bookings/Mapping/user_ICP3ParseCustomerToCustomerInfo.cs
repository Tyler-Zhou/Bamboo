////////////////////////////////////////////////////////////////////////
//
// user/ICP3ParseCustomerToCustomerInfo.cs
//
// This file was generated by MapForce 2011r2.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System.Collections;


// application.libraries
namespace COSCO.Booking

{
	
	public class ICP3ParseCustomerToCustomerInfo : Altova.TraceProvider 
	{




		#region Members		
		// instances
		// members
		#endregion //Members

	class seq1_Main : IEnumerable
	{
		Altova.Functions.RuntimeContext var1_context;
		string var2_value;
	
		public seq1_Main(
			Altova.Functions.RuntimeContext var1_context,
			string var2_value
			)
		{
			this.var1_context = var1_context;
			this.var2_value = var2_value;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq1_Main closure;
			string var9_const_;
			string var8_const_ICP3ParseCustomerToC;
			string var7_const_http___www_CityOcean;
			string var4_const_http___schemas_xmlso;
			Altova.Types.QName var6_create_qname;
			Altova.Types.QName var5_create_qname;
			IEnumerator var3_map_filter_elements;
			IEnumerator var10_map_filter_elements;
			IEnumerator var11_map_filter_elements;
			public Enumerator(seq1_Main closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var9_const_ = ("");
						var8_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
						var7_const_http___www_CityOcean = ("http://www.CityOcean.com/");
						var4_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
						var6_create_qname = (Altova.Functions.Core.CreateQName("Body", var4_const_http___schemas_xmlso));
						var5_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var4_const_http___schemas_xmlso));
						var3_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var4_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var6_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var8_const_ICP3ParseCustomerToC, var7_const_http___www_CityOcean), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", var7_const_http___www_CityOcean), var9_const_, Altova.Functions.Core.Box(closure.var2_value)))))))), "ICP3EDIService", var8_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var9_const_, var9_const_, 0, var9_const_, var9_const_, 1))))))).GetEnumerator();
						goto case 5;			
					case 5:
						state = 9;				
						if (!var3_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
						var10_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var9_const_), (Altova.Mapforce.IMFNode)(var3_map_filter_elements.Current))).GetEnumerator();
						goto case 9;			
					case 6:
						state = 19;				
						Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
						var11_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var7_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var6_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var5_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var5_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var8_const_ICP3ParseCustomerToC, var7_const_http___www_CityOcean), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", var7_const_http___www_CityOcean), var9_const_, Altova.Functions.Core.Box(closure.var2_value)))))))), "ICP3EDIService", var8_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var9_const_, var9_const_, 0, var9_const_, var9_const_, 1))))))).GetEnumerator();
						goto case 19;			
					case 9:
						state = 9;				
						if (!var10_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
						Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var10_map_filter_elements.Current)));
						goto case 9;			
					case 10:
						state = 5;				
						Altova.Mapforce.MFEnumerator.Dispose(var10_map_filter_elements); var10_map_filter_elements = null;
						goto case 5;			
					case 19:
						state = 19;				
						if (!var11_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
						if (!(Altova.Functions.Core.Exists(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var7_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))))) { state = 19; goto case 19;  }
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("CustomerDescription", var9_const_), var9_const_, (new seq2_create_element_with_prefix((Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))));
						pos++;
						return true;
					case 20:
						state = 0;				
						Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
						return false;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var10_map_filter_elements); var10_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
			}
		}
				
	}
	class seq2_create_element_with_prefix : IEnumerable
	{
		Altova.Mapforce.IMFNode var2_cur_filter_elements;
	
		public seq2_create_element_with_prefix(
			Altova.Mapforce.IMFNode var2_cur_filter_elements
			)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq2_create_element_with_prefix closure;
			string var25_const_Remark;
			string var22_const_Contact;
			string var19_const_Fax;
			string var16_const_Tel;
			string var13_const_City;
			string var10_const_Country;
			string var7_const_Address;
			string var3_const_Name;
			string var1_const_http___www_CityOcean;
			Altova.Mapforce.IMFNode var6_filter_elements;
			System.Collections.IEnumerable var27_filter_elements;
			System.Collections.IEnumerable var24_filter_elements;
			System.Collections.IEnumerable var21_filter_elements;
			System.Collections.IEnumerable var18_filter_elements;
			System.Collections.IEnumerable var15_filter_elements;
			System.Collections.IEnumerable var12_filter_elements;
			System.Collections.IEnumerable var9_filter_elements;
			System.Collections.IEnumerable var5_filter_elements;
			string var4_const_;
			string var8_const_;
			string var11_const_;
			string var14_const_;
			string var17_const_;
			string var20_const_;
			string var23_const_;
			string var26_const_;
			public Enumerator(seq2_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 6;				
						var25_const_Remark = ("Remark");
						var22_const_Contact = ("Contact");
						var19_const_Fax = ("Fax");
						var16_const_Tel = ("Tel");
						var13_const_City = ("City");
						var10_const_Country = ("Country");
						var7_const_Address = ("Address");
						var3_const_Name = ("Name");
						var1_const_http___www_CityOcean = ("http://www.CityOcean.com/");
						var6_filter_elements = ((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var1_const_http___www_CityOcean), closure.var2_cur_filter_elements)));
						var27_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName(var25_const_Remark, var1_const_http___www_CityOcean), var6_filter_elements));
						var24_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName(var22_const_Contact, var1_const_http___www_CityOcean), var6_filter_elements));
						var21_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName(var19_const_Fax, var1_const_http___www_CityOcean), var6_filter_elements));
						var18_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName(var16_const_Tel, var1_const_http___www_CityOcean), var6_filter_elements));
						var15_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName(var13_const_City, var1_const_http___www_CityOcean), var6_filter_elements));
						var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName(var10_const_Country, var1_const_http___www_CityOcean), var6_filter_elements));
						var9_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName(var7_const_Address, var1_const_http___www_CityOcean), var6_filter_elements));
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName(var3_const_Name, var1_const_http___www_CityOcean), var6_filter_elements));
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 6; goto case 6;  }
						var4_const_ = ("");
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName(var3_const_Name, var4_const_), var4_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					case 6:
						state = 14;				
						if (!(Altova.Functions.Core.Exists(var9_filter_elements))) { state = 13; goto case 13;  }
						goto case 14;			
					case 13:
						state = 21;				
						if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 20; goto case 20;  }
						goto case 21;			
					case 14:
						state = 13;				
						var8_const_ = ("");
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName(var7_const_Address, var8_const_), var8_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var9_filter_elements))));
						pos++;
						return true;
					case 20:
						state = 28;				
						if (!(Altova.Functions.Core.Exists(var15_filter_elements))) { state = 27; goto case 27;  }
						goto case 28;			
					case 21:
						state = 20;				
						var11_const_ = ("");
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName(var10_const_Country, var11_const_), var11_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
						pos++;
						return true;
					case 27:
						state = 35;				
						if (!(Altova.Functions.Core.Exists(var18_filter_elements))) { state = 34; goto case 34;  }
						goto case 35;			
					case 28:
						state = 27;				
						var14_const_ = ("");
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName(var13_const_City, var14_const_), var14_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var15_filter_elements))));
						pos++;
						return true;
					case 34:
						state = 42;				
						if (!(Altova.Functions.Core.Exists(var21_filter_elements))) { state = 41; goto case 41;  }
						goto case 42;			
					case 35:
						state = 34;				
						var17_const_ = ("");
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName(var16_const_Tel, var17_const_), var17_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var18_filter_elements))));
						pos++;
						return true;
					case 41:
						state = 49;				
						if (!(Altova.Functions.Core.Exists(var24_filter_elements))) { state = 48; goto case 48;  }
						goto case 49;			
					case 42:
						state = 41;				
						var20_const_ = ("");
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName(var19_const_Fax, var20_const_), var20_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var21_filter_elements))));
						pos++;
						return true;
					case 48:
						state = 56;				
						if (!(Altova.Functions.Core.Exists(var27_filter_elements))) { state = 0; return false; }
						goto case 56;			
					case 49:
						state = 48;				
						var23_const_ = ("");
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName(var22_const_Contact, var23_const_), var23_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var24_filter_elements))));
						pos++;
						return true;
					case 56:
						state = 0;				
						var26_const_ = ("");
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName(var25_const_Remark, var26_const_), var26_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var27_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}


	public static IEnumerable Create(
		Altova.Functions.RuntimeContext var1_context,
		string var2_value
		)
	{
		return new seq1_Main(
			var1_context,
			var2_value
			);

	}


  } 
}
