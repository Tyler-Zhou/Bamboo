////////////////////////////////////////////////////////////////////////
//
// MappingMapToX12_Envelope.cs
//
// This file was generated by MapForce 2011r2.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////

using System;
using System.Collections;
using System.Xml;
using Altova.Xml;


using ICP.EDI.ServiceInterface; // application.libraries

namespace COSCO.Booking

{

    public class MappingMapToX12 : Altova.TraceProvider, IMapping 
	{
		private bool runDoesCloseAll = true;
		public bool CloseObjectsAfterRun { get { return runDoesCloseAll; } set { runDoesCloseAll = value; }	}


		#region Members		
		// instances
		protected XmlNode m_mbl2Instance;
		// members
		#endregion //Members

		public void Run(String mbl2SourceFilename, string X12_EnvelopeTargetFilename)
		{
		// open source streams
		WriteTrace("Loading " + mbl2SourceFilename + "...\n");
		Altova.IO.Input mbl2Source = new Altova.IO.FileInput(mbl2SourceFilename);
		// open target stream
		Altova.IO.Output X12_EnvelopeTarget = new Altova.IO.FileOutput(X12_EnvelopeTargetFilename);

		// run
		Run(mbl2Source, X12_EnvelopeTarget);

		// close source streams
		mbl2Source.Stream.Close();
		// close target stream
		WriteTrace("Saving " + X12_EnvelopeTargetFilename + "...\n");
		X12_EnvelopeTarget.Stream.Close();
	}

		public void Run(Altova.IO.Input mbl2Source, Altova.IO.Output X12_EnvelopeTarget)
		{
			// Open the source(s)
			XmlDocument mbl2DocSourceObject = XmlTreeOperations.LoadDocument(mbl2Source);


			m_mbl2Instance = mbl2DocSourceObject;
			mbl2Source.Close();	
			// Create the target
            COSCO.Booking.IFTMINDocument X12_EnvelopeTargetDoc = new IFTMINDocument();
			Altova.TextParser.ITextNode X12_EnvelopeTargetObject = X12_EnvelopeTargetDoc.Generator;

			// Execute mapping

			seq1_Main mapping = new seq1_Main( 
new Altova.Mapforce.DOMDocumentNodeAsMFNodeAdapter(m_mbl2Instance, mbl2Source.Filename));

			Altova.Mapforce.MFTextWriter.Write(mapping, X12_EnvelopeTargetObject);

			// Close the target

			X12_EnvelopeTargetDoc.SetEncoding( "ISO-8859-1", false, false );
			X12_EnvelopeTargetDoc.Save( X12_EnvelopeTarget );

			// Close the Source Library

			if (runDoesCloseAll)
			{
			mbl2Source.Close();
			X12_EnvelopeTarget.Close();
			}
        }


        #region IEnumerable
        class seq1_Main : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_instance_mbl;
	
		public seq1_Main(
			Altova.Mapforce.IMFNode var1_instance_mbl
			)
		{
			this.var1_instance_mbl = var1_instance_mbl;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq1_Main closure;
			string var2_const_;
			public Enumerator(seq1_Main closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 0;				
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Envelope", var2_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Interchange", var2_const_), (new seq2_create_element(closure.var1_instance_mbl)))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq2_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_mbl;
	
		public seq2_create_element(
			Altova.Mapforce.IMFNode var1_mbl
			)
		{
			this.var1_mbl = var1_mbl;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq2_create_element closure;
			string var2_const_;
			public Enumerator(seq2_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ISA", var2_const_), (new seq3_create_element(closure.var1_mbl)));
						pos++;
						return true;
					case 5:
						state = 8;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Group", var2_const_), (new seq4_create_element(closure.var1_mbl)));
						pos++;
						return true;
					case 8:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("IEA", var2_const_), (new seq34_create_element()));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq3_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var5_mbl;
	
		public seq3_create_element(
			Altova.Mapforce.IMFNode var5_mbl
			)
		{
			this.var5_mbl = var5_mbl;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq3_create_element closure;
			string var7_const_http___tempuri_org_E;
			System.Collections.IEnumerable var8_filter_elements;
			System.Collections.IEnumerable var4_const_ZZ;
			System.Collections.IEnumerable var3_const___________;
			System.Collections.IEnumerable var2_const_00;
			string var1_const_;
			System.Collections.IEnumerable var12_filter_elements;
			IEnumerator var6_map_filter_elements;
			IEnumerator var9_map_filter_elements;
			IEnumerator var11_map_filter_elements;
			System.Collections.IEnumerable var10_filter_elements;
			IEnumerator var13_map_filter_elements;
			System.Collections.IEnumerable var14_filter_elements;
			public Enumerator(seq3_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var7_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var8_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var7_const_http___tempuri_org_E), closure.var5_mbl));
						var4_const_ZZ = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("ZZ"));
						var3_const___________ = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("          "));
						var2_const_00 = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.Box("00"));
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI01", var1_const_), var2_const_00);
						pos++;
						return true;
					case 5:
						state = 6;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI02", var1_const_), var3_const___________);
						pos++;
						return true;
					case 6:
						state = 7;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI03", var1_const_), var2_const_00);
						pos++;
						return true;
					case 7:
						state = 8;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI04", var1_const_), var3_const___________);
						pos++;
						return true;
					case 8:
						state = 9;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI05_1", var1_const_), var4_const_ZZ);
						pos++;
						return true;
					case 9:
						state = 10;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI06", var1_const_), Altova.Functions.Core.Box("CITYOCEAN"));
						pos++;
						return true;
					case 10:
						state = 11;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI05_2", var1_const_), var4_const_ZZ);
						pos++;
						return true;
					case 11:
						state = 12;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI07", var1_const_), Altova.Functions.Core.Box("COSCONA        "));
						pos++;
						return true;
					case 12:
						state = 17;				
						if (!(Altova.Functions.Core.Exists(var8_filter_elements))) { state = 14; goto case 14;  }
						var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var7_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var8_filter_elements)));
						var6_map_filter_elements = (var12_filter_elements).GetEnumerator();
						goto case 17;			
					case 14:
						state = 49;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI65", var1_const_), Altova.Functions.Core.Box("U"));
						pos++;
						return true;
					case 17:
						state = 21;				
						if (!var6_map_filter_elements.MoveNext()) { state = 18; goto case 18; }
						var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var7_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var6_map_filter_elements.Current))).GetEnumerator();
						goto case 21;			
					case 18:
						state = 32;				
						Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
						var11_map_filter_elements = (var12_filter_elements).GetEnumerator();
						goto case 32;			
					case 21:
						state = 21;				
						if (!var9_map_filter_elements.MoveNext()) { state = 22; goto case 22; }
						var10_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendDate", var7_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var10_filter_elements))) { state = 21; goto case 21;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI08", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DateToString(Altova.CoreTypes.ParseDate(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var10_filter_elements))))));
						pos++;
						return true;
					case 22:
						state = 17;				
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
						goto case 17;			
					case 32:
						state = 36;				
						if (!var11_map_filter_elements.MoveNext()) { state = 33; goto case 33; }
						var13_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var7_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var11_map_filter_elements.Current))).GetEnumerator();
						goto case 36;			
					case 33:
						state = 14;				
						Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
						goto case 14;			
					case 36:
						state = 36;				
						if (!var13_map_filter_elements.MoveNext()) { state = 37; goto case 37; }
						var14_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendTime", var7_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var13_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var14_filter_elements))) { state = 36; goto case 36;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI09", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.TimeToString(Altova.CoreTypes.ParseTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var14_filter_elements))))));
						pos++;
						return true;
					case 37:
						state = 32;				
						Altova.Mapforce.MFEnumerator.Dispose(var13_map_filter_elements); var13_map_filter_elements = null;
						goto case 32;			
					case 49:
						state = 50;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI11", var1_const_), Altova.Functions.Core.Box("00401"));
						pos++;
						return true;
					case 50:
						state = 51;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI12", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("031950013"))));
						pos++;
						return true;
					case 51:
						state = 52;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI13", var1_const_), Altova.Functions.Core.Box("1"));
						pos++;
						return true;
					case 52:
						state = 53;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI14", var1_const_), Altova.Functions.Core.Box("P"));
						pos++;
						return true;
					case 53:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI15", var1_const_), Altova.Functions.Core.Box(">"));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var13_map_filter_elements); var13_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var11_map_filter_elements); var11_map_filter_elements = null;
			}
		}
				
	}
	class seq4_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_mbl;
	
		public seq4_create_element(
			Altova.Mapforce.IMFNode var1_mbl
			)
		{
			this.var1_mbl = var1_mbl;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq4_create_element closure;
			string var6_const_;
			string var3_const_http___tempuri_org_E;
			System.Collections.IEnumerable var4_filter_elements;
			IEnumerator var2_map_filter_elements;
			IEnumerator var5_map_filter_elements;
			public Enumerator(seq4_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var6_const_ = ("");
						var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var3_const_http___tempuri_org_E), closure.var1_mbl));
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GS", var6_const_), (new seq5_create_element(closure.var1_mbl)));
						pos++;
						return true;
					case 5:
						state = 10;				
						if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 28; goto case 28;  }
						var2_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))).GetEnumerator();
						goto case 10;			
					case 10:
						state = 14;				
						if (!var2_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
						var5_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var2_map_filter_elements.Current))).GetEnumerator();
						goto case 14;			
					case 11:
						state = 28;				
						Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
						goto case 28;			
					case 14:
						state = 14;				
						if (!var5_map_filter_elements.MoveNext()) { state = 15; goto case 15; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Message_300", var6_const_), (new seq6_create_element((Altova.Mapforce.IMFNode)(var5_map_filter_elements.Current))));
						pos++;
						return true;
					case 15:
						state = 10;				
						Altova.Mapforce.MFEnumerator.Dispose(var5_map_filter_elements); var5_map_filter_elements = null;
						goto case 10;			
					case 28:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("GE", var6_const_), (new seq33_create_element()));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var5_map_filter_elements); var5_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var2_map_filter_elements); var2_map_filter_elements = null;
			}
		}
				
	}
	class seq5_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var2_mbl;
	
		public seq5_create_element(
			Altova.Mapforce.IMFNode var2_mbl
			)
		{
			this.var2_mbl = var2_mbl;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq5_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			string var1_const_;
			System.Collections.IEnumerable var9_filter_elements;
			IEnumerator var3_map_filter_elements;
			IEnumerator var6_map_filter_elements;
			IEnumerator var8_map_filter_elements;
			System.Collections.IEnumerable var7_filter_elements;
			IEnumerator var10_map_filter_elements;
			System.Collections.IEnumerable var11_filter_elements;
			public Enumerator(seq5_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBLDataSet", var4_const_http___tempuri_org_E), closure.var2_mbl));
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F479", var1_const_), Altova.Functions.Core.Box("RO"));
						pos++;
						return true;
					case 5:
						state = 6;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F142", var1_const_), Altova.Functions.Core.Box("GTNEXUS"));
						pos++;
						return true;
					case 6:
						state = 7;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F124", var1_const_), Altova.Functions.Core.Box("CITYOCEAN"));
						pos++;
						return true;
					case 7:
						state = 12;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 9; goto case 9;  }
						var9_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("EDIDocument", var4_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements)));
						var3_map_filter_elements = (var9_filter_elements).GetEnumerator();
						goto case 12;			
					case 9:
						state = 44;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F28", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("31950013"))));
						pos++;
						return true;
					case 12:
						state = 16;				
						if (!var3_map_filter_elements.MoveNext()) { state = 13; goto case 13; }
						var6_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var4_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var3_map_filter_elements.Current))).GetEnumerator();
						goto case 16;			
					case 13:
						state = 27;				
						Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
						var8_map_filter_elements = (var9_filter_elements).GetEnumerator();
						goto case 27;			
					case 16:
						state = 16;				
						if (!var6_map_filter_elements.MoveNext()) { state = 17; goto case 17; }
						var7_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendDate", var4_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var6_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var7_filter_elements))) { state = 16; goto case 16;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F373", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DateToString(Altova.CoreTypes.ParseDate(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var7_filter_elements))))));
						pos++;
						return true;
					case 17:
						state = 12;				
						Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
						goto case 12;			
					case 27:
						state = 31;				
						if (!var8_map_filter_elements.MoveNext()) { state = 28; goto case 28; }
						var10_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("MBL", var4_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current))).GetEnumerator();
						goto case 31;			
					case 28:
						state = 9;				
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						goto case 9;			
					case 31:
						state = 31;				
						if (!var10_map_filter_elements.MoveNext()) { state = 32; goto case 32; }
						var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendTime", var4_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var10_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 31; goto case 31;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F337", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.TimeToString(Altova.CoreTypes.ParseTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements))))));
						pos++;
						return true;
					case 32:
						state = 27;				
						Altova.Mapforce.MFEnumerator.Dispose(var10_map_filter_elements); var10_map_filter_elements = null;
						goto case 27;			
					case 44:
						state = 45;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F455", var1_const_), Altova.Functions.Core.Box("X"));
						pos++;
						return true;
					case 45:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F480", var1_const_), Altova.Functions.Core.Box("00410"));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var6_map_filter_elements); var6_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var3_map_filter_elements); var3_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var10_map_filter_elements); var10_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
			}
		}
				
	}
	class seq6_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var2_cur_filter_elements;
	
		public seq6_create_element(
			Altova.Mapforce.IMFNode var2_cur_filter_elements
			)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq6_create_element closure;
			string var1_const_;
			Altova.Types.QName var5_create_qname;
			Altova.Types.QName var3_create_qname;
			IEnumerator var4_map_filter_elements;
			Altova.Types.QName var7_create_qname;
			Altova.Types.QName var6_create_qname;
			public Enumerator(seq6_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var1_const_ = ("");
						var5_create_qname = (Altova.Functions.Core.CreateQName("N9", var1_const_));
						var3_create_qname = (Altova.Functions.Core.CreateQName("G61", var1_const_));
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("ST", var1_const_), (new seq7_create_element()));
						pos++;
						return true;
					case 5:
						state = 6;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("B1", var1_const_), (new seq8_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 6:
						state = 7;				
						current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq9_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 7:
						state = 8;				
						current = Altova.Functions.Core.CreateElement(var3_create_qname, (new seq10_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 8:
						state = 9;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Y7", var1_const_), (new seq11_cond_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 9:
						state = 10;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Y1", var1_const_), (new seq12_create_element()));
						pos++;
						return true;
					case 10:
						state = 11;				
						var4_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Container", "http://tempuri.org/EDI-MBL.xsd"), closure.var2_cur_filter_elements)).GetEnumerator();
						goto case 11;			
					case 11:
						state = 11;				
						if (!var4_map_filter_elements.MoveNext()) { state = 12; goto case 12; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopY2", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("Y2", var1_const_), (new seq13_create_element((Altova.Mapforce.IMFNode)(var4_map_filter_elements.Current))))));
						pos++;
						return true;
					case 12:
						state = 16;				
						Altova.Mapforce.MFEnumerator.Dispose(var4_map_filter_elements); var4_map_filter_elements = null;
						current = Altova.Functions.Core.CreateElement(var5_create_qname, (new seq14_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 16:
						state = 17;				
						current = Altova.Functions.Core.CreateElement(var5_create_qname, (new seq15_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 17:
						state = 20;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopN1", var1_const_), (new seq16_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 20:
						state = 22;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopN1", var1_const_), (new seq21_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 22:
						state = 24;				
						var7_create_qname = (Altova.Functions.Core.CreateQName("R4", var1_const_));
						var6_create_qname = (Altova.Functions.Core.CreateQName("LoopR4", var1_const_));
						current = Altova.Functions.Core.CreateElement(var6_create_qname, (new seq27_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					case 24:
						state = 25;				
						current = Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var7_create_qname, (new seq30_create_element(closure.var2_cur_filter_elements)))));
						pos++;
						return true;
					case 25:
						state = 26;				
						current = Altova.Functions.Core.CreateElement(var6_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var7_create_qname, (new seq31_create_element(closure.var2_cur_filter_elements)))));
						pos++;
						return true;
					case 26:
						state = 27;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("EA", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F1402", var1_const_), Altova.Functions.Core.Box("ATM"))));
						pos++;
						return true;
					case 27:
						state = 28;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LoopLX", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("LX", var1_const_), Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F554", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("00410"))))))));
						pos++;
						return true;
					case 28:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("SE", var1_const_), (new seq32_create_element(closure.var2_cur_filter_elements)));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var4_map_filter_elements); var4_map_filter_elements = null;
			}
		}
				
	}
	class seq7_create_element : IEnumerable
	{
	
		public seq7_create_element(
			)
		{
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq7_create_element closure;
			string var1_const_;
			public Enumerator(seq7_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F143", var1_const_), Altova.Functions.Core.Box("300"));
						pos++;
						return true;
					case 5:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F329", var1_const_), Altova.Functions.Core.Box("0001"));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq8_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var2_cur_filter_elements;
	
		public seq8_create_element(
			Altova.Mapforce.IMFNode var2_cur_filter_elements
			)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq8_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			System.Collections.IEnumerable var3_filter_elements;
			string var1_const_;
			System.Collections.IEnumerable var6_vmf1_inputtoresult;
			public Enumerator(seq8_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Flag", var4_const_http___tempuri_org_E), closure.var2_cur_filter_elements));
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendDate", var4_const_http___tempuri_org_E), closure.var2_cur_filter_elements));
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F140", var1_const_), Altova.Functions.Core.Box("COSU"));
						pos++;
						return true;
					case 5:
						state = 6;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F145", var1_const_), Altova.Functions.Core.Box("CITYOCEAN"));
						pos++;
						return true;
					case 6:
						state = 8;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 8; goto case 8;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F373", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DateToString(Altova.CoreTypes.ParseDate(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
						pos++;
						return true;
					case 8:
						state = 16;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						goto case 16;			
					case 16:
						state = 0;				
						var6_vmf1_inputtoresult = new Altova.Functions.Core.SequenceCache(COSCO.Booking.vmf1_inputtoresult.Create(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						if (!(Altova.Functions.Core.Exists(var6_vmf1_inputtoresult))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F558", var1_const_), Altova.Functions.Core.Box((string)Altova.Functions.Core.First(var6_vmf1_inputtoresult)));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq9_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq9_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq9_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			System.Collections.IEnumerable var3_filter_elements;
			string var2_const_;
			public Enumerator(seq9_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByTel", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var2_const_), Altova.Functions.Core.Box("IC"));
						pos++;
						return true;
					case 5:
						state = 7;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					case 7:
						state = 13;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var2_const_), Altova.Functions.Core.Box("TE"));
						pos++;
						return true;
					case 13:
						state = 0;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq10_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq10_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq10_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			System.Collections.IEnumerable var3_filter_elements;
			string var2_const_;
			public Enumerator(seq10_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByEMail", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var2_const_), Altova.Functions.Core.Box("IC"));
						pos++;
						return true;
					case 5:
						state = 7;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					case 7:
						state = 13;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var2_const_), Altova.Functions.Core.Box("EM"));
						pos++;
						return true;
					case 13:
						state = 0;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq11_cond_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq11_cond_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq11_cond_create_element closure;
			System.Collections.IEnumerable var2_filter_elements;
			public Enumerator(seq11_cond_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 0;				
						var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendDate", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
						if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F373", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DateToString(Altova.CoreTypes.ParseDate(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq12_create_element : IEnumerable
	{
	
		public seq12_create_element(
			)
		{
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq12_create_element closure;
			string var1_const_;
			public Enumerator(seq12_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F140", var1_const_), Altova.Functions.Core.Box("COSU"));
						pos++;
						return true;
					case 5:
						state = 6;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F91", var1_const_), Altova.Functions.Core.Box("O"));
						pos++;
						return true;
					case 6:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F374", var1_const_), Altova.Functions.Core.Box("PP"));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq13_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq13_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq13_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			string var3_const_;
			System.Collections.IEnumerable var2_filter_elements;
			public Enumerator(seq13_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 6;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ContainerType", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var3_const_ = ("");
						var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Qty", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 6; goto case 6;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F95", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))))));
						pos++;
						return true;
					case 6:
						state = 12;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F78", var3_const_), Altova.Functions.Core.Box("R"));
						pos++;
						return true;
					case 12:
						state = 13;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F56", var3_const_), Altova.Functions.Core.Box("HH"));
						pos++;
						return true;
					case 13:
						state = 0;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F24", var3_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq14_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq14_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq14_create_element closure;
			System.Collections.IEnumerable var3_filter_elements;
			string var2_const_;
			public Enumerator(seq14_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SoNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F128", var2_const_), Altova.Functions.Core.Box("BN"));
						pos++;
						return true;
					case 5:
						state = 0;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F127", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq15_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq15_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq15_create_element closure;
			System.Collections.IEnumerable var3_filter_elements;
			string var2_const_;
			public Enumerator(seq15_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("RefNo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F128", var2_const_), Altova.Functions.Core.Box("CG"));
						pos++;
						return true;
					case 5:
						state = 0;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F127", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq16_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq16_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq16_create_element closure;
			public Enumerator(seq16_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 7;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N1", ""), (new seq17_create_element(closure.var1_cur_filter_elements)));
						pos++;
						return true;
					case 7:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N3", ""), (new seq19_create_element(closure.var1_cur_filter_elements)));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq17_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var5_cur_filter_elements;
	
		public seq17_create_element(
			Altova.Mapforce.IMFNode var5_cur_filter_elements
			)
		{
			this.var5_cur_filter_elements = var5_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq17_create_element closure;
			string var7_const_;
			string var6_const_ICP3ParseCustomerToC;
			string var2_const_http___schemas_xmlso;
			Altova.Types.QName var4_create_qname;
			Altova.Types.QName var3_create_qname;
			IEnumerator var1_map_filter_elements;
			IEnumerator var8_map_filter_elements;
			string var10_const_http___www_CityOcean;
			IEnumerator var9_map_filter_elements;
			System.Collections.IEnumerable var11_filter_elements;
			System.Collections.IEnumerable var12_filter_elements;
			public Enumerator(seq17_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var7_const_ = ("");
						var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
						var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
						var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
						var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F98_1", var7_const_), Altova.Functions.Core.Box("SH"));
						pos++;
						return true;
					case 5:
						state = 6;				
						var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq18_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 6;			
					case 6:
						state = 10;				
						if (!var1_map_filter_elements.MoveNext()) { state = 7; goto case 7; }
						var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
						goto case 10;			
					case 7:
						state = 20;				
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
						var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq18_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 20;			
					case 10:
						state = 10;				
						if (!var8_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
						Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
						goto case 10;			
					case 11:
						state = 6;				
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						goto case 6;			
					case 20:
						state = 20;				
						if (!var9_map_filter_elements.MoveNext()) { state = 21; goto case 21; }
						var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 20; goto case 20;  }
						var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
						if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 20; goto case 20;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var7_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
						pos++;
						return true;
					case 21:
						state = 0;				
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
						return false;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
			}
		}
				
	}
	class seq18_cond_create_element_with_prefix : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq18_cond_create_element_with_prefix(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq18_cond_create_element_with_prefix closure;
			System.Collections.IEnumerable var2_filter_elements;
			public Enumerator(seq18_cond_create_element_with_prefix closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 0;				
						var2_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("BookingPartyInfo", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
						if (!(Altova.Functions.Core.Exists(var2_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("value", "http://www.CityOcean.com/"), "", Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var2_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq19_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var5_cur_filter_elements;
	
		public seq19_create_element(
			Altova.Mapforce.IMFNode var5_cur_filter_elements
			)
		{
			this.var5_cur_filter_elements = var5_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq19_create_element closure;
			string var7_const_;
			string var6_const_ICP3ParseStringToStr;
			string var2_const_http___schemas_xmlso;
			Altova.Types.QName var4_create_qname;
			Altova.Types.QName var3_create_qname;
			IEnumerator var1_map_filter_elements;
			IEnumerator var8_map_filter_elements;
			string var10_const_http___www_CityOcean;
			IEnumerator var9_map_filter_elements;
			System.Collections.IEnumerable var11_filter_elements;
			public Enumerator(seq19_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var7_const_ = ("");
						var6_const_ICP3ParseStringToStr = ("ICP3ParseStringToString");
						var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
						var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
						var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
						var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToStr, "http://www.CityOcean.com/"), (new seq20_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToStr, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToString"), "http://www.CityOcean.com/ICP3ParseStringToString", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 5;			
					case 5:
						state = 9;				
						if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
						var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
						goto case 9;			
					case 6:
						state = 19;				
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
						var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToStringResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToStr, var10_const_http___www_CityOcean), (new seq20_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToStr, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToString"), "http://www.CityOcean.com/ICP3ParseStringToString", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 19;			
					case 9:
						state = 9;				
						if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
						Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
						goto case 9;			
					case 10:
						state = 5;				
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						goto case 5;			
					case 19:
						state = 19;				
						if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
						var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToStringResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F166", var7_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements))));
						pos++;
						return true;
					case 20:
						state = 0;				
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
						return false;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
			}
		}
				
	}
	class seq20_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var5_cur_filter_elements;
	
		public seq20_create_element(
			Altova.Mapforce.IMFNode var5_cur_filter_elements
			)
		{
			this.var5_cur_filter_elements = var5_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq20_create_element closure;
			string var7_const_;
			string var6_const_ICP3ParseCustomerToC;
			string var2_const_http___schemas_xmlso;
			Altova.Types.QName var4_create_qname;
			Altova.Types.QName var3_create_qname;
			IEnumerator var1_map_filter_elements;
			IEnumerator var8_map_filter_elements;
			string var10_const_http___www_CityOcean;
			IEnumerator var9_map_filter_elements;
			System.Collections.IEnumerable var11_filter_elements;
			System.Collections.IEnumerable var12_filter_elements;
			public Enumerator(seq20_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var7_const_ = ("");
						var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
						var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
						var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
						var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
						var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq18_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 5;			
					case 5:
						state = 9;				
						if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
						var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
						goto case 9;			
					case 6:
						state = 19;				
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
						var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq18_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 19;			
					case 9:
						state = 9;				
						if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
						Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
						goto case 9;			
					case 10:
						state = 5;				
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						goto case 5;			
					case 19:
						state = 19;				
						if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
						var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19;  }
						var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
						if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19;  }
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
						pos++;
						return true;
					case 20:
						state = 0;				
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("length", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal("55")))))))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
			}
		}
				
	}
	class seq21_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq21_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq21_create_element closure;
			Altova.Types.QName var2_create_qname;
			public Enumerator(seq21_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 7;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N1", ""), (new seq22_create_element(closure.var1_cur_filter_elements)));
						pos++;
						return true;
					case 7:
						state = 9;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("N3", ""), (new seq23_create_element(closure.var1_cur_filter_elements)));
						pos++;
						return true;
					case 9:
						state = 11;				
						var2_create_qname = (Altova.Functions.Core.CreateQName("G61", ""));
						current = Altova.Functions.Core.CreateElement(var2_create_qname, (new seq25_create_element(closure.var1_cur_filter_elements)));
						pos++;
						return true;
					case 11:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(var2_create_qname, (new seq26_create_element(closure.var1_cur_filter_elements)));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq22_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var5_cur_filter_elements;
	
		public seq22_create_element(
			Altova.Mapforce.IMFNode var5_cur_filter_elements
			)
		{
			this.var5_cur_filter_elements = var5_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq22_create_element closure;
			string var7_const_;
			string var6_const_ICP3ParseCustomerToC;
			string var2_const_http___schemas_xmlso;
			Altova.Types.QName var4_create_qname;
			Altova.Types.QName var3_create_qname;
			IEnumerator var1_map_filter_elements;
			IEnumerator var8_map_filter_elements;
			string var10_const_http___www_CityOcean;
			IEnumerator var9_map_filter_elements;
			System.Collections.IEnumerable var11_filter_elements;
			System.Collections.IEnumerable var12_filter_elements;
			public Enumerator(seq22_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var7_const_ = ("");
						var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
						var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
						var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
						var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F98_1", var7_const_), Altova.Functions.Core.Box("BP"));
						pos++;
						return true;
					case 5:
						state = 6;				
						var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq18_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 6;			
					case 6:
						state = 10;				
						if (!var1_map_filter_elements.MoveNext()) { state = 7; goto case 7; }
						var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
						goto case 10;			
					case 7:
						state = 20;				
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
						var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq18_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 20;			
					case 10:
						state = 10;				
						if (!var8_map_filter_elements.MoveNext()) { state = 11; goto case 11; }
						Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
						goto case 10;			
					case 11:
						state = 6;				
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						goto case 6;			
					case 20:
						state = 20;				
						if (!var9_map_filter_elements.MoveNext()) { state = 21; goto case 21; }
						var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 20; goto case 20;  }
						var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Name", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
						if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 20; goto case 20;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var7_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
						pos++;
						return true;
					case 21:
						state = 0;				
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
						return false;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
			}
		}
				
	}
	class seq23_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var5_cur_filter_elements;
	
		public seq23_create_element(
			Altova.Mapforce.IMFNode var5_cur_filter_elements
			)
		{
			this.var5_cur_filter_elements = var5_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq23_create_element closure;
			string var7_const_;
			string var6_const_ICP3ParseStringToStr;
			string var2_const_http___schemas_xmlso;
			Altova.Types.QName var4_create_qname;
			Altova.Types.QName var3_create_qname;
			IEnumerator var1_map_filter_elements;
			IEnumerator var8_map_filter_elements;
			string var10_const_http___www_CityOcean;
			IEnumerator var9_map_filter_elements;
			System.Collections.IEnumerable var11_filter_elements;
			public Enumerator(seq23_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var7_const_ = ("");
						var6_const_ICP3ParseStringToStr = ("ICP3ParseStringToString");
						var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
						var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
						var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
						var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToStr, "http://www.CityOcean.com/"), (new seq24_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToStr, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToString"), "http://www.CityOcean.com/ICP3ParseStringToString", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 5;			
					case 5:
						state = 9;				
						if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
						var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
						goto case 9;			
					case 6:
						state = 19;				
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
						var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToStringResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseStringToStr, var10_const_http___www_CityOcean), (new seq24_create_element(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseStringToStr, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseStringToString"), "http://www.CityOcean.com/ICP3ParseStringToString", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 19;			
					case 9:
						state = 9;				
						if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
						Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
						goto case 9;			
					case 10:
						state = 5;				
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						goto case 5;			
					case 19:
						state = 19;				
						if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
						var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseStringToStringResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F166", var7_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements))));
						pos++;
						return true;
					case 20:
						state = 0;				
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
						return false;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
			}
		}
				
	}
	class seq24_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var5_cur_filter_elements;
	
		public seq24_create_element(
			Altova.Mapforce.IMFNode var5_cur_filter_elements
			)
		{
			this.var5_cur_filter_elements = var5_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq24_create_element closure;
			string var7_const_;
			string var6_const_ICP3ParseCustomerToC;
			string var2_const_http___schemas_xmlso;
			Altova.Types.QName var4_create_qname;
			Altova.Types.QName var3_create_qname;
			IEnumerator var1_map_filter_elements;
			IEnumerator var8_map_filter_elements;
			string var10_const_http___www_CityOcean;
			IEnumerator var9_map_filter_elements;
			System.Collections.IEnumerable var11_filter_elements;
			System.Collections.IEnumerable var12_filter_elements;
			public Enumerator(seq24_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var7_const_ = ("");
						var6_const_ICP3ParseCustomerToC = ("ICP3ParseCustomerToCustomerInfo");
						var2_const_http___schemas_xmlso = ("http://schemas.xmlsoap.org/soap/envelope/");
						var4_create_qname = (Altova.Functions.Core.CreateQName("Body", var2_const_http___schemas_xmlso));
						var3_create_qname = (Altova.Functions.Core.CreateQName("Envelope", var2_const_http___schemas_xmlso));
						var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Fault", var2_const_http___schemas_xmlso), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, "http://www.CityOcean.com/"), (new seq18_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 5;			
					case 5:
						state = 9;				
						if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
						var8_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("detail", var7_const_), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current))).GetEnumerator();
						goto case 9;			
					case 6:
						state = 19;				
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						var10_const_http___www_CityOcean = ("http://www.CityOcean.com/");
						var9_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResponse", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var4_create_qname, (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(Altova.Functions.Core.FilterElements(var3_create_qname, Altova.Xml.InternalXML.CallWebservice(Altova.Functions.Core.CreateElement(var3_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(var4_create_qname, Altova.Functions.Core.Box(Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName(var6_const_ICP3ParseCustomerToC, var10_const_http___www_CityOcean), (new seq18_cond_create_element_with_prefix(closure.var5_cur_filter_elements))))))), "ICP3EDIService", var6_const_ICP3ParseCustomerToC, Altova.Functions.Lang.StringAsQName("{http://www.CityOcean.com/}ICP3ParseCustomerToCustomerInfo"), "http://www.CityOcean.com/ICP3ParseCustomerToCustomerInfo", "http://app.cityocean.com:83/ICP3EDIService.asmx", "document", var7_const_, var7_const_, 0, var7_const_, var7_const_, 1))))))).GetEnumerator();
						goto case 19;			
					case 9:
						state = 9;				
						if (!var8_map_filter_elements.MoveNext()) { state = 10; goto case 10; }
						Altova.Functions.Core.ThrowUserException(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)(var8_map_filter_elements.Current)));
						goto case 9;			
					case 10:
						state = 5;				
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						goto case 5;			
					case 19:
						state = 19;				
						if (!var9_map_filter_elements.MoveNext()) { state = 20; goto case 20; }
						var11_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ICP3ParseCustomerToCustomerInfoResult", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)(var9_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var11_filter_elements))) { state = 19; goto case 19;  }
						var12_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Address", var10_const_http___www_CityOcean), (Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var11_filter_elements)));
						if (!(Altova.Functions.Core.Exists(var12_filter_elements))) { state = 19; goto case 19;  }
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("valString", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var12_filter_elements))));
						pos++;
						return true;
					case 20:
						state = 0;				
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
						current = Altova.Functions.Core.CreateElementWithPrefix(Altova.Functions.Core.CreateQName("length", var10_const_http___www_CityOcean), var7_const_, Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.LongToDecimal(Altova.CoreTypes.IntToLong(Altova.CoreTypes.LongToInt(Altova.CoreTypes.DecimalToLong(Altova.CoreTypes.DecimalToInteger(Altova.CoreTypes.ParseDecimal("55")))))))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var8_map_filter_elements); var8_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						Altova.Mapforce.MFEnumerator.Dispose(var9_map_filter_elements); var9_map_filter_elements = null;
			}
		}
				
	}
	class seq25_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq25_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq25_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			System.Collections.IEnumerable var3_filter_elements;
			string var2_const_;
			public Enumerator(seq25_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByTel", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var2_const_), Altova.Functions.Core.Box("BP"));
						pos++;
						return true;
					case 5:
						state = 7;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					case 7:
						state = 13;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var2_const_), Altova.Functions.Core.Box("TE"));
						pos++;
						return true;
					case 13:
						state = 0;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq26_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq26_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq26_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			System.Collections.IEnumerable var3_filter_elements;
			string var2_const_;
			public Enumerator(seq26_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByEMail", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("SendByName", var4_const_http___tempuri_org_E), closure.var1_cur_filter_elements));
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F366", var2_const_), Altova.Functions.Core.Box("BP"));
						pos++;
						return true;
					case 5:
						state = 7;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 7; goto case 7;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F93", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					case 7:
						state = 13;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F365", var2_const_), Altova.Functions.Core.Box("EM"));
						pos++;
						return true;
					case 13:
						state = 0;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F364", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq27_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq27_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq27_create_element closure;
			string var2_const_;
			public Enumerator(seq27_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("R4", var2_const_), (new seq28_create_element(closure.var1_cur_filter_elements)));
						pos++;
						return true;
					case 5:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("DTM", var2_const_), (new seq29_create_element(closure.var1_cur_filter_elements)));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq28_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var2_cur_filter_elements;
	
		public seq28_create_element(
			Altova.Mapforce.IMFNode var2_cur_filter_elements
			)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq28_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			System.Collections.IEnumerable var3_filter_elements;
			string var1_const_;
			public Enumerator(seq28_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolName", var4_const_http___tempuri_org_E), closure.var2_cur_filter_elements));
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PolCode", var4_const_http___tempuri_org_E), closure.var2_cur_filter_elements));
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F115", var1_const_), Altova.Functions.Core.Box("L"));
						pos++;
						return true;
					case 5:
						state = 6;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F309", var1_const_), Altova.Functions.Core.Box("UN"));
						pos++;
						return true;
					case 6:
						state = 8;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 8; goto case 8;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F310", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					case 8:
						state = 17;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						goto case 17;			
					case 17:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F114", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq29_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var1_cur_filter_elements;
	
		public seq29_create_element(
			Altova.Mapforce.IMFNode var1_cur_filter_elements
			)
		{
			this.var1_cur_filter_elements = var1_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq29_create_element closure;
			System.Collections.IEnumerable var3_filter_elements;
			string var2_const_;
			public Enumerator(seq29_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("ETD", "http://tempuri.org/EDI-MBL.xsd"), closure.var1_cur_filter_elements));
						var2_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F374", var2_const_), Altova.Functions.Core.Box("168"));
						pos++;
						return true;
					case 5:
						state = 0;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 0; return false; }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F373", var2_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DateToString(Altova.CoreTypes.ParseDateTime(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq30_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var2_cur_filter_elements;
	
		public seq30_create_element(
			Altova.Mapforce.IMFNode var2_cur_filter_elements
			)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq30_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			System.Collections.IEnumerable var3_filter_elements;
			string var1_const_;
			public Enumerator(seq30_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodName", var4_const_http___tempuri_org_E), closure.var2_cur_filter_elements));
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("PodCode", var4_const_http___tempuri_org_E), closure.var2_cur_filter_elements));
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F115", var1_const_), Altova.Functions.Core.Box("D"));
						pos++;
						return true;
					case 5:
						state = 6;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F309", var1_const_), Altova.Functions.Core.Box("UN"));
						pos++;
						return true;
					case 6:
						state = 8;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 8; goto case 8;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F310", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					case 8:
						state = 17;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						goto case 17;			
					case 17:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F114", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq31_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var2_cur_filter_elements;
	
		public seq31_create_element(
			Altova.Mapforce.IMFNode var2_cur_filter_elements
			)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq31_create_element closure;
			string var4_const_http___tempuri_org_E;
			System.Collections.IEnumerable var5_filter_elements;
			System.Collections.IEnumerable var3_filter_elements;
			string var1_const_;
			public Enumerator(seq31_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var4_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var5_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryName", var4_const_http___tempuri_org_E), closure.var2_cur_filter_elements));
						var3_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("DeliveryCode", var4_const_http___tempuri_org_E), closure.var2_cur_filter_elements));
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F115", var1_const_), Altova.Functions.Core.Box("E"));
						pos++;
						return true;
					case 5:
						state = 6;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F309", var1_const_), Altova.Functions.Core.Box("UN"));
						pos++;
						return true;
					case 6:
						state = 8;				
						if (!(Altova.Functions.Core.Exists(var3_filter_elements))) { state = 8; goto case 8;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F310", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var3_filter_elements))));
						pos++;
						return true;
					case 8:
						state = 17;				
						if (!(Altova.Functions.Core.Exists(var5_filter_elements))) { state = 0; return false; }
						goto case 17;			
					case 17:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F114", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var5_filter_elements))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq32_create_element : IEnumerable
	{
		Altova.Mapforce.IMFNode var2_cur_filter_elements;
	
		public seq32_create_element(
			Altova.Mapforce.IMFNode var2_cur_filter_elements
			)
		{
			this.var2_cur_filter_elements = var2_cur_filter_elements;
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq32_create_element closure;
			string var3_const_http___tempuri_org_E;
			IEnumerator var1_map_filter_elements;
			System.Collections.IEnumerable var4_filter_elements;
			public Enumerator(seq32_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var3_const_http___tempuri_org_E = ("http://tempuri.org/EDI-MBL.xsd");
						var1_map_filter_elements = (Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("Container", var3_const_http___tempuri_org_E), closure.var2_cur_filter_elements)).GetEnumerator();
						goto case 5;			
					case 5:
						state = 5;				
						if (!var1_map_filter_elements.MoveNext()) { state = 6; goto case 6; }
						var4_filter_elements = new Altova.Functions.Core.SequenceCache(Altova.Functions.Core.FilterElements(Altova.Functions.Core.CreateQName("NUM", var3_const_http___tempuri_org_E), (Altova.Mapforce.IMFNode)(var1_map_filter_elements.Current)));
						if (!(Altova.Functions.Core.Exists(var4_filter_elements))) { state = 5; goto case 5;  }
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F96", ""), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal(Altova.CoreTypes.NodeToString((Altova.Mapforce.IMFNode)Altova.Functions.Core.First(var4_filter_elements))))));
						pos++;
						return true;
					case 6:
						state = 0;				
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F329", ""), Altova.Functions.Core.Box("0001"));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
						Altova.Mapforce.MFEnumerator.Dispose(var1_map_filter_elements); var1_map_filter_elements = null;
			}
		}
				
	}
	class seq33_create_element : IEnumerable
	{
	
		public seq33_create_element(
			)
		{
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq33_create_element closure;
			string var1_const_;
			public Enumerator(seq33_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F97", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
						pos++;
						return true;
					case 5:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("F28", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("31950013"))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}
				
	}
	class seq34_create_element : IEnumerable
	{
	
		public seq34_create_element(
			)
		{
		}

		public IEnumerator GetEnumerator() { return new Enumerator(this); }
		
		class Enumerator : Altova.Mapforce.IMFEnumerator
		{
			int state = 1;
			object current = null;
			int pos = 0;
			seq34_create_element closure;
			string var1_const_;
			public Enumerator(seq34_create_element closure) 
			{
				this.closure = closure;
			}
			
			public void Reset() { state = 0; pos = 0;}
			public int Position { get { return pos; } }
			public object Current { get { return current; } }
			
			public bool MoveNext()
			{
				while (state != 0)
				{
					switch (state) 
					{
					case 1:
						state = 5;				
						var1_const_ = ("");
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI16", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("1"))));
						pos++;
						return true;
					case 5:
						state = 0;				
						current = Altova.Functions.Core.CreateElement(Altova.Functions.Core.CreateQName("FI12", var1_const_), Altova.Functions.Core.Box(Altova.CoreTypes.DecimalToString(Altova.CoreTypes.ParseDecimal("031950013"))));
						pos++;
						return true;
					}
				}
				return false;
			}
			
			public void Dispose() 
			{
			}
		}

    }
        #endregion

 
    } 
}
