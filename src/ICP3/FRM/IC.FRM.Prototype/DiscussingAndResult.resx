<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="inquireDiscussingDataBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>