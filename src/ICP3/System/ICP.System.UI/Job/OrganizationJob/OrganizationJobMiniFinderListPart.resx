<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bsList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>130, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAM
        CgAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAQkCAQEKAUUCAQF5ATcCAQFYAVMCAgGjASICAQEvASgCAQE6ARoCAQEj
        JAABEQIBARUBMQIBAUsBQwIBAXUBSgICAYgBTgICAY8BRwIBAX0BOQIBAVwBGwIBASSgAAE8AgEBYgFg
        AZYBqgH7AV8BNQE8Ae0BawGTAaEB+gFiAggB0wGjAYEBhgH3AWABDQEOAdgBPgIBAWgBBAIBAQQYAAEK
        AgEBCwE7AgEBYAFWAgIBqAFhAgYBzgFmAg4B3gFlAhIB4wFiAgcB1AFaAgIBuAFEAgEBdwEWAgEBHJgA
        AR4CAQEoAWcBIAElAeIBcQHKAeIB/wFoAbUByQH/AX4BzwHkAf8BrgKqAf8BwgHXAd0B/wGQAcoBzwH/
        AWkBtQHGAf8BWAICAa0BPAIBAWIQAAEaAgEBIgFdAgMBxANrAf8DfgH/A4EB/wOCAf8DggH/A4EB/wN+
        Af8DawH/AV4CCwHhAS4CAQFGkAABQAIBAWwBXQIFAcIBgQHnAv8BcwHIAd4B/wFpAa8BwQH/AX4BzAHh
        Af8BlgGUAZUB/wG/AdIB1QH/AZIB2AHrAf8BawG6AdEB/wF3ATIBLwHpAU4CAgGSEAABTQICAZIDgQH/
        A3QB/wNtAf8CbgFvAf8BcAFvAWwB/wFwAW4BawH/A3AB/wNvAf8DcAH/A4EB/wFWAgIBr5AAAVUCAgGm
        AX4BeQGDAfUBhgHpAf4B/wF6AcoB3QH/AWsBrAG8Af8BgQHOAeEB/wGjAp4B/wHFAdUB2gH/AZkB2QHp
        Af8BbwG7AdEB/wFuAR4BIQHgAUsCAgGLEAABWAICAbMDrQH/A4EB/wJsAW0B/wFmAWUBZAH/AWUBbQF0
        Af8BZAF1AYEB/wFYAVYBUgH/A1cB/wNdAf8DjgH/AVoCAwG8kAABVAICAaABfgFhAWwB8gGTAe4C/wGB
        AdIB5QH/AXABrAG8Af8BggHYAesB/wGbAacBqQH/AcMBzgHQAf8BgQHNAeEB/wFrAbsB0QH/AXgBMwE2
        AegBTwICAZMQAAE8AgEBYgG6ArIB/gOjAf8ChgGFAf8BfAF4AXMB/wFTAW4BngH/AVIBfAHDAf8CXgFf
        Af8BXgFdAVoB/wNlAf8DngH/AUgCAgGCkAABVAICAaABgwFiAWwB8gGeAfAB/gH/AZMB6AH4Af8BfQG6
        AcgB/wGGAeQB8wH/AZgBwgHMAf8BvwHEAcYB/wF1AbYByAH/AW4BugHQAf8BWAIDAbMBOgIBAV8QAAEH
        AgEBBwFXAgIBrgPXAf8CqgGoAf8BiQGEAYEB/wFwAYEBxQH/AVwBfQHQAf8BkgGQAY8B/wF3AXYBcwH/
        AY8CkAH/AWQCCwHXARcCAQEekAABVAICAaABhwFlAWwB8gGpAfUC/wGgAe4B+gH/AYEBugHGAf8BjQHk
        AfEB/wGTAbsBvAH/AbkBvwG+Af8BfAG3AcoB/wFuAZcBqwH8ASwCAQFCAQMCAQEDFAABEwIBARgBVwIC
        Aa8BfAJPAfYBfAKBAf8BaAGBAbQB/wFXAXgBsQH/AYEBiwGWAf8BYAFTAVEB+wFfAgYBywEmAgEBN5QA
        AVQCAgGgAYcBZwFsAfIBsQH4Av8BqwHzAfoB/wGBAboBxAH/AZMB5QHwAf8BowHGAcAB/wG+AcIBvwH/
        AX0BuAHLAf8BcgGbAa8B/AEqAgEBPgECAwEcAAFSAgIBnwGbAb4B2gH/Ab0B2wHuAf8BwQHdAfAB/wGo
        AcsB5wH/AV4CBAHHAQ4CAQERmAABVAICAaABhwFnAWwB8gGxAfkC/wGwAfUB+wH/AYMBuQHCAf8BmQHn
        Ae8B/wGoAccBxAH/Ab8BxAHDAf8BgQG6AcwB/wF2AZwBsAH8ASwCAQFBAQMCAQEDGAABKAIBAToBdQEz
        AT0B6wHAAeQC/wHBAeEB/AH/AcEB4gH9Af8BwgHlAv8BhQFeAW4B8wExAgEBS5gAAVQCAgGgAYcBZwFs
        AfIBsQH5Av8BsQH2AfsB/wGEAbkBwQH/AZ4B6AHuAf8BqAHKAdAB/wHCAccBygH/AYEBvAHMAf8BeQGf
        AbEB/AEsAgEBQQEDAgEBAxgAAUsCAgGLAaMB2AL/AZwBzwH5Af8BmgHNAfcB/wGZAc0B9wH/AZcBzAH3
        Af8BnQHUAv8BUAICAZWYAAFUAgIBoAGHAWcBbQHyAbAB+QL/AbMB9gH7Af8BhgG3Ab0B/wGhAegB7QH/
        AawBygHNAf8BxQHKAcwB/wGBAb0BzQH/AXwBnwGxAfwBLAIBAUEBAwIBAQMYAAFXAgIBrwGTAcwB+gH/
        AZUBzAH4Af8BlgHMAfgB/wGTAcsB+AH/AY4ByAH2Af8BiAHFAfcB/wFYAgIBsJgAAVQCAgGgAYcBZwFt
        AfIBrwH4Av8BtQH3AfsB/wGIAbgBvwH/AaQB6gHtAf8BxQHdAeAB/wHVAdwB3gH/AYEBvAHLAf8BgAGx
        AbkB/QEsAgEBQgEDAgEBAxgAAVUCAgGnAaIB1AH8Af8BpwHVAfsB/wGoAdYB+wH/AaQB1AH7Af8BnAHQ
        AfkB/wGVAc0B+gH/AVUCAgGmmAABVAICAaABhwFoAW0B8gG0AfsC/wG0Ae4B8wH/AZwB0QHYAf8BrAHi
        AeoB/wGzAd4B6AH/AasB5AHwAf8BkwHYAegB/wGVAb0BywH9ASwCAQFCAQQCAQEEGAABPAIBAWQBwAHk
        Av8BxQHlAf4B/wHDAeMC/wG9AeAB/QH/AboB3gH9Af8BsQHcAv8BPAIBAWSYAAFTAgIBpAGMAXgBfgH0
        AbEB8AH4Af8BmQHaAecB/wGNAcYB1QH+AX4BbwF1AfQBbAEhASUB4gFhAgkBzAFZAgIBsQFJAgIBhAEP
        AgEBEhwAAQoCAQEMAVYCAgGoAdgB7QL/AeAB8AL/Ad4B7wL/AdIB6wH+Af8BVQICAaoBCwIBAQ2YAAFK
        AgIBhgFcAgUBwAFUAgIBowFHAgEBfQE5AgEBXAEpAgEBPAEbAgEBJAEPAgEBEgEEAgEBBCgAAQoCAQEM
        AUECAQFuAVoBAwEEAbkBWgEDAQQBuQFBAgEBbgEKAgEBDJQAAUIBTQE+BwABPgMAASgDAAFAAwABEAMA
        AQEBAAEBBQABgBcAA/8BAAHwAR8B8AEPBAAB8AEHAeABBwQAAeABAwHAAQMEAAHAAQMBwAEDBAABwAED
        AcABAwQAAcABAwHAAQMEAAHAAQMBwAEDBAABwAEDAeABBwQAAcABAwH4AQ8EAAHAAQMB8AEPBAABwAED
        AfABDwQAAcABAwHwAQ8EAAHAAQMB8AEPBAABwAEDAfABDwQAAcABBwHwAQ8EAAHAAR8B+AEfBAAL
</value>
  </data>
</root>