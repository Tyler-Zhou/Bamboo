<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TimerExecute.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="TimerTips.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>148, 17</value>
  </metadata>
  <metadata name="TimerPosition.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>257, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>390, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAAAAAAAABACAA5QoAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQ
        AADDDgAAww4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAQgAA
        AH8AAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAA
        AIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAH8AAABCAAAAAgAA
        AEwAAADIAAAAiwAAAH8AAAB/AAAAgQAAAIEAAAB/AAAAfwAAAIEAAACBAAAAfwAAAIAAAACAAAAAgAAA
        AIAAAACAAAAAgAAAAIAAAACAAAAAfwAAAIEAAACBAAAAfwAAAH8AAACBAAAAgQAAAH8AAAB/AAAAiwAA
        AMgAAABMAAAAkQAAAIoAAAAxAAAAfgAAAH4AAAAwAAAAMAAAAH4AAAB+AAAAMAAAADAAAAB+AAAAgAAA
        AIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAAB+AAAAMAAAADAAAAB+AAAAfgAAADAAAAAwAAAAfgAA
        AH4AAAAxAAAAigAAAJEAAACVAAAAfgAAAH4AAADCAAAAwgAAAH4AAAB+AAAAwgAAAMIAAAB+AAAAfgAA
        AMQAAAB+AAAAfwAAAIAAAACAAAAAgAAAAIAAAAB/AAAAfgAAAMQAAAB+AAAAfgAAAMIAAADCAAAAfgAA
        AH4AAADCAAAAwgAAAH4AAAB+AAAAlQAAAJUAAAB+AAAAfgAAAMIAAADCAAAAfgAAAH4AAADCAAAAwgAA
        AH4AAAB+AAAAxAAAAH4AAAB/AAAAgAAAAIAAAACAAAAAgAAAAH8AAAB+AAAAxAAAAH4AAAB+AAAAwgAA
        AMIAAAB+AAAAfgAAAMIAAADCAAAAfgAAAH4AAACVAAAAlQAAAIAAAAAyAAAAgQAAAH8AAAAwAAAAMAAA
        AIAAAACAAAAAMAAAADAAAAB/AAAAgQAAAH8AAAB/AAAAgQAAAIEAAAB/AAAAfwAAAIEAAAB/AAAAMAAA
        ADAAAACAAAAAgAAAADAAAAAwAAAAfwAAAIEAAAAyAAAAgAAAAJUAAACVAAAAggAAAAAAAAAAAAAAMgAA
        AH8AAAB/AAAAMAAAADAAAAB/AAAAfwAAADAAAAAwAAAAfgAAAH4AAAAwAAAAMAAAAH4AAAB+AAAAMAAA
        ADAAAAB/AAAAfwAAADAAAAAwAAAAfwAAAH8AAAAyAAAAAAAAAAAAAACCAAAAlQAAAJUAAACCAAAAAAAA
        AAAAAACBAAAAwgAAAMIAAAB+AAAAfgAAAMIAAADCAAAAfgAAAH4AAADCAAAAwgAAAH4AAAB+AAAAwgAA
        AMIAAAB+AAAAfgAAAMIAAADCAAAAfgAAAH4AAADCAAAAwgAAAIEAAAAAAAAAAAAAAIIAAACVAAAAlQAA
        AIIAAAAAAAAAAAAAAIEAAADCAAAAwgAAAH4AAAB+AAAAwgAAAMIAAAB+AAAAfgAAAMIAAADCAAAAfgAA
        AH4AAADCAAAAwgAAAH4AAAB+AAAAwgAAAMIAAAB+AAAAfgAAAMIAAADCAAAAgQAAAAAAAAAAAAAAggAA
        AJUAAACVAAAAggAAAAAAAAAAAAAAMgAAAIAAAACAAAAAMAAAADAAAACAAAAAgAAAADAAAAAwAAAAgAAA
        AIAAAAAwAAAAMAAAAIAAAACAAAAAMAAAADAAAACAAAAAgAAAADAAAAAwAAAAgAAAAIAAAAAyAAAAAAAA
        AAAAAACCAAAAlQAAAJUAAACAAAAAMgAAAIEAAAB/AAAAMAAAADAAAAB/AAAAfwAAADAAAAAwAAAAfwAA
        AH8AAAAwAAAAMAAAAH8AAAB/AAAAMAAAADAAAAB/AAAAfwAAADAAAAAwAAAAfwAAAH8AAAAwAAAAMAAA
        AH8AAACBAAAAMgAAAIAAAACVAAAAlQAAAH4AAAB+AAAAwgAAAMIAAAB+AAAAfgAAAMIAAADCAAAAfgAA
        AH4AAADCAAAAwgAAAH4AAAB+AAAAwgAAAMIAAAB+AAAAfgAAAMIAAADCAAAAfgAAAH4AAADCAAAAwgAA
        AH4AAAB+AAAAwgAAAMIAAAB+AAAAfgAAAJUAAACVAAAAfgAAAH4AAADCAAAAwgAAAH4AAAB+AAAAwgAA
        AMIAAAB+AAAAfgAAAMIAAADCAAAAfgAAAH4AAADCAAAAwgAAAH4AAAB+AAAAwgAAAMIAAAB+AAAAfgAA
        AMIAAADCAAAAfgAAAH4AAADCAAAAwgAAAH4AAAB+AAAAlQAAAJEAAACKAAAAMQAAAH4AAAB+AAAAMAAA
        ADAAAAB+AAAAfgAAADAAAAAwAAAAfgAAAH4AAAAwAAAAMAAAAH4AAAB+AAAAMAAAADAAAAB+AAAAfgAA
        ADAAAAAwAAAAfgAAAH4AAAAwAAAAMAAAAH4AAAB+AAAAMQAAAIoAAACRAAAATAAAAMgAAACLAAAAfwAA
        AH8AAACBAAAAgQAAAH8AAAB/AAAAgQAAAIEAAAB/AAAAfwAAAH8AAAB/AAAAfwAAAH8AAAB/AAAAfwAA
        AH8AAAB/AAAAgQAAAIEAAAB/AAAAfwAAAIEAAACBAAAAfwAAAH8AAACLAAAAyAAAAEwAAAACAAAAQwAA
        AH8AAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACBAAAAxQAAAMMAAAB+AAAAfgAA
        AMMAAADFAAAAgQAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAH8AAABDAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAxAAA
        AHwAAAB8AAAAxAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADIAAAB8AAAAxQAAAMUAAAB/AAAANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAYgAAAIQAAACDAAAAgwAA
        AIMAAACDAAAAgQAAAIAAAADEAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGMAAADGAAAAgAAA
        AH8AAACAAAAAgAAAAIAAAACAAAAAgAAAAF8AAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYwAA
        AMYAAACAAAAAfwAAAIAAAACAAAAAgAAAAIAAAAB/AAAAfwAAAIIAAACDAAAAgwAAAIMAAACDAAAAgwAA
        AIQAAABiAAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAANAAAAYgAAAIQAAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAAAIMAAACDAAAAgwAA
        AIMAAACDAAAAgwAAAMYAAABiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAgwAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2AAAANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////AAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>